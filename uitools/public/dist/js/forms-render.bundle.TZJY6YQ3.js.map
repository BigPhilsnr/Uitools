{
  "version": 3,
  "sources": ["../../../../../apps/frontend/frontend/public/js/services/forms/builder.js", "../../../../../apps/frontend/frontend/public/js/forms/FormRenderView.vue", "../../../../../apps/frontend/frontend/public/js/forms/FormInspector.vue", "../../../../../apps/frontend/frontend/public/js/forms/forms-render.bundle.js"],
  "sourcesContent": ["export const api = ({ method, args = {}, freeze=true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, freeze, callback: resolve })\n    );\n\n export const fetch = ({ method, args = {} }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, type:'GET', args, callback: resolve })\n    );\n\nexport const saveFormConfiguration = ({\n        name = \"\",\n        configuration = \"\",\n        department = \"\",\n    }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_configuration\",\n        args: {\n            name,\n            configuration,\n            department,\n        },\n    }).then(({ message }) => message);\n\nexport const getFormConfiguration = ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_form_configuration\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\nexport const getDefaultForm = ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_default_form\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const getFormsPreferences= ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_saved_forms\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const getFormsVersions= ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_form_versions\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const saveFormDoctype = ({ name = \"\", form, permissions }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_doctype\",\n        args: {\n            name,\n            form,\n            permissions,\n        },\n    }).then(({ message }) => message);\n\nexport const saveFormData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateDoctypeData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_doctype_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateFormData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_form_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateFormConfiguration = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_form_configuration\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const searchConcept = (txt) =>\n    api({\n        method: \"clinical.api.forms.form_builder.concept_query\",\n        args: {\n            txt,\n        },\n    }).then(({ message }) => message);", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getFormConfiguration,\n  saveFormData,\n} from \"../services/forms/builder.js\";\nconst __vue_script__ = {\n  name: \"FormRenderView\",\n\n  data: function () {\n    return {\n      some_data: \"This is a vue demo\",\n      date: null,\n      previewMode: false,\n      title: \"\",\n      department: \"\",\n      tableName: \"\",\n      configuration: {},\n      formData: null,\n      currentFormId:null,\n      formName: null,\n      selectedItem: null,\n      formInputData: null,\n      originalConfig: null,\n    };\n  },\n  props: {\n    selectedDoctype: { type: String },\n    selectedDoctypeReference: { type: String },\n  },\n  watch: {\n    previewMode(newVal, oldVal) {\n      if (newVal) {\n        const conf = this.configuration;\n        this.formData = conf;\n      }\n    },\n    selectedDoctype(doctype) {\n      if (doctype) {\n        this.makeDoctypeItemControl(doctype);\n      }\n    },\n  },\n  methods: {\n     clearData() {\n      const val = {};\n      const keys = Object.keys(this.formInputData);\n      keys.forEach((key) => {\n        val[key] = \"\";\n      });\n\n      this.setValues(val);\n    },\n    getFormData() {\n      const formName = frappe.get_route()[2];\n      this.tableName = formName.split(\"-\")[1];\n      this.showModal();\n    },\n    getFormInputData() {},\n    exportData() {\n      this.showModal();\n    },\n    previewForm() {\n      this.previewMode = !this.previewMode;\n    },\n    showModal() {\n      this.$refs[\"save_modal\"].show();\n    },\n    clear() {\n      this.formData = null;\n      this.formData = this.originalConfig;\n    },\n    makeSelectDoctypeControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference\"),\n          fieldtype: \"Link\",\n          fieldname: \"reference\",\n          options: \"DocType\",\n          placeholder: __(\"Search Reference\"),\n          onchange: function () {\n            if (this.value) {\n              me.selectedDoctype = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"doctype\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n      $(\"#modal-body\").find(\".input-max-width\").removeClass(\"input-max-width\");\n    },\n\n    makeDoctypeItemControl(doctype) {\n      const div = $(\"#ref-field\");\n      div.empty();\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference Id\"),\n          fieldtype: \"Link\",\n          fieldname: \"itemControl\",\n          options: doctype,\n          placeholder: __(\"Reference Id\"),\n          onchange: function () {\n            if (this.value) {\n              me.selectedDoctypeReference = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"docId\"],\n        render_input: true,\n      });\n      customer_field.toggle_label(false);\n      $(\"#modal-body\").find(\".input-max-width\").removeClass(\"input-max-width\");\n    },\n    saveForm(formData) {\n      this.hideModal();\n      saveFormData(formData).then((saved) => {\n        frappe.show_alert(\"Form Saved \" + saved.name, 5);\n        this.formInputData = null;\n       \n        this.clearData();\n      });\n    },\n    getForm(name) {\n      getFormConfiguration({ name }).then((config) => {\n        const formStringConfig = config.formdata;\n        const configObject = JSON.parse(formStringConfig);\n        console.log(configObject);\n        this.formName = config.name;\n        this.formData = configObject;\n        this.originalConfig = configObject;\n      });\n    },\n    hideModal() {\n      this.$refs[\"save_modal\"].hide();\n    },\n    navigateToList() {\n      const formName = frappe.get_route()[2];\n      this.tableName = formName.split(\"-\")[1];\n      // frappe.set_route(\"List\", this.tableName);\n    },\n    save() {\n      this.hideModal();\n      let form_content = this.formInputData;\n      form_content = JSON.stringify(form_content);\n      const form_name = this.formName;\n      const reference_doctype = this.selectedDoctype;\n      const reference_doctype_id = this.selectedDoctypeReference;\n      let doctype = \"Form Repository\";\n      let formData = {\n        doctype,\n        form_content,\n        form_name,\n        reference_doctype,\n        reference_doctype_id,\n      };\n      this.saveForm({ formData });\n    },\n  },\n  created() {\n    let formName = frappe.get_route()[2];\n\n    if(!frappe.get_route()[2]){\n      formName = frappe.get_route()[1]\n    }\n    this.getForm(formName);\n  },\n\n  mounted() {\n    this.$formEvent.$on(\"submit\", (value) => {});\n    this.$root.$on(\"bv::modal::shown\", (bvEvent, modalId) => {\n      this.makeSelectDoctypeControl();\n      console.log(\"Modal is about to be shown\", bvEvent, modalId);\n    });\n  },\n  components: {},\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"b-container\", { staticClass: \"main-page\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"spacer-left-5\" },\n      [\n        _c(\n          \"b-row\",\n          { staticClass: \"top-margin\" },\n          [\n            _c(\n              \"b-container\",\n              [\n                _c(\n                  \"b-row\",\n                  { staticClass: \"save-btn\" },\n                  [\n                    _c(\"b-col\", { staticClass: \"ref-field-input pull-right\" }),\n                    _vm._v(\" \"),\n                    _c(\"b-col\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.selectedDoctype,\n                          expression: \"selectedDoctype\"\n                        }\n                      ],\n                      ref: \"docId\",\n                      staticClass: \"ref-field-input pull-right\"\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\"b-row\", [\n          _c(\n            \"div\",\n            { staticClass: \"render-form row\" },\n            [\n              _c(\n                \"b-row\",\n                { staticClass: \"save-btn\" },\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"btn btn-primary white-text\",\n                      on: {\n                        click: function($event) {\n                          return _vm.getFormData()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n            Save Data\")]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"FormRenderer\", {\n                attrs: { \"form-configuration\": _vm.formData },\n                model: {\n                  value: _vm.formInputData,\n                  callback: function($$v) {\n                    _vm.formInputData = $$v\n                  },\n                  expression: \"formInputData\"\n                }\n              })\n            ],\n            1\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"b-modal\",\n          {\n            ref: \"save_modal\",\n            attrs: { size: \"sm\", \"hide-footer\": \"\" },\n            scopedSlots: _vm._u([\n              {\n                key: \"modal-title\",\n                fn: function() {\n                  return [_vm._v(\" Confirm save form data \")]\n                },\n                proxy: true\n              }\n            ])\n          },\n          [\n            _vm._v(\" \"),\n            _c(\n              \"b-row\",\n              { staticClass: \"modal-padding\", attrs: { id: \"modal-body\" } },\n              [\n                _c(\"b-col\", {\n                  ref: \"doctype\",\n                  staticClass: \"ref-field-input\",\n                  attrs: { cols: 12 }\n                }),\n                _vm._v(\" \"),\n                _c(\"b-col\", {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.selectedDoctype,\n                      expression: \"selectedDoctype\"\n                    }\n                  ],\n                  ref: \"docId\",\n                  staticClass: \"ref-field-input\",\n                  attrs: { cols: 12, id: \"ref-field\" }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"b-button\",\n              {\n                staticClass: \"mt-3 btn btn-primary\",\n                attrs: { block: \"\" },\n                on: {\n                  click: function($event) {\n                    return _vm.save()\n                  }\n                }\n              },\n              [_vm._v(\"Save\")]\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-1afac4c7_0\", { source: \"\\n.spacer[data-v-1afac4c7] {\\n  margin-top: 10px;\\n}\\n.space-right[data-v-1afac4c7] {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left[data-v-1afac4c7] {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn[data-v-1afac4c7] {\\n  color: white;\\n  margin-left: 8px;\\n  margin-top: 2%;\\n}\\n.spacer-left-5[data-v-1afac4c7] {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form[data-v-1afac4c7] {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.white-text[data-v-1afac4c7] {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border[data-v-1afac4c7] {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding[data-v-1afac4c7] {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page[data-v-1afac4c7] {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin[data-v-1afac4c7] {\\n  margin-top: 20px;\\n}\\n.card[data-v-1afac4c7] {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card[data-v-1afac4c7]:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n.fb-area[data-v-1afac4c7] {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n.container-fluid[data-v-1afac4c7] {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n.space-left[data-v-1afac4c7] {\\n  margin-left: 8px;\\n}\\n.ref-field-input[data-v-1afac4c7] {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width[data-v-1afac4c7] {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding[data-v-1afac4c7] {\\n  padding-left: 15px;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/forms/FormRenderView.vue\"],\"names\":[],\"mappings\":\";AA4OA;EACA,gBAAA;AACA;AACA;EACA,6BAAA;EACA,mBAAA;AACA;AACA;EACA,4BAAA;EACA,kBAAA;AACA;AACA;EACA,YAAA;EACA,gBAAA;EACA,cAAA;AACA;AACA;EACA,2BAAA;EACA,iBAAA;AACA;AACA;EACA,iBAAA;EACA,mBAAA;EACA,kBAAA;EACA,oBAAA;AACA;AACA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,0BAAA;;EAEA,gBAAA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;AACA;AAEA;EACA,4CAAA;EACA,0CAAA;EACA,gBAAA;AACA;;AAEA,uCAAA;AACA;EACA,2CAAA;AACA;AAEA;EACA,iBAAA;EACA,mBAAA;AACA;AAEA;EACA,uBAAA;EACA,mBAAA;AACA;AAEA;EACA,gBAAA;AACA;AAEA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,sBAAA;EACA,gBAAA;AACA;AACA;EACA,kBAAA;AACA\",\"file\":\"FormRenderView.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"main-page\\\">\\n    <div class=\\\"spacer-left-5\\\">\\n      <b-row class=\\\"top-margin\\\">\\n        <b-container>\\n          <b-row class=\\\"save-btn\\\">\\n            <b-col class=\\\"ref-field-input pull-right\\\" />\\n            <b-col\\n              v-show=\\\"selectedDoctype\\\"\\n              ref=\\\"docId\\\"\\n              class=\\\"ref-field-input pull-right\\\"\\n            />\\n          </b-row>\\n        </b-container>\\n      </b-row>\\n      <b-row>\\n        <div class=\\\"render-form row\\\">\\n           <b-row class=\\\"save-btn\\\">\\n            <b-button class=\\\"btn btn-primary white-text\\\" @click=\\\"getFormData()\\\">\\n              Save Data</b-button\\n            >\\n          </b-row>\\n          <FormRenderer\\n            :form-configuration=\\\"formData\\\"\\n            v-model=\\\"formInputData\\\"\\n          />\\n         \\n        </div>\\n      </b-row>\\n      <b-modal ref=\\\"save_modal\\\" size=\\\"sm\\\" hide-footer>\\n        <template #modal-title> Confirm save form data </template>\\n        <b-row class=\\\"modal-padding\\\" id=\\\"modal-body\\\">\\n          <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\">\\n            <!-- {{ tableName }}\\n          <br />\\n          {{ formInputData }} -->\\n          </b-col>\\n\\n          <b-col\\n            :cols=\\\"12\\\"\\n            v-show=\\\"selectedDoctype\\\"\\n            ref=\\\"docId\\\"\\n            id=\\\"ref-field\\\"\\n            class=\\\"ref-field-input\\\"\\n          />\\n        </b-row>\\n\\n        <b-button class=\\\"mt-3 btn btn-primary\\\" block @click=\\\"save()\\\"\\n          >Save</b-button\\n        >\\n      </b-modal>\\n    </div>\\n  </b-container>\\n</template>\\n<script>\\nimport {\\n  getFormConfiguration,\\n  saveFormData,\\n} from \\\"../services/forms/builder.js\\\";\\nexport default {\\n  name: \\\"FormRenderView\\\",\\n\\n  data: function () {\\n    return {\\n      some_data: \\\"This is a vue demo\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      tableName: \\\"\\\",\\n      configuration: {},\\n      formData: null,\\n      currentFormId:null,\\n      formName: null,\\n      selectedItem: null,\\n      formInputData: null,\\n      originalConfig: null,\\n    };\\n  },\\n  props: {\\n    selectedDoctype: { type: String },\\n    selectedDoctypeReference: { type: String },\\n  },\\n  watch: {\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        this.formData = conf;\\n      }\\n    },\\n    selectedDoctype(doctype) {\\n      if (doctype) {\\n        this.makeDoctypeItemControl(doctype);\\n      }\\n    },\\n  },\\n  methods: {\\n     clearData() {\\n      const val = {};\\n      const keys = Object.keys(this.formInputData);\\n      keys.forEach((key) => {\\n        val[key] = \\\"\\\";\\n      });\\n\\n      this.setValues(val);\\n    },\\n    getFormData() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      this.showModal();\\n    },\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      this.$refs[\\\"save_modal\\\"].show();\\n    },\\n    clear() {\\n      this.formData = null;\\n      this.formData = this.originalConfig;\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"DocType\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n\\n    makeDoctypeItemControl(doctype) {\\n      const div = $(\\\"#ref-field\\\");\\n      div.empty();\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference Id\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"itemControl\\\",\\n          options: doctype,\\n          placeholder: __(\\\"Reference Id\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctypeReference = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"docId\\\"],\\n        render_input: true,\\n      });\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    saveForm(formData) {\\n      this.hideModal();\\n      saveFormData(formData).then((saved) => {\\n        frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n        this.formInputData = null;\\n       \\n        this.clearData();\\n      });\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        console.log(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    navigateToList() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      // frappe.set_route(\\\"List\\\", this.tableName);\\n    },\\n    save() {\\n      this.hideModal();\\n      let form_content = this.formInputData;\\n      form_content = JSON.stringify(form_content);\\n      const form_name = this.formName;\\n      const reference_doctype = this.selectedDoctype;\\n      const reference_doctype_id = this.selectedDoctypeReference;\\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        form_content,\\n        form_name,\\n        reference_doctype,\\n        reference_doctype_id,\\n      };\\n      this.saveForm({ formData });\\n    },\\n  },\\n  created() {\\n    let formName = frappe.get_route()[2];\\n\\n    if(!frappe.get_route()[2]){\\n      formName = frappe.get_route()[1]\\n    }\\n    this.getForm(formName);\\n  },\\n\\n  mounted() {\\n    this.$formEvent.$on(\\\"submit\\\", (value) => {});\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.makeSelectDoctypeControl();\\n      console.log(\\\"Modal is about to be shown\\\", bvEvent, modalId);\\n    });\\n  },\\n  components: {},\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn {\\n  color: white;\\n  margin-left: 8px;\\n  margin-top: 2%;\\n}\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.white-text {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.space-left {\\n  margin-left: 8px;\\n}\\n\\n.ref-field-input {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding {\\n  padding-left: 15px;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-1afac4c7\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"main-page\\\">\\n    <div class=\\\"spacer-left-5\\\">\\n      <b-row class=\\\"top-margin\\\">\\n        <b-container>\\n          <b-row class=\\\"save-btn\\\">\\n            <b-col class=\\\"ref-field-input pull-right\\\" />\\n            <b-col\\n              v-show=\\\"selectedDoctype\\\"\\n              ref=\\\"docId\\\"\\n              class=\\\"ref-field-input pull-right\\\"\\n            />\\n          </b-row>\\n        </b-container>\\n      </b-row>\\n      <b-row>\\n        <div class=\\\"render-form row\\\">\\n           <b-row class=\\\"save-btn\\\">\\n            <b-button class=\\\"btn btn-primary white-text\\\" @click=\\\"getFormData()\\\">\\n              Save Data</b-button\\n            >\\n          </b-row>\\n          <FormRenderer\\n            :form-configuration=\\\"formData\\\"\\n            v-model=\\\"formInputData\\\"\\n          />\\n         \\n        </div>\\n      </b-row>\\n      <b-modal ref=\\\"save_modal\\\" size=\\\"sm\\\" hide-footer>\\n        <template #modal-title> Confirm save form data </template>\\n        <b-row class=\\\"modal-padding\\\" id=\\\"modal-body\\\">\\n          <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\">\\n            <!-- {{ tableName }}\\n          <br />\\n          {{ formInputData }} -->\\n          </b-col>\\n\\n          <b-col\\n            :cols=\\\"12\\\"\\n            v-show=\\\"selectedDoctype\\\"\\n            ref=\\\"docId\\\"\\n            id=\\\"ref-field\\\"\\n            class=\\\"ref-field-input\\\"\\n          />\\n        </b-row>\\n\\n        <b-button class=\\\"mt-3 btn btn-primary\\\" block @click=\\\"save()\\\"\\n          >Save</b-button\\n        >\\n      </b-modal>\\n    </div>\\n  </b-container>\\n</template>\\n<script>\\nimport {\\n  getFormConfiguration,\\n  saveFormData,\\n} from \\\"../services/forms/builder.js\\\";\\nexport default {\\n  name: \\\"FormRenderView\\\",\\n\\n  data: function () {\\n    return {\\n      some_data: \\\"This is a vue demo\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      tableName: \\\"\\\",\\n      configuration: {},\\n      formData: null,\\n      currentFormId:null,\\n      formName: null,\\n      selectedItem: null,\\n      formInputData: null,\\n      originalConfig: null,\\n    };\\n  },\\n  props: {\\n    selectedDoctype: { type: String },\\n    selectedDoctypeReference: { type: String },\\n  },\\n  watch: {\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        this.formData = conf;\\n      }\\n    },\\n    selectedDoctype(doctype) {\\n      if (doctype) {\\n        this.makeDoctypeItemControl(doctype);\\n      }\\n    },\\n  },\\n  methods: {\\n     clearData() {\\n      const val = {};\\n      const keys = Object.keys(this.formInputData);\\n      keys.forEach((key) => {\\n        val[key] = \\\"\\\";\\n      });\\n\\n      this.setValues(val);\\n    },\\n    getFormData() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      this.showModal();\\n    },\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      this.$refs[\\\"save_modal\\\"].show();\\n    },\\n    clear() {\\n      this.formData = null;\\n      this.formData = this.originalConfig;\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"DocType\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n\\n    makeDoctypeItemControl(doctype) {\\n      const div = $(\\\"#ref-field\\\");\\n      div.empty();\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference Id\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"itemControl\\\",\\n          options: doctype,\\n          placeholder: __(\\\"Reference Id\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctypeReference = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"docId\\\"],\\n        render_input: true,\\n      });\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    saveForm(formData) {\\n      this.hideModal();\\n      saveFormData(formData).then((saved) => {\\n        frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n        this.formInputData = null;\\n       \\n        this.clearData();\\n      });\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        console.log(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    navigateToList() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      // frappe.set_route(\\\"List\\\", this.tableName);\\n    },\\n    save() {\\n      this.hideModal();\\n      let form_content = this.formInputData;\\n      form_content = JSON.stringify(form_content);\\n      const form_name = this.formName;\\n      const reference_doctype = this.selectedDoctype;\\n      const reference_doctype_id = this.selectedDoctypeReference;\\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        form_content,\\n        form_name,\\n        reference_doctype,\\n        reference_doctype_id,\\n      };\\n      this.saveForm({ formData });\\n    },\\n  },\\n  created() {\\n    let formName = frappe.get_route()[2];\\n\\n    if(!frappe.get_route()[2]){\\n      formName = frappe.get_route()[1]\\n    }\\n    this.getForm(formName);\\n  },\\n\\n  mounted() {\\n    this.$formEvent.$on(\\\"submit\\\", (value) => {});\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.makeSelectDoctypeControl();\\n      console.log(\\\"Modal is about to be shown\\\", bvEvent, modalId);\\n    });\\n  },\\n  components: {},\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn {\\n  color: white;\\n  margin-left: 8px;\\n  margin-top: 2%;\\n}\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.white-text {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.space-left {\\n  margin-left: 8px;\\n}\\n\\n.ref-field-input {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding {\\n  padding-left: 15px;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getFormConfiguration,\n  getFormsVersions,\n  saveFormData,\n} from \"../services/forms/builder.js\";\nconst __vue_script__ = {\n  name: \"FormRenderView\",\n\n  data: function () {\n    return {\n      some_data: \"This is a vue demo\",\n      date: null,\n      previewMode: false,\n      title: \"\",\n      department: \"\",\n      tableName: \"\",\n      configuration: {},\n      formData: null,\n      currentFormId: null,\n      formName: null,\n      selectedItem: null,\n      formInputData: null,\n      originalConfig: null,\n      sectionFields: [\"headline\", \"subHeadline\", \"controls\"],\n      versions: [],\n    };\n  },\n  props: {\n    selectedDoctype: { type: String },\n    selectedDoctypeReference: { type: String },\n  },\n  watch: {\n    previewMode(newVal, oldVal) {\n      if (newVal) {\n        const conf = this.configuration;\n        this.formData = conf;\n      }\n    },\n    selectedDoctype(doctype) {\n      if (doctype) {\n        this.makeDoctypeItemControl(doctype);\n      }\n    },\n  },\n  methods: {\n\n    preview(configuration){\n    try{\n      let conf = JSON.parse(configuration);\n      this.formData = conf;\n      \n\n    }catch(e){\n     frappe.show_alert(\"Error configuration file has a problem\")\n    }\n    },\n    copyToClipBoard(text) {\n  \n    var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  \n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    frappe.show_alert(\"Copied to clipboard\");\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n     frappe.show_alert(\"Error\")\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n},\n    formatConfig(config) {\n      var dd = config.replaceAll(\"<br>\", \"\");\n      var validJson = true;\n      try {\n        return Object.keys(JSON.parse(dd).controls).length;\n      } catch (e) {\n        return e;\n      }\n      return dd;\n    },\n    openLink(item) {\n      //app/form-design\n      const host = window.location.href.split(\"/app\")[0];\n      const url = host + \"/app/dictionary-concept/\" + item;\n      window.open(url, \"_blank\");\n    },\n    clearData() {\n      const val = {};\n      const keys = Object.keys(this.formInputData);\n      keys.forEach((key) => {\n        val[key] = \"\";\n      });\n\n      this.setValues(val);\n    },\n    getFormData() {\n      const formName = frappe.get_route()[2];\n      this.tableName = formName.split(\"-\")[1];\n      this.showModal();\n    },\n    getFormInputData() {},\n    exportData() {\n      this.showModal();\n    },\n    previewForm() {\n      this.previewMode = !this.previewMode;\n    },\n    showModal() {\n      this.$refs[\"save_modal\"].show();\n    },\n    clear() {\n      this.formData = null;\n      this.formData = this.originalConfig;\n    },\n    makeSelectDoctypeControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference\"),\n          fieldtype: \"Link\",\n          fieldname: \"reference\",\n          options: \"DocType\",\n          placeholder: __(\"Search Reference\"),\n          onchange: function () {\n            if (this.value) {\n              me.selectedDoctype = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"doctype\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n      $(\"#modal-body\").find(\".input-max-width\").removeClass(\"input-max-width\");\n    },\n\n    makeDoctypeItemControl(doctype) {\n      const div = $(\"#ref-field\");\n      div.empty();\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference Id\"),\n          fieldtype: \"Link\",\n          fieldname: \"itemControl\",\n          options: doctype,\n          placeholder: __(\"Reference Id\"),\n          onchange: function () {\n            if (this.value) {\n              me.selectedDoctypeReference = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"docId\"],\n        render_input: true,\n      });\n      customer_field.toggle_label(false);\n      $(\"#modal-body\").find(\".input-max-width\").removeClass(\"input-max-width\");\n    },\n    saveForm(formData) {\n      this.hideModal();\n      saveFormData(formData).then((saved) => {\n        frappe.show_alert(\"Form Saved \" + saved.name, 5);\n        this.formInputData = null;\n\n        this.clearData();\n      });\n    },\n    getCurrentFormVersions(name) {\n      getFormsVersions({ name }).then((response) => (this.versions = response));\n    },\n    getForm(name) {\n      getFormConfiguration({ name }).then((config) => {\n        const formStringConfig = config.formdata;\n        const configObject = JSON.parse(formStringConfig);\n        console.log(configObject);\n        this.formName = config.name;\n        this.formData = configObject;\n        this.originalConfig = configObject;\n      });\n    },\n    hideModal() {\n      this.$refs[\"save_modal\"].hide();\n    },\n    navigateToList() {\n      const formName = frappe.get_route()[2];\n      this.tableName = formName.split(\"-\")[1];\n      // frappe.set_route(\"List\", this.tableName);\n    },\n    save() {\n      this.hideModal();\n      let form_content = this.formInputData;\n      form_content = JSON.stringify(form_content);\n      const form_name = this.formName;\n      const reference_doctype = this.selectedDoctype;\n      const reference_doctype_id = this.selectedDoctypeReference;\n      let doctype = \"Form Repository\";\n      let formData = {\n        doctype,\n        form_content,\n        form_name,\n        reference_doctype,\n        reference_doctype_id,\n      };\n      this.saveForm({ formData });\n    },\n  },\n  created() {\n    let formName = frappe.get_route()[2];\n\n    if (!frappe.get_route()[2]) {\n      formName = frappe.get_route()[1];\n    }\n    this.getForm(formName);\n    this.getCurrentFormVersions(formName);\n  },\n\n  mounted() {\n    this.$formEvent.$on(\"submit\", (value) => {});\n    this.$root.$on(\"bv::modal::shown\", (bvEvent, modalId) => {\n      this.makeSelectDoctypeControl();\n      console.log(\"Modal is about to be shown\", bvEvent, modalId);\n    });\n  },\n  components: {},\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"main-page\" },\n    [\n      _c(\n        \"b-card\",\n        { attrs: { \"no-body\": \"\" } },\n        [\n          _c(\n            \"b-tabs\",\n            { attrs: { card: \"\" } },\n            [\n              _c(\n                \"b-tab\",\n                { attrs: { title: \"Form Preview\", active: \"\" } },\n                [\n                  _c(\"b-card-text\", [\n                    _c(\n                      \"div\",\n                      { staticClass: \"spacer-left-5\" },\n                      [\n                        _c(\n                          \"b-row\",\n                          {},\n                          [\n                            _c(\n                              \"b-container\",\n                              [\n                                _c(\n                                  \"b-row\",\n                                  { staticClass: \"save-btn\" },\n                                  [\n                                    _c(\"b-col\", {\n                                      staticClass: \"ref-field-input pull-right\"\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"b-col\", {\n                                      directives: [\n                                        {\n                                          name: \"show\",\n                                          rawName: \"v-show\",\n                                          value: _vm.selectedDoctype,\n                                          expression: \"selectedDoctype\"\n                                        }\n                                      ],\n                                      ref: \"docId\",\n                                      staticClass: \"ref-field-input pull-right\"\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"b-row\", [\n                          _c(\n                            \"div\",\n                            { staticClass: \"render-form row\" },\n                            [\n                              _c(\n                                \"b-row\",\n                                {\n                                  staticClass: \"save-btn mr-3\",\n                                  staticStyle: { width: \"100%\" }\n                                },\n                                [\n                                  _c(\"b-col\"),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"b-button\",\n                                    {\n                                      staticClass: \"btn btn-primary white-text\",\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.getFormData()\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"\\n                    Save Data\")]\n                                  )\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"FormRenderer\", {\n                                attrs: { \"form-configuration\": _vm.formData },\n                                model: {\n                                  value: _vm.formInputData,\n                                  callback: function($$v) {\n                                    _vm.formInputData = $$v\n                                  },\n                                  expression: \"formInputData\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-modal\",\n                          {\n                            ref: \"save_modal\",\n                            attrs: { size: \"sm\", \"hide-footer\": \"\" },\n                            scopedSlots: _vm._u([\n                              {\n                                key: \"modal-title\",\n                                fn: function() {\n                                  return [_vm._v(\" Confirm save form data \")]\n                                },\n                                proxy: true\n                              }\n                            ])\n                          },\n                          [\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-row\",\n                              {\n                                staticClass: \"modal-padding\",\n                                attrs: { id: \"modal-body\" }\n                              },\n                              [\n                                _c(\"b-col\", {\n                                  ref: \"doctype\",\n                                  staticClass: \"ref-field-input\",\n                                  attrs: { cols: 12 }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"b-col\", {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.selectedDoctype,\n                                      expression: \"selectedDoctype\"\n                                    }\n                                  ],\n                                  ref: \"docId\",\n                                  staticClass: \"ref-field-input\",\n                                  attrs: { cols: 12, id: \"ref-field\" }\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-button\",\n                              {\n                                staticClass: \"mt-0 btn btn-primary\",\n                                attrs: { block: \"\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.save()\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Save\")]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"b-tab\",\n                { attrs: { title: \"Form Inspector\" } },\n                [\n                  _c(\n                    \"b-card-text\",\n                    [\n                      _vm.formData\n                        ? _c(\n                            \"b-row\",\n                            {\n                              staticClass: \"m-4\",\n                              staticStyle: { width: \"100%\" }\n                            },\n                            [\n                              _c(\n                                \"div\",\n                                {\n                                  staticClass: \"accordion\",\n                                  staticStyle: { width: \"100%\" },\n                                  attrs: { role: \"tablist\" }\n                                },\n                                [\n                                  _c(\n                                    \"b-card\",\n                                    {\n                                      staticClass: \"mb-1\",\n                                      staticStyle: { width: \"100%\" },\n                                      attrs: { \"no-body\": \"\" }\n                                    },\n                                    [\n                                      _c(\n                                        \"b-card-header\",\n                                        {\n                                          staticClass: \"p-1\",\n                                          attrs: {\n                                            \"header-tag\": \"header\",\n                                            role: \"tab\"\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"b-button\",\n                                            {\n                                              directives: [\n                                                {\n                                                  name: \"b-toggle\",\n                                                  rawName:\n                                                    \"v-b-toggle.accordion-1\",\n                                                  modifiers: {\n                                                    \"accordion-1\": true\n                                                  }\n                                                }\n                                              ],\n                                              attrs: {\n                                                block: \"\",\n                                                variant: \"primary\"\n                                              }\n                                            },\n                                            [_vm._v(\"Form Config\")]\n                                          )\n                                        ],\n                                        1\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"b-collapse\",\n                                        {\n                                          attrs: {\n                                            id: \"accordion-1\",\n                                            visible: \"\",\n                                            accordion: \"my-accordion\",\n                                            role: \"tabpanel\"\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"b-card-body\",\n                                            [\n                                              _c(\n                                                \"b-card-text\",\n                                                [\n                                                  _c(\"b-table\", {\n                                                    attrs: {\n                                                      items: [\n                                                        _vm.formData.formConfig\n                                                      ]\n                                                    }\n                                                  })\n                                                ],\n                                                1\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        ],\n                                        1\n                                      )\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"b-card\",\n                                    {\n                                      staticClass: \"mb-1\",\n                                      attrs: { \"no-body\": \"\" }\n                                    },\n                                    [\n                                      _c(\n                                        \"b-card-header\",\n                                        {\n                                          staticClass: \"p-1\",\n                                          attrs: {\n                                            \"header-tag\": \"header\",\n                                            role: \"tab\"\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"b-button\",\n                                            {\n                                              directives: [\n                                                {\n                                                  name: \"b-toggle\",\n                                                  rawName:\n                                                    \"v-b-toggle.accordion-2\",\n                                                  modifiers: {\n                                                    \"accordion-2\": true\n                                                  }\n                                                }\n                                              ],\n                                              attrs: {\n                                                block: \"\",\n                                                variant: \"primary\"\n                                              }\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"Sections\\n                    \"\n                                              ),\n                                              _c(\n                                                \"b-badge\",\n                                                { attrs: { variant: \"light\" } },\n                                                [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      Object.keys(\n                                                        _vm.formData.sections\n                                                      ).length\n                                                    )\n                                                  )\n                                                ]\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        ],\n                                        1\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"b-collapse\",\n                                        {\n                                          attrs: {\n                                            id: \"accordion-2\",\n                                            accordion: \"my-accordion\",\n                                            role: \"tabpanel\"\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"b-card-body\",\n                                            [\n                                              _c(\n                                                \"b-list-group\",\n                                                _vm._l(\n                                                  Object.keys(\n                                                    _vm.formData.sections\n                                                  ),\n                                                  function(section) {\n                                                    return _c(\n                                                      \"b-list-group-item\",\n                                                      {\n                                                        key: section,\n                                                        attrs: {\n                                                          id: \"accordion-100\",\n                                                          visible: \"\"\n                                                        }\n                                                      },\n                                                      [\n                                                        _c(\n                                                          \"b-row\",\n                                                          [\n                                                            _c(\"h4\", [\n                                                              _vm._v(\n                                                                _vm._s(\n                                                                  _vm.formData\n                                                                    .sections[\n                                                                    section\n                                                                  ].headline\n                                                                )\n                                                              )\n                                                            ]),\n                                                            _vm._v(\" \"),\n                                                            _c(\"b-col\"),\n                                                            _vm._v(\" \"),\n                                                            _c(\n                                                              \"b-button\",\n                                                              {\n                                                                attrs: {\n                                                                  variant:\n                                                                    \"danger\"\n                                                                }\n                                                              },\n                                                              [\n                                                                _vm._v(\n                                                                  \" Remove \"\n                                                                )\n                                                              ]\n                                                            )\n                                                          ],\n                                                          1\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        _c(\"b-table\", {\n                                                          attrs: {\n                                                            stacked: true,\n                                                            items: [\n                                                              _vm.formData\n                                                                .sections[\n                                                                section\n                                                              ]\n                                                            ],\n                                                            fields:\n                                                              _vm.sectionFields\n                                                          },\n                                                          scopedSlots: _vm._u(\n                                                            [\n                                                              {\n                                                                key:\n                                                                  \"cell(controls)\",\n                                                                fn: function(\n                                                                  data\n                                                                ) {\n                                                                  return _vm._l(\n                                                                    data.value,\n                                                                    function(\n                                                                      item\n                                                                    ) {\n                                                                      return _c(\n                                                                        \"b-button\",\n                                                                        {\n                                                                          key: item,\n                                                                          staticClass:\n                                                                            \"m-1\",\n                                                                          attrs: {\n                                                                            variant:\n                                                                              \"primary\"\n                                                                          },\n                                                                          on: {\n                                                                            click: function(\n                                                                              $event\n                                                                            ) {\n                                                                              return _vm.openLink(\n                                                                                item\n                                                                              )\n                                                                            }\n                                                                          }\n                                                                        },\n                                                                        [\n                                                                          _vm._v(\n                                                                            _vm._s(\n                                                                              item\n                                                                            ) +\n                                                                              \"\\n                            \"\n                                                                          )\n                                                                        ]\n                                                                      )\n                                                                    }\n                                                                  )\n                                                                }\n                                                              }\n                                                            ],\n                                                            null,\n                                                            true\n                                                          )\n                                                        })\n                                                      ],\n                                                      1\n                                                    )\n                                                  }\n                                                ),\n                                                1\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        ],\n                                        1\n                                      )\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"b-card\",\n                                    {\n                                      staticClass: \"mb-1\",\n                                      attrs: { \"no-body\": \"\" }\n                                    },\n                                    [\n                                      _c(\n                                        \"b-card-header\",\n                                        {\n                                          staticClass: \"p-1\",\n                                          attrs: {\n                                            \"header-tag\": \"header\",\n                                            role: \"tab\"\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"b-button\",\n                                            {\n                                              directives: [\n                                                {\n                                                  name: \"b-toggle\",\n                                                  rawName:\n                                                    \"v-b-toggle.accordion-3\",\n                                                  modifiers: {\n                                                    \"accordion-3\": true\n                                                  }\n                                                }\n                                              ],\n                                              attrs: {\n                                                block: \"\",\n                                                variant: \"primary\"\n                                              }\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"Concepts\\n                    \"\n                                              ),\n                                              _c(\n                                                \"b-badge\",\n                                                { attrs: { variant: \"light\" } },\n                                                [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      Object.keys(\n                                                        _vm.formData.controls\n                                                      ).length\n                                                    )\n                                                  )\n                                                ]\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        ],\n                                        1\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"b-collapse\",\n                                        {\n                                          attrs: {\n                                            id: \"accordion-3\",\n                                            accordion: \"my-accordion\",\n                                            role: \"tabpanel\"\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"b-card-body\",\n                                            [\n                                              _c(\n                                                \"b-list-group\",\n                                                _vm._l(\n                                                  Object.keys(\n                                                    _vm.formData.controls\n                                                  ),\n                                                  function(control) {\n                                                    return _c(\n                                                      \"b-list-group-item\",\n                                                      { key: control },\n                                                      [\n                                                        _c(\n                                                          \"b-row\",\n                                                          {\n                                                            staticStyle: {\n                                                              width: \"100%\"\n                                                            }\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              \"\\n                          \" +\n                                                                _vm._s(\n                                                                  control\n                                                                ) +\n                                                                \" \"\n                                                            ),\n                                                            _c(\"b-col\"),\n                                                            _vm._v(\" \"),\n                                                            _c(\n                                                              \"b-button\",\n                                                              {\n                                                                attrs: {\n                                                                  variant:\n                                                                    \"danger\"\n                                                                }\n                                                              },\n                                                              [\n                                                                _vm._v(\n                                                                  \" Remove\"\n                                                                )\n                                                              ]\n                                                            )\n                                                          ],\n                                                          1\n                                                        )\n                                                      ],\n                                                      1\n                                                    )\n                                                  }\n                                                ),\n                                                1\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        ],\n                                        1\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"b-tab\",\n                { attrs: { title: \"Form Versions\" } },\n                [\n                  _c(\n                    \"b-card-text\",\n                    [\n                      _c(\n                        \"b-list-group\",\n                        _vm._l(_vm.versions, function(version) {\n                          return _c(\n                            \"b-list-group-item\",\n                            { key: version },\n                            [\n                              JSON.parse(version.data).changed\n                                ? _c(\"span\", [\n                                    _vm._v(\n                                      \" \" + _vm._s(version.modified) + \" :\"\n                                    )\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              JSON.parse(version.data).changed\n                                ? _c(\n                                    \"b-badge\",\n                                    { attrs: { variant: \"primary\", pill: \"\" } },\n                                    [\n                                      _vm._v(\n                                        \"\\n                \" +\n                                          _vm._s(\n                                            _vm.formatConfig(\n                                              JSON.parse(version.data).changed[\n                                                \"0\"\n                                              ][\"1\"]\n                                            )\n                                          ) +\n                                          \"\\n              \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              JSON.parse(version.data).changed\n                                ? _c(\n                                    \"b-button\",\n                                    {\n                                      on: {\n                                        click: function($event) {\n                                          _vm.copyToClipBoard(\n                                            JSON.parse(version.data).changed[\n                                              \"0\"\n                                            ][\"1\"]\n                                          )\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\" Copy JSON To Clipboard\")]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              JSON.parse(version.data).changed\n                                ? _c(\n                                    \"b-button\",\n                                    {\n                                      on: {\n                                        click: function($event) {\n                                          _vm.preview(\n                                            JSON.parse(version.data).changed[\n                                              \"0\"\n                                            ][\"1\"]\n                                          )\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\" Preview\")]\n                                  )\n                                : _c(\"span\", [\n                                    _vm._v(\n                                      _vm._s(version.modified) +\n                                        \" :  Configuration not changed\"\n                                    )\n                                  ])\n                            ],\n                            1\n                          )\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-b47e1b9a_0\", { source: \"\\n.spacer[data-v-b47e1b9a] {\\n  margin-top: 10px;\\n}\\n.space-right[data-v-b47e1b9a] {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left[data-v-b47e1b9a] {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn[data-v-b47e1b9a] {\\n  color: white;\\n  margin-left: 8px;\\n}\\n.spacer-left-5[data-v-b47e1b9a] {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form[data-v-b47e1b9a] {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.white-text[data-v-b47e1b9a] {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border[data-v-b47e1b9a] {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding[data-v-b47e1b9a] {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page[data-v-b47e1b9a] {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin[data-v-b47e1b9a] {\\n  margin-top: 20px;\\n}\\n.card[data-v-b47e1b9a] {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card[data-v-b47e1b9a]:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n.fb-area[data-v-b47e1b9a] {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n.container-fluid[data-v-b47e1b9a] {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n.space-left[data-v-b47e1b9a] {\\n  margin-left: 8px;\\n}\\n.ref-field-input[data-v-b47e1b9a] {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width[data-v-b47e1b9a] {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding[data-v-b47e1b9a] {\\n  padding-left: 15px;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/forms/FormInspector.vue\"],\"names\":[],\"mappings\":\";AAmbA;EACA,gBAAA;AACA;AACA;EACA,6BAAA;EACA,mBAAA;AACA;AACA;EACA,4BAAA;EACA,kBAAA;AACA;AACA;EACA,YAAA;EACA,gBAAA;AACA;AACA;EACA,2BAAA;EACA,iBAAA;AACA;AACA;EACA,iBAAA;EACA,mBAAA;EACA,kBAAA;EACA,oBAAA;AACA;AACA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,0BAAA;;EAEA,gBAAA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;AACA;AAEA;EACA,4CAAA;EACA,0CAAA;EACA,gBAAA;AACA;;AAEA,uCAAA;AACA;EACA,2CAAA;AACA;AAEA;EACA,iBAAA;EACA,mBAAA;AACA;AAEA;EACA,uBAAA;EACA,mBAAA;AACA;AAEA;EACA,gBAAA;AACA;AAEA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,sBAAA;EACA,gBAAA;AACA;AACA;EACA,kBAAA;AACA\",\"file\":\"FormInspector.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"main-page\\\">\\n    <b-card no-body>\\n      <b-tabs card>\\n        <b-tab title=\\\"Form Preview\\\" active>\\n          <b-card-text>\\n            <div class=\\\"spacer-left-5\\\">\\n              <b-row class=\\\"\\\">\\n                <b-container>\\n                  <b-row class=\\\"save-btn\\\">\\n                    <b-col class=\\\"ref-field-input pull-right\\\" />\\n                    <b-col\\n                      v-show=\\\"selectedDoctype\\\"\\n                      ref=\\\"docId\\\"\\n                      class=\\\"ref-field-input pull-right\\\"\\n                    />\\n                  </b-row>\\n                </b-container>\\n              </b-row>\\n              <b-row>\\n                <div class=\\\"render-form row\\\">\\n                  <b-row class=\\\"save-btn mr-3\\\" style=\\\"width: 100%\\\">\\n                    <b-col></b-col>\\n                    <b-button\\n                      class=\\\"btn btn-primary white-text\\\"\\n                      @click=\\\"getFormData()\\\"\\n                    >\\n                      Save Data</b-button\\n                    >\\n                  </b-row>\\n                  <FormRenderer\\n                    :form-configuration=\\\"formData\\\"\\n                    v-model=\\\"formInputData\\\"\\n                  />\\n                </div>\\n              </b-row>\\n              <b-modal ref=\\\"save_modal\\\" size=\\\"sm\\\" hide-footer>\\n                <template #modal-title> Confirm save form data </template>\\n                <b-row class=\\\"modal-padding\\\" id=\\\"modal-body\\\">\\n                  <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\">\\n                    <!-- {{ tableName }}\\n          <br />\\n          {{ formInputData }} -->\\n                  </b-col>\\n\\n                  <b-col\\n                    :cols=\\\"12\\\"\\n                    v-show=\\\"selectedDoctype\\\"\\n                    ref=\\\"docId\\\"\\n                    id=\\\"ref-field\\\"\\n                    class=\\\"ref-field-input\\\"\\n                  />\\n                </b-row>\\n\\n                <b-button class=\\\"mt-0 btn btn-primary\\\" block @click=\\\"save()\\\"\\n                  >Save</b-button\\n                >\\n              </b-modal>\\n            </div>\\n          </b-card-text>\\n        </b-tab>\\n        <b-tab title=\\\"Form Inspector\\\">\\n          <b-card-text>\\n            <b-row style=\\\"width: 100%\\\" class=\\\"m-4\\\" v-if=\\\"formData\\\">\\n              <div class=\\\"accordion\\\" role=\\\"tablist\\\" style=\\\"width: 100%\\\">\\n                <b-card no-body class=\\\"mb-1\\\" style=\\\"width: 100%\\\">\\n                  <b-card-header header-tag=\\\"header\\\" class=\\\"p-1\\\" role=\\\"tab\\\">\\n                    <b-button block v-b-toggle.accordion-1 variant=\\\"primary\\\"\\n                      >Form Config</b-button\\n                    >\\n                  </b-card-header>\\n                  <b-collapse\\n                    id=\\\"accordion-1\\\"\\n                    visible\\n                    accordion=\\\"my-accordion\\\"\\n                    role=\\\"tabpanel\\\"\\n                  >\\n                    <b-card-body>\\n                      <b-card-text>\\n                        <b-table :items=\\\"[formData.formConfig]\\\"></b-table>\\n                      </b-card-text>\\n                    </b-card-body>\\n                  </b-collapse>\\n                </b-card>\\n\\n                <b-card no-body class=\\\"mb-1\\\">\\n                  <b-card-header header-tag=\\\"header\\\" class=\\\"p-1\\\" role=\\\"tab\\\">\\n                    <b-button block v-b-toggle.accordion-2 variant=\\\"primary\\\"\\n                      >Sections\\n                      <b-badge variant=\\\"light\\\">{{\\n                        Object.keys(formData.sections).length\\n                      }}</b-badge></b-button\\n                    >\\n                  </b-card-header>\\n                  <b-collapse\\n                    id=\\\"accordion-2\\\"\\n                    accordion=\\\"my-accordion\\\"\\n                    role=\\\"tabpanel\\\"\\n                  >\\n                    <b-card-body>\\n                      <b-list-group>\\n                        <b-list-group-item\\n                          id=\\\"accordion-100\\\"\\n                          visible\\n                          v-for=\\\"section in Object.keys(formData.sections)\\\"\\n                          :key=\\\"section\\\"\\n                        >\\n                          <b-row>\\n                            <h4>{{ formData.sections[section].headline }}</h4>\\n                            <b-col></b-col>\\n                            <b-button variant=\\\"danger\\\"> Remove </b-button>\\n                          </b-row>\\n                          <b-table\\n                            :stacked=\\\"true\\\"\\n                            :items=\\\"[formData.sections[section]]\\\"\\n                            :fields=\\\"sectionFields\\\"\\n                          >\\n                            <template #cell(controls)=\\\"data\\\">\\n                              <b-button\\n                                variant=\\\"primary\\\"\\n                                class=\\\"m-1\\\"\\n                                v-for=\\\"item in data.value\\\"\\n                                :key=\\\"item\\\"\\n                                @click=\\\"openLink(item)\\\"\\n                                >{{ item }}\\n                              </b-button>\\n                            </template>\\n                          </b-table>\\n                        </b-list-group-item>\\n                      </b-list-group>\\n                    </b-card-body>\\n                  </b-collapse>\\n                </b-card>\\n\\n                <b-card no-body class=\\\"mb-1\\\">\\n                  <b-card-header header-tag=\\\"header\\\" class=\\\"p-1\\\" role=\\\"tab\\\">\\n                    <b-button block v-b-toggle.accordion-3 variant=\\\"primary\\\"\\n                      >Concepts\\n                      <b-badge variant=\\\"light\\\">{{\\n                        Object.keys(formData.controls).length\\n                      }}</b-badge>\\n                    </b-button>\\n                  </b-card-header>\\n                  <b-collapse\\n                    id=\\\"accordion-3\\\"\\n                    accordion=\\\"my-accordion\\\"\\n                    role=\\\"tabpanel\\\"\\n                  >\\n                    <b-card-body>\\n                      <b-list-group>\\n                        <b-list-group-item\\n                          v-for=\\\"control in Object.keys(formData.controls)\\\"\\n                          :key=\\\"control\\\"\\n                        >\\n                          <b-row style=\\\"width: 100%\\\">\\n                            {{ control }} <b-col></b-col>\\n                            <b-button variant=\\\"danger\\\"> Remove</b-button>\\n                          </b-row>\\n                        </b-list-group-item>\\n                      </b-list-group>\\n                    </b-card-body>\\n                  </b-collapse>\\n                </b-card>\\n              </div>\\n            </b-row></b-card-text\\n          >\\n        </b-tab>\\n\\n        <b-tab title=\\\"Form Versions\\\">\\n          <b-card-text>\\n            <b-list-group>\\n              <b-list-group-item\\n                v-for=\\\"version in versions\\\"\\n                :key=\\\"version\\\"\\n                 \\n              >\\n                <span v-if=\\\"JSON.parse(version.data).changed\\\"> {{ version.modified }} :</span>\\n\\n                <b-badge variant=\\\"primary\\\" pill v-if=\\\"JSON.parse(version.data).changed\\\">\\n                  {{ formatConfig(JSON.parse(version.data).changed[\\\"0\\\"][\\\"1\\\"]) }}\\n                </b-badge>\\n\\n                <b-button v-if=\\\"JSON.parse(version.data).changed\\\"  @click=\\\"copyToClipBoard(JSON.parse(version.data).changed['0']['1'])\\\"> Copy JSON To Clipboard</b-button>\\n                <b-button v-if=\\\"JSON.parse(version.data).changed\\\"  @click=\\\"preview(JSON.parse(version.data).changed['0']['1'])\\\"> Preview</b-button>\\n                <span v-else>{{ version.modified }} :  Configuration not changed</span>\\n              </b-list-group-item>\\n            </b-list-group>\\n          </b-card-text>\\n        </b-tab>\\n      </b-tabs>\\n    </b-card>\\n  </b-container>\\n</template>\\n<script>\\nimport {\\n  getFormConfiguration,\\n  getFormsVersions,\\n  saveFormData,\\n} from \\\"../services/forms/builder.js\\\";\\nexport default {\\n  name: \\\"FormRenderView\\\",\\n\\n  data: function () {\\n    return {\\n      some_data: \\\"This is a vue demo\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      tableName: \\\"\\\",\\n      configuration: {},\\n      formData: null,\\n      currentFormId: null,\\n      formName: null,\\n      selectedItem: null,\\n      formInputData: null,\\n      originalConfig: null,\\n      sectionFields: [\\\"headline\\\", \\\"subHeadline\\\", \\\"controls\\\"],\\n      versions: [],\\n    };\\n  },\\n  props: {\\n    selectedDoctype: { type: String },\\n    selectedDoctypeReference: { type: String },\\n  },\\n  watch: {\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        this.formData = conf;\\n      }\\n    },\\n    selectedDoctype(doctype) {\\n      if (doctype) {\\n        this.makeDoctypeItemControl(doctype);\\n      }\\n    },\\n  },\\n  methods: {\\n\\n    preview(configuration){\\n    try{\\n      let conf = JSON.parse(configuration);\\n      this.formData = conf;\\n      \\n\\n    }catch(e){\\n     frappe.show_alert(\\\"Error configuration file has a problem\\\")\\n    }\\n    },\\n    copyToClipBoard(text) {\\n  \\n    var textArea = document.createElement(\\\"textarea\\\");\\n  textArea.value = text;\\n  \\n  // Avoid scrolling to bottom\\n  textArea.style.top = \\\"0\\\";\\n  textArea.style.left = \\\"0\\\";\\n  textArea.style.position = \\\"fixed\\\";\\n\\n  document.body.appendChild(textArea);\\n  textArea.focus();\\n  textArea.select();\\n\\n  try {\\n    var successful = document.execCommand('copy');\\n    var msg = successful ? 'successful' : 'unsuccessful';\\n    frappe.show_alert(\\\"Copied to clipboard\\\");\\n    console.log('Fallback: Copying text command was ' + msg);\\n  } catch (err) {\\n     frappe.show_alert(\\\"Error\\\")\\n    console.error('Fallback: Oops, unable to copy', err);\\n  }\\n\\n  document.body.removeChild(textArea);\\n},\\n    formatConfig(config) {\\n      var dd = config.replaceAll(\\\"<br>\\\", \\\"\\\");\\n      var validJson = true;\\n      try {\\n        return Object.keys(JSON.parse(dd).controls).length;\\n      } catch (e) {\\n        return e;\\n      }\\n      return dd;\\n    },\\n    openLink(item) {\\n      //app/form-design\\n      const host = window.location.href.split(\\\"/app\\\")[0];\\n      const url = host + \\\"/app/dictionary-concept/\\\" + item;\\n      window.open(url, \\\"_blank\\\");\\n    },\\n    clearData() {\\n      const val = {};\\n      const keys = Object.keys(this.formInputData);\\n      keys.forEach((key) => {\\n        val[key] = \\\"\\\";\\n      });\\n\\n      this.setValues(val);\\n    },\\n    getFormData() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      this.showModal();\\n    },\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      this.$refs[\\\"save_modal\\\"].show();\\n    },\\n    clear() {\\n      this.formData = null;\\n      this.formData = this.originalConfig;\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"DocType\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n\\n    makeDoctypeItemControl(doctype) {\\n      const div = $(\\\"#ref-field\\\");\\n      div.empty();\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference Id\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"itemControl\\\",\\n          options: doctype,\\n          placeholder: __(\\\"Reference Id\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctypeReference = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"docId\\\"],\\n        render_input: true,\\n      });\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    saveForm(formData) {\\n      this.hideModal();\\n      saveFormData(formData).then((saved) => {\\n        frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n        this.formInputData = null;\\n\\n        this.clearData();\\n      });\\n    },\\n    getCurrentFormVersions(name) {\\n      getFormsVersions({ name }).then((response) => (this.versions = response));\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        console.log(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    navigateToList() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      // frappe.set_route(\\\"List\\\", this.tableName);\\n    },\\n    save() {\\n      this.hideModal();\\n      let form_content = this.formInputData;\\n      form_content = JSON.stringify(form_content);\\n      const form_name = this.formName;\\n      const reference_doctype = this.selectedDoctype;\\n      const reference_doctype_id = this.selectedDoctypeReference;\\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        form_content,\\n        form_name,\\n        reference_doctype,\\n        reference_doctype_id,\\n      };\\n      this.saveForm({ formData });\\n    },\\n  },\\n  created() {\\n    let formName = frappe.get_route()[2];\\n\\n    if (!frappe.get_route()[2]) {\\n      formName = frappe.get_route()[1];\\n    }\\n    this.getForm(formName);\\n    this.getCurrentFormVersions(formName);\\n  },\\n\\n  mounted() {\\n    this.$formEvent.$on(\\\"submit\\\", (value) => {});\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.makeSelectDoctypeControl();\\n      console.log(\\\"Modal is about to be shown\\\", bvEvent, modalId);\\n    });\\n  },\\n  components: {},\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn {\\n  color: white;\\n  margin-left: 8px;\\n}\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.white-text {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.space-left {\\n  margin-left: 8px;\\n}\\n\\n.ref-field-input {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding {\\n  padding-left: 15px;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-b47e1b9a\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"main-page\\\">\\n    <b-card no-body>\\n      <b-tabs card>\\n        <b-tab title=\\\"Form Preview\\\" active>\\n          <b-card-text>\\n            <div class=\\\"spacer-left-5\\\">\\n              <b-row class=\\\"\\\">\\n                <b-container>\\n                  <b-row class=\\\"save-btn\\\">\\n                    <b-col class=\\\"ref-field-input pull-right\\\" />\\n                    <b-col\\n                      v-show=\\\"selectedDoctype\\\"\\n                      ref=\\\"docId\\\"\\n                      class=\\\"ref-field-input pull-right\\\"\\n                    />\\n                  </b-row>\\n                </b-container>\\n              </b-row>\\n              <b-row>\\n                <div class=\\\"render-form row\\\">\\n                  <b-row class=\\\"save-btn mr-3\\\" style=\\\"width: 100%\\\">\\n                    <b-col></b-col>\\n                    <b-button\\n                      class=\\\"btn btn-primary white-text\\\"\\n                      @click=\\\"getFormData()\\\"\\n                    >\\n                      Save Data</b-button\\n                    >\\n                  </b-row>\\n                  <FormRenderer\\n                    :form-configuration=\\\"formData\\\"\\n                    v-model=\\\"formInputData\\\"\\n                  />\\n                </div>\\n              </b-row>\\n              <b-modal ref=\\\"save_modal\\\" size=\\\"sm\\\" hide-footer>\\n                <template #modal-title> Confirm save form data </template>\\n                <b-row class=\\\"modal-padding\\\" id=\\\"modal-body\\\">\\n                  <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\">\\n                    <!-- {{ tableName }}\\n          <br />\\n          {{ formInputData }} -->\\n                  </b-col>\\n\\n                  <b-col\\n                    :cols=\\\"12\\\"\\n                    v-show=\\\"selectedDoctype\\\"\\n                    ref=\\\"docId\\\"\\n                    id=\\\"ref-field\\\"\\n                    class=\\\"ref-field-input\\\"\\n                  />\\n                </b-row>\\n\\n                <b-button class=\\\"mt-0 btn btn-primary\\\" block @click=\\\"save()\\\"\\n                  >Save</b-button\\n                >\\n              </b-modal>\\n            </div>\\n          </b-card-text>\\n        </b-tab>\\n        <b-tab title=\\\"Form Inspector\\\">\\n          <b-card-text>\\n            <b-row style=\\\"width: 100%\\\" class=\\\"m-4\\\" v-if=\\\"formData\\\">\\n              <div class=\\\"accordion\\\" role=\\\"tablist\\\" style=\\\"width: 100%\\\">\\n                <b-card no-body class=\\\"mb-1\\\" style=\\\"width: 100%\\\">\\n                  <b-card-header header-tag=\\\"header\\\" class=\\\"p-1\\\" role=\\\"tab\\\">\\n                    <b-button block v-b-toggle.accordion-1 variant=\\\"primary\\\"\\n                      >Form Config</b-button\\n                    >\\n                  </b-card-header>\\n                  <b-collapse\\n                    id=\\\"accordion-1\\\"\\n                    visible\\n                    accordion=\\\"my-accordion\\\"\\n                    role=\\\"tabpanel\\\"\\n                  >\\n                    <b-card-body>\\n                      <b-card-text>\\n                        <b-table :items=\\\"[formData.formConfig]\\\"></b-table>\\n                      </b-card-text>\\n                    </b-card-body>\\n                  </b-collapse>\\n                </b-card>\\n\\n                <b-card no-body class=\\\"mb-1\\\">\\n                  <b-card-header header-tag=\\\"header\\\" class=\\\"p-1\\\" role=\\\"tab\\\">\\n                    <b-button block v-b-toggle.accordion-2 variant=\\\"primary\\\"\\n                      >Sections\\n                      <b-badge variant=\\\"light\\\">{{\\n                        Object.keys(formData.sections).length\\n                      }}</b-badge></b-button\\n                    >\\n                  </b-card-header>\\n                  <b-collapse\\n                    id=\\\"accordion-2\\\"\\n                    accordion=\\\"my-accordion\\\"\\n                    role=\\\"tabpanel\\\"\\n                  >\\n                    <b-card-body>\\n                      <b-list-group>\\n                        <b-list-group-item\\n                          id=\\\"accordion-100\\\"\\n                          visible\\n                          v-for=\\\"section in Object.keys(formData.sections)\\\"\\n                          :key=\\\"section\\\"\\n                        >\\n                          <b-row>\\n                            <h4>{{ formData.sections[section].headline }}</h4>\\n                            <b-col></b-col>\\n                            <b-button variant=\\\"danger\\\"> Remove </b-button>\\n                          </b-row>\\n                          <b-table\\n                            :stacked=\\\"true\\\"\\n                            :items=\\\"[formData.sections[section]]\\\"\\n                            :fields=\\\"sectionFields\\\"\\n                          >\\n                            <template #cell(controls)=\\\"data\\\">\\n                              <b-button\\n                                variant=\\\"primary\\\"\\n                                class=\\\"m-1\\\"\\n                                v-for=\\\"item in data.value\\\"\\n                                :key=\\\"item\\\"\\n                                @click=\\\"openLink(item)\\\"\\n                                >{{ item }}\\n                              </b-button>\\n                            </template>\\n                          </b-table>\\n                        </b-list-group-item>\\n                      </b-list-group>\\n                    </b-card-body>\\n                  </b-collapse>\\n                </b-card>\\n\\n                <b-card no-body class=\\\"mb-1\\\">\\n                  <b-card-header header-tag=\\\"header\\\" class=\\\"p-1\\\" role=\\\"tab\\\">\\n                    <b-button block v-b-toggle.accordion-3 variant=\\\"primary\\\"\\n                      >Concepts\\n                      <b-badge variant=\\\"light\\\">{{\\n                        Object.keys(formData.controls).length\\n                      }}</b-badge>\\n                    </b-button>\\n                  </b-card-header>\\n                  <b-collapse\\n                    id=\\\"accordion-3\\\"\\n                    accordion=\\\"my-accordion\\\"\\n                    role=\\\"tabpanel\\\"\\n                  >\\n                    <b-card-body>\\n                      <b-list-group>\\n                        <b-list-group-item\\n                          v-for=\\\"control in Object.keys(formData.controls)\\\"\\n                          :key=\\\"control\\\"\\n                        >\\n                          <b-row style=\\\"width: 100%\\\">\\n                            {{ control }} <b-col></b-col>\\n                            <b-button variant=\\\"danger\\\"> Remove</b-button>\\n                          </b-row>\\n                        </b-list-group-item>\\n                      </b-list-group>\\n                    </b-card-body>\\n                  </b-collapse>\\n                </b-card>\\n              </div>\\n            </b-row></b-card-text\\n          >\\n        </b-tab>\\n\\n        <b-tab title=\\\"Form Versions\\\">\\n          <b-card-text>\\n            <b-list-group>\\n              <b-list-group-item\\n                v-for=\\\"version in versions\\\"\\n                :key=\\\"version\\\"\\n                 \\n              >\\n                <span v-if=\\\"JSON.parse(version.data).changed\\\"> {{ version.modified }} :</span>\\n\\n                <b-badge variant=\\\"primary\\\" pill v-if=\\\"JSON.parse(version.data).changed\\\">\\n                  {{ formatConfig(JSON.parse(version.data).changed[\\\"0\\\"][\\\"1\\\"]) }}\\n                </b-badge>\\n\\n                <b-button v-if=\\\"JSON.parse(version.data).changed\\\"  @click=\\\"copyToClipBoard(JSON.parse(version.data).changed['0']['1'])\\\"> Copy JSON To Clipboard</b-button>\\n                <b-button v-if=\\\"JSON.parse(version.data).changed\\\"  @click=\\\"preview(JSON.parse(version.data).changed['0']['1'])\\\"> Preview</b-button>\\n                <span v-else>{{ version.modified }} :  Configuration not changed</span>\\n              </b-list-group-item>\\n            </b-list-group>\\n          </b-card-text>\\n        </b-tab>\\n      </b-tabs>\\n    </b-card>\\n  </b-container>\\n</template>\\n<script>\\nimport {\\n  getFormConfiguration,\\n  getFormsVersions,\\n  saveFormData,\\n} from \\\"../services/forms/builder.js\\\";\\nexport default {\\n  name: \\\"FormRenderView\\\",\\n\\n  data: function () {\\n    return {\\n      some_data: \\\"This is a vue demo\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      tableName: \\\"\\\",\\n      configuration: {},\\n      formData: null,\\n      currentFormId: null,\\n      formName: null,\\n      selectedItem: null,\\n      formInputData: null,\\n      originalConfig: null,\\n      sectionFields: [\\\"headline\\\", \\\"subHeadline\\\", \\\"controls\\\"],\\n      versions: [],\\n    };\\n  },\\n  props: {\\n    selectedDoctype: { type: String },\\n    selectedDoctypeReference: { type: String },\\n  },\\n  watch: {\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        this.formData = conf;\\n      }\\n    },\\n    selectedDoctype(doctype) {\\n      if (doctype) {\\n        this.makeDoctypeItemControl(doctype);\\n      }\\n    },\\n  },\\n  methods: {\\n\\n    preview(configuration){\\n    try{\\n      let conf = JSON.parse(configuration);\\n      this.formData = conf;\\n      \\n\\n    }catch(e){\\n     frappe.show_alert(\\\"Error configuration file has a problem\\\")\\n    }\\n    },\\n    copyToClipBoard(text) {\\n  \\n    var textArea = document.createElement(\\\"textarea\\\");\\n  textArea.value = text;\\n  \\n  // Avoid scrolling to bottom\\n  textArea.style.top = \\\"0\\\";\\n  textArea.style.left = \\\"0\\\";\\n  textArea.style.position = \\\"fixed\\\";\\n\\n  document.body.appendChild(textArea);\\n  textArea.focus();\\n  textArea.select();\\n\\n  try {\\n    var successful = document.execCommand('copy');\\n    var msg = successful ? 'successful' : 'unsuccessful';\\n    frappe.show_alert(\\\"Copied to clipboard\\\");\\n    console.log('Fallback: Copying text command was ' + msg);\\n  } catch (err) {\\n     frappe.show_alert(\\\"Error\\\")\\n    console.error('Fallback: Oops, unable to copy', err);\\n  }\\n\\n  document.body.removeChild(textArea);\\n},\\n    formatConfig(config) {\\n      var dd = config.replaceAll(\\\"<br>\\\", \\\"\\\");\\n      var validJson = true;\\n      try {\\n        return Object.keys(JSON.parse(dd).controls).length;\\n      } catch (e) {\\n        return e;\\n      }\\n      return dd;\\n    },\\n    openLink(item) {\\n      //app/form-design\\n      const host = window.location.href.split(\\\"/app\\\")[0];\\n      const url = host + \\\"/app/dictionary-concept/\\\" + item;\\n      window.open(url, \\\"_blank\\\");\\n    },\\n    clearData() {\\n      const val = {};\\n      const keys = Object.keys(this.formInputData);\\n      keys.forEach((key) => {\\n        val[key] = \\\"\\\";\\n      });\\n\\n      this.setValues(val);\\n    },\\n    getFormData() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      this.showModal();\\n    },\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      this.$refs[\\\"save_modal\\\"].show();\\n    },\\n    clear() {\\n      this.formData = null;\\n      this.formData = this.originalConfig;\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"DocType\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n\\n    makeDoctypeItemControl(doctype) {\\n      const div = $(\\\"#ref-field\\\");\\n      div.empty();\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference Id\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"itemControl\\\",\\n          options: doctype,\\n          placeholder: __(\\\"Reference Id\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.selectedDoctypeReference = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"docId\\\"],\\n        render_input: true,\\n      });\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    saveForm(formData) {\\n      this.hideModal();\\n      saveFormData(formData).then((saved) => {\\n        frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n        this.formInputData = null;\\n\\n        this.clearData();\\n      });\\n    },\\n    getCurrentFormVersions(name) {\\n      getFormsVersions({ name }).then((response) => (this.versions = response));\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        console.log(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    navigateToList() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n      // frappe.set_route(\\\"List\\\", this.tableName);\\n    },\\n    save() {\\n      this.hideModal();\\n      let form_content = this.formInputData;\\n      form_content = JSON.stringify(form_content);\\n      const form_name = this.formName;\\n      const reference_doctype = this.selectedDoctype;\\n      const reference_doctype_id = this.selectedDoctypeReference;\\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        form_content,\\n        form_name,\\n        reference_doctype,\\n        reference_doctype_id,\\n      };\\n      this.saveForm({ formData });\\n    },\\n  },\\n  created() {\\n    let formName = frappe.get_route()[2];\\n\\n    if (!frappe.get_route()[2]) {\\n      formName = frappe.get_route()[1];\\n    }\\n    this.getForm(formName);\\n    this.getCurrentFormVersions(formName);\\n  },\\n\\n  mounted() {\\n    this.$formEvent.$on(\\\"submit\\\", (value) => {});\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.makeSelectDoctypeControl();\\n      console.log(\\\"Modal is about to be shown\\\", bvEvent, modalId);\\n    });\\n  },\\n  components: {},\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn {\\n  color: white;\\n  margin-left: 8px;\\n}\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.white-text {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.space-left {\\n  margin-left: 8px;\\n}\\n\\n.ref-field-input {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding {\\n  padding-left: 15px;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "import FormRender from './FormRenderView.vue';\n\n\nVue.use(VueFormBuilderPlugin, {})\n\nfrappe.provide('frappe.forms');\n\nfrappe.forms.PatientFormRender = class {\n    constructor({ parent }) {\n        this.$parent = $(parent);\n        this.page = parent.page;\n        this.make_body();\n    }\n\n    make_body() {\n        this.$body = this.$parent.find('.layout-main-section');\n        this.$parent.find('.page-head').addClass('hidden').addClass('rv-head');\n        this.$parent.find('.page-body').removeClass('container').addClass('rv-head');\n        this.$parent.find('.content').removeClass('page-container');\n        this.$parent.find('.page-content').removeClass('page-content');\n        this.$page_container = $('<div class=\"hub-page-container\">').appendTo(this.$body);\n\n        new Vue({\n            el: '.hub-page-container',\n            render: h => h(FormRender)\n        });\n    }\n};\n\n\nimport FormRenderx from './FormInspector.vue';\n\n\nVue.use(VueFormBuilderPlugin, {})\n\nfrappe.provide('frappe.forms');\n\nfrappe.forms.Inspector = class {\n    constructor({ parent }) {\n        this.$parent = $(parent);\n        this.page = parent.page;\n        this.make_body();\n    }\n\n    make_body() {\n        this.$body = this.$parent.find('.layout-main-section');\n        this.$parent.find('.page-head').addClass('hidden').addClass('rv-head');\n        this.$parent.find('.page-body').removeClass('container').addClass('rv-head');\n        this.$parent.find('.content').removeClass('page-container');\n        this.$parent.find('.page-content').removeClass('page-content');\n        this.$page_container = $('<div class=\"hub-page-container\">').appendTo(this.$body);\n\n        new Vue({\n            el: '.hub-page-container',\n            render: h => h(FormRenderx)\n        });\n    }\n};"],
  "mappings": "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",
  "names": []
}
