{
  "version": 3,
  "sources": ["../../../../../apps/frontend/node_modules/vuex/dist/vuex.common.js", "../../../../../apps/frontend/frontend/public/js/accounts/core/Sidebar.vue", "../../../../../apps/frontend/frontend/public/js/state/accounts/state.js", "../../../../../apps/frontend/frontend/public/js/state/accounts/mutations.js", "../../../../../apps/frontend/frontend/public/js/services/accounts/patient.js", "../../../../../apps/frontend/frontend/public/js/services/patient_chart/accounts.js", "../../../../../apps/frontend/frontend/public/js/state/accounts/actions.js", "../../../../../apps/frontend/frontend/public/js/state/accounts/getters.js", "../../../../../apps/frontend/frontend/public/js/state/accounts/index.js", "../../../../../apps/frontend/frontend/public/js/services/patient_chart/api.js", "../../../../../apps/frontend/frontend/public/js/services/stock/stock-check.js", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/SalesOrder.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/Receipts.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/components/GatePass.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/Invoices.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/InvoiceFInalization.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/Schemes.vue", "../../../../../apps/frontend/frontend/public/js/accounts/patient/Procedures.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/SalesOrderAuth.vue", "../../../../../apps/frontend/frontend/public/js/services/customer/dashboard.js", "../../../../../apps/frontend/frontend/public/js/customer_dash/Main.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/Dashboard.vue", "../../../../../apps/frontend/frontend/public/js/services/doctype/meta.js", "../../../../../apps/frontend/frontend/public/js/state/render/state.js", "../../../../../apps/frontend/frontend/public/js/state/render/getters.js", "../../../../../apps/frontend/frontend/public/js/state/render/mutations.js", "../../../../../apps/frontend/frontend/public/js/state/render/actions.js", "../../../../../apps/frontend/frontend/public/js/state/render/module.js", "../../../../../apps/frontend/frontend/public/js/html/doctype/ChildTable.vue", "../../../../../apps/frontend/frontend/public/js/services/doctype/list.js", "../../../../../apps/frontend/frontend/public/js/html/doctype/DocField.vue", "../../../../../apps/frontend/frontend/public/js/html/doctype/DoctypeRender.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/DoctypeLink.vue", "../../../../../apps/frontend/frontend/public/js/accounts/accounts/TemplateBilling.vue", "../../../../../apps/frontend/frontend/public/js/services/patient_chart/charge_sheet.js", "../../../../../apps/frontend/frontend/public/js/patient/components/order_tabs/UserWarehouse.vue", "../../../../../apps/frontend/frontend/public/js/patient/components/order_tabs/ChargeSheet.vue", "../../../../../apps/frontend/frontend/public/js/services/patient_chart/patient_allergy.js", "../../../../../apps/frontend/frontend/public/js/patient/components/notes/PatientAllergy.vue", "../../../../../apps/frontend/frontend/public/js/accounts/core/AccountsWorkingArea.vue", "../../../../../apps/frontend/frontend/public/js/accounts/core/TopHeader.vue", "../../../../../apps/frontend/frontend/public/js/services/forms/builder.js", "../../../../../apps/frontend/frontend/public/js/forms/Frm.vue", "../../../../../apps/frontend/frontend/public/js/patient/components/doctype/ChildTable.vue", "../../../../../apps/frontend/frontend/public/js/patient/components/doctype/DocField.vue", "../../../../../apps/frontend/frontend/public/js/patient/components/doctype/DoctypeRender.vue", "../../../../../apps/frontend/frontend/public/js/forms/FillForm.vue", "../../../../../apps/frontend/frontend/public/js/accounts/Main.vue", "../../../../../apps/frontend/node_modules/vuex/dist/vuex.mjs", "../../../../../apps/frontend/frontend/public/js/state/state.js", "../../../../../apps/frontend/frontend/public/js/state/getters.js", "../../../../../apps/frontend/frontend/public/js/state/mutations.js", "../../../../../apps/frontend/frontend/public/js/state/actions.js", "../../../../../apps/frontend/frontend/public/js/state/patient/modulePatientState.js", "../../../../../apps/frontend/frontend/public/js/state/patient/modulePatientMutations.js", "../../../../../apps/frontend/frontend/public/js/services/patient/patient.js", "../../../../../apps/frontend/frontend/public/js/state/patient/modulePatientActions.js", "../../../../../apps/frontend/frontend/public/js/state/patient/modulePatientGetters.js", "../../../../../apps/frontend/frontend/public/js/state/patient/modulePatient.js", "../../../../../apps/frontend/frontend/public/js/state/clinical_procedures/procedureState.js", "../../../../../apps/frontend/frontend/public/js/state/clinical_procedures/procedureMutations.js", "../../../../../apps/frontend/frontend/public/js/services/clinical_procedures/clinical_procedures.js", "../../../../../apps/frontend/frontend/public/js/state/clinical_procedures/procedureActions.js", "../../../../../apps/frontend/frontend/public/js/state/clinical_procedures/procedureGetters.js", "../../../../../apps/frontend/frontend/public/js/state/clinical_procedures/procedures.js", "../../../../../apps/frontend/frontend/public/js/state/serviceUnit/moduleServiceUnitState.js", "../../../../../apps/frontend/frontend/public/js/state/serviceUnit/moduleServiceUnitMutations.js", "../../../../../apps/frontend/frontend/public/js/state/serviceUnit/moduleServiceUnitActions.js", "../../../../../apps/frontend/frontend/public/js/state/serviceUnit/moduleServiceUnitGetters.js", "../../../../../apps/frontend/frontend/public/js/state/serviceUnit/moduleServiceUnit.js", "../../../../../apps/frontend/frontend/public/js/state/servicePoint/moduleServicePointState.js", "../../../../../apps/frontend/frontend/public/js/state/servicePoint/moduleServicePointMutations.js", "../../../../../apps/frontend/frontend/public/js/state/servicePoint/moduleServicePointActions.js", "../../../../../apps/frontend/frontend/public/js/state/servicePoint/moduleServicePointGetters.js", "../../../../../apps/frontend/frontend/public/js/state/servicePoint/moduleServicePoint.js", "../../../../../apps/frontend/frontend/public/js/state/socket/moduleSocketState.js", "../../../../../apps/frontend/frontend/public/js/state/socket/moduleSocketMutations.js", "../../../../../apps/frontend/frontend/public/js/state/socket/moduleSocketActions.js", "../../../../../apps/frontend/frontend/public/js/state/socket/moduleSocketGetters.js", "../../../../../apps/frontend/frontend/public/js/state/socket/moduleSocket.js", "../../../../../apps/frontend/frontend/public/js/state/notification/moduleNotificationState.js", "../../../../../apps/frontend/frontend/public/js/state/notification/moduleNotificationMutations.js", "../../../../../apps/frontend/frontend/public/js/services/notification/notification.js", "../../../../../apps/frontend/frontend/public/js/state/notification/moduleNotificationActions.js", "../../../../../apps/frontend/frontend/public/js/state/notification/moduleNotificationGetters.js", "../../../../../apps/frontend/frontend/public/js/state/notification/moduleNotification.js", "../../../../../apps/frontend/frontend/public/js/state/supplier/moduleSupplierState.js", "../../../../../apps/frontend/frontend/public/js/state/supplier/moduleSupplierMutations.js", "../../../../../apps/frontend/frontend/public/js/state/supplier/moduleSupplierActions.js", "../../../../../apps/frontend/frontend/public/js/state/supplier/moduleSupplierGetters.js", "../../../../../apps/frontend/frontend/public/js/state/supplier/moduleSupplier.js", "../../../../../apps/frontend/frontend/public/js/state/context/state.js", "../../../../../apps/frontend/frontend/public/js/state/context/mutations.js", "../../../../../apps/frontend/frontend/public/js/state/context/actions.js", "../../../../../apps/frontend/frontend/public/js/state/context/getters.js", "../../../../../apps/frontend/frontend/public/js/state/context/index.js", "../../../../../apps/frontend/frontend/public/js/state/patient-encounter/state.js", "../../../../../apps/frontend/frontend/public/js/state/patient-encounter/getters.js", "../../../../../apps/frontend/frontend/public/js/state/patient-encounter/mutations.js", "../../../../../apps/frontend/frontend/public/js/state/patient-encounter/actions.js", "../../../../../apps/frontend/frontend/public/js/state/patient-encounter/module.js", "../../../../../apps/frontend/frontend/public/js/state/patient_appointments/state.js", "../../../../../apps/frontend/frontend/public/js/state/patient_appointments/getters.js", "../../../../../apps/frontend/frontend/public/js/state/patient_appointments/mutations.js", "../../../../../apps/frontend/frontend/public/js/state/patient_appointments/actions.js", "../../../../../apps/frontend/frontend/public/js/state/patient_appointments/module.js", "../../../../../apps/frontend/frontend/public/js/state/store.js", "../../../../../apps/frontend/frontend/public/js/accounts/accounts.bundle.js"],
  "sourcesContent": ["/*!\n * vuex v3.6.2\n * (c) 2021 Evan You\n * @license MIT\n */\n'use strict';\n\nfunction applyMixin (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n}\n\nvar target = typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n    ? global\n    : {};\nvar devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  }, { prepend: true });\n\n  store.subscribeAction(function (action, state) {\n    devtoolHook.emit('vuex:action', action, state);\n  }, { prepend: true });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\nfunction find (list, f) {\n  return list.filter(f)[0]\n}\n\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\nfunction deepCopy (obj, cache) {\n  if ( cache === void 0 ) cache = [];\n\n  // just return if obj is immutable value\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  // if obj is hit, it is in circular structure\n  var hit = find(cache, function (c) { return c.original === obj; });\n  if (hit) {\n    return hit.copy\n  }\n\n  var copy = Array.isArray(obj) ? [] : {};\n  // put the copy into cache at first\n  // because we want to refer it in recursive deepCopy\n  cache.push({\n    original: obj,\n    copy: copy\n  });\n\n  Object.keys(obj).forEach(function (key) {\n    copy[key] = deepCopy(obj[key], cache);\n  });\n\n  return copy\n}\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nfunction partial (fn, arg) {\n  return function () {\n    return fn(arg)\n  }\n}\n\n// Base data struct for store's module, package with some attribute and method\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  // Store some children item\n  this._children = Object.create(null);\n  // Store the origin module object which passed by programmer\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n\n  // Store the origin module's state\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors = { namespaced: { configurable: true } };\n\nprototypeAccessors.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.hasChild = function hasChild (key) {\n  return key in this._children\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  var child = parent.getChild(key);\n\n  if (!child) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.warn(\n        \"[vuex] trying to unregister module '\" + key + \"', which is \" +\n        \"not registered\"\n      );\n    }\n    return\n  }\n\n  if (!child.runtime) {\n    return\n  }\n\n  parent.removeChild(key);\n};\n\nModuleCollection.prototype.isRegistered = function isRegistered (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n\n  if (parent) {\n    return parent.hasChild(key)\n  }\n\n  return false\n};\n\nfunction update (path, targetModule, newModule) {\n  if ((process.env.NODE_ENV !== 'production')) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n  this._makeLocalGettersCache = Object.create(null);\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  var state = this._modules.root.state;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;\n  if (useDevtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors$1 = { state: { configurable: true } };\n\nprototypeAccessors$1.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors$1.state.set = function (v) {\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(false, \"use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n\n  this._subscribers\n    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\n    .forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    (process.env.NODE_ENV !== 'production') &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  try {\n    this._actionSubscribers\n      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe\n      .filter(function (sub) { return sub.before; })\n      .forEach(function (sub) { return sub.before(action, this$1.state); });\n  } catch (e) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.warn(\"[vuex] error in before action subscribers: \");\n      console.error(e);\n    }\n  }\n\n  var result = entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload);\n\n  return new Promise(function (resolve, reject) {\n    result.then(function (res) {\n      try {\n        this$1._actionSubscribers\n          .filter(function (sub) { return sub.after; })\n          .forEach(function (sub) { return sub.after(action, this$1.state); });\n      } catch (e) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\"[vuex] error in after action subscribers: \");\n          console.error(e);\n        }\n      }\n      resolve(res);\n    }, function (error) {\n      try {\n        this$1._actionSubscribers\n          .filter(function (sub) { return sub.error; })\n          .forEach(function (sub) { return sub.error(action, this$1.state, error); });\n      } catch (e) {\n        if ((process.env.NODE_ENV !== 'production')) {\n          console.warn(\"[vuex] error in error action subscribers: \");\n          console.error(e);\n        }\n      }\n      reject(error);\n    });\n  })\n};\n\nStore.prototype.subscribe = function subscribe (fn, options) {\n  return genericSubscribe(fn, this._subscribers, options)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn, options) {\n  var subs = typeof fn === 'function' ? { before: fn } : fn;\n  return genericSubscribe(subs, this._actionSubscribers, options)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hasModule = function hasModule (path) {\n  if (typeof path === 'string') { path = [path]; }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  return this._modules.isRegistered(path)\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors$1 );\n\nfunction genericSubscribe (fn, subs, options) {\n  if (subs.indexOf(fn) < 0) {\n    options && options.prepend\n      ? subs.unshift(fn)\n      : subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  // reset local getters cache\n  store._makeLocalGettersCache = Object.create(null);\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    // direct inline function use will lead to closure preserving oldVm.\n    // using partial to return function with only arguments preserved in closure environment.\n    computed[key] = partial(fn, store);\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    if (store._modulesNamespaceMap[namespace] && (process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] duplicate namespace \" + namespace + \" for the namespaced module \" + (path.join('/'))));\n    }\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      if ((process.env.NODE_ENV !== 'production')) {\n        if (moduleName in parentState) {\n          console.warn(\n            (\"[vuex] state field \\\"\" + moduleName + \"\\\" was overridden by a module with the same name at \\\"\" + (path.join('.')) + \"\\\"\")\n          );\n        }\n      }\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ((process.env.NODE_ENV !== 'production') && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if ((process.env.NODE_ENV !== 'production') && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  if (!store._makeLocalGettersCache[namespace]) {\n    var gettersProxy = {};\n    var splitPos = namespace.length;\n    Object.keys(store.getters).forEach(function (type) {\n      // skip if the target getter is not match this namespace\n      if (type.slice(0, splitPos) !== namespace) { return }\n\n      // extract local getter type\n      var localType = type.slice(splitPos);\n\n      // Add a port to the getters proxy.\n      // Define as getter property because\n      // we do not want to evaluate the getters in this time.\n      Object.defineProperty(gettersProxy, localType, {\n        get: function () { return store.getters[type]; },\n        enumerable: true\n      });\n    });\n    store._makeLocalGettersCache[namespace] = gettersProxy;\n  }\n\n  return store._makeLocalGettersCache[namespace]\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if ((process.env.NODE_ENV !== 'production')) {\n      assert(store._committing, \"do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.reduce(function (state, key) { return state[key]; }, state)\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if ((process.env.NODE_ENV !== 'production')) {\n    assert(typeof type === 'string', (\"expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if ((process.env.NODE_ENV !== 'production')) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\n/**\n * Reduce the code which written in Vue.js for getting the state.\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.\n * @param {Object}\n */\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(states)) {\n    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for committing the mutation\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.\n * @return {Object}\n */\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(mutations)) {\n    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // Get the commit method from store\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for getting the getters\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} getters\n * @return {Object}\n */\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(getters)) {\n    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    // The namespace has been mutated by normalizeNamespace\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if ((process.env.NODE_ENV !== 'production') && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\n/**\n * Reduce the code which written in Vue.js for dispatch the action\n * @param {String} [namespace] - Module's namespace\n * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.\n * @return {Object}\n */\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  if ((process.env.NODE_ENV !== 'production') && !isValidMap(actions)) {\n    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');\n  }\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      // get dispatch function from store\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\n/**\n * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object\n * @param {String} namespace\n * @return {Object}\n */\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\n/**\n * Normalize the map\n * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]\n * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]\n * @param {Array|Object} map\n * @return {Object}\n */\nfunction normalizeMap (map) {\n  if (!isValidMap(map)) {\n    return []\n  }\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\n/**\n * Validate whether given map is valid or not\n * @param {*} map\n * @return {Boolean}\n */\nfunction isValidMap (map) {\n  return Array.isArray(map) || isObject(map)\n}\n\n/**\n * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.\n * @param {Function} fn\n * @return {Function}\n */\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\n/**\n * Search a special module from store by namespace. if module not exist, print error message.\n * @param {Object} store\n * @param {String} helper\n * @param {String} namespace\n * @return {Object}\n */\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if ((process.env.NODE_ENV !== 'production') && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\n// Credits: borrowed code from fcomb/redux-logger\n\nfunction createLogger (ref) {\n  if ( ref === void 0 ) ref = {};\n  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;\n  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };\n  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };\n  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };\n  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };\n  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };\n  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;\n  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;\n  var logger = ref.logger; if ( logger === void 0 ) logger = console;\n\n  return function (store) {\n    var prevState = deepCopy(store.state);\n\n    if (typeof logger === 'undefined') {\n      return\n    }\n\n    if (logMutations) {\n      store.subscribe(function (mutation, state) {\n        var nextState = deepCopy(state);\n\n        if (filter(mutation, prevState, nextState)) {\n          var formattedTime = getFormattedTime();\n          var formattedMutation = mutationTransformer(mutation);\n          var message = \"mutation \" + (mutation.type) + formattedTime;\n\n          startMessage(logger, message, collapsed);\n          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));\n          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));\n          endMessage(logger);\n        }\n\n        prevState = nextState;\n      });\n    }\n\n    if (logActions) {\n      store.subscribeAction(function (action, state) {\n        if (actionFilter(action, state)) {\n          var formattedTime = getFormattedTime();\n          var formattedAction = actionTransformer(action);\n          var message = \"action \" + (action.type) + formattedTime;\n\n          startMessage(logger, message, collapsed);\n          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);\n          endMessage(logger);\n        }\n      });\n    }\n  }\n}\n\nfunction startMessage (logger, message, collapsed) {\n  var startMessage = collapsed\n    ? logger.groupCollapsed\n    : logger.group;\n\n  // render\n  try {\n    startMessage.call(logger, message);\n  } catch (e) {\n    logger.log(message);\n  }\n}\n\nfunction endMessage (logger) {\n  try {\n    logger.groupEnd();\n  } catch (e) {\n    logger.log('\u2014\u2014 log end \u2014\u2014');\n  }\n}\n\nfunction getFormattedTime () {\n  var time = new Date();\n  return (\" @ \" + (pad(time.getHours(), 2)) + \":\" + (pad(time.getMinutes(), 2)) + \":\" + (pad(time.getSeconds(), 2)) + \".\" + (pad(time.getMilliseconds(), 3)))\n}\n\nfunction repeat (str, times) {\n  return (new Array(times + 1)).join(str)\n}\n\nfunction pad (num, maxLength) {\n  return repeat('0', maxLength - num.toString().length) + num\n}\n\nvar index_cjs = {\n  Store: Store,\n  install: install,\n  version: '3.6.2',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers,\n  createLogger: createLogger\n};\n\nmodule.exports = index_cjs;\n", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst __vue_script__ = {\n  name: \"Sidebar\",\n  data() {\n    return {\n      center: \"center\",\n    };\n  },\n \n  methods: {\n    patientItemClicked(patientItem){\n      console.log(patientItem)\n    }\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"side-bar-area aside-bottom-padding\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"content-area\" },\n        [\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-col\",\n                { attrs: { cols: \"12\" } },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"p user-area\" },\n                    [\n                      _c(\n                        \"b-row\",\n                        [\n                          _c(\n                            \"b-col\",\n                            { attrs: { cols: \"10\" } },\n                            [\n                              _c(\n                                \"b-row\",\n                                [\n                                  _c(\"b-col\", [\n                                    _c(\n                                      \"h4\",\n                                      {\n                                        staticStyle: {\n                                          color: \"white\",\n                                          \"font-weight\": \"bold\",\n                                          \"text-transform\": \"capitalize\"\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                \" +\n                                            _vm._s(\n                                              _vm.frappe.session.user_fullname\n                                            ) +\n                                            \"\\n              \"\n                                        )\n                                      ]\n                                    )\n                                  ])\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"b-row\",\n                                [\n                                  _c(\"b-col\", [\n                                    _c(\n                                      \"h5\",\n                                      { staticStyle: { color: \"white\" } },\n                                      [\n                                        _vm._v(\n                                          \"\\n                \" +\n                                            _vm._s(\n                                              _vm.frappe.session.user_email\n                                            ) +\n                                            \"\\n              \"\n                                        )\n                                      ]\n                                    )\n                                  ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"b-icon\", {\n                            attrs: {\n                              icon: \"intersect\",\n                              variant: \"light\",\n                              \"font-scale\": \"2\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"b-col\")\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"hr\", {\n                    staticStyle: { height: \"0.5px\", \"margin-right\": \"17px\" }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-row\",\n                    { staticClass: \"mt-3 item-link\" },\n                    [\n                      _c(\n                        \"b-col\",\n                        { staticClass: \"mr-1\", attrs: { cols: \"2\" } },\n                        [\n                          _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"psm\",\n                              staticStyle: { color: \"white\" }\n                            },\n                            [\n                              _c(\"i\", {\n                                staticClass: \"fa fa-search mt-1\",\n                                attrs: { id: \"ico\", \"aria-hidden\": \"true\" }\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-col\",\n                        { staticClass: \"title\" },\n                        [\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-col\",\n                                {\n                                  staticClass: \"pull-left title\",\n                                  attrs: { cols: \"12\" }\n                                },\n                                [\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      staticClass: \"pull-left title\",\n                                      attrs: { to: { name: \"accounts-search\" } }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n            Patient Search\\n            \"\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"b-col\",\n                                {\n                                  staticClass: \"pull-left sub-title\",\n                                  attrs: { cols: \"12\" }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n            Search Patients\\n          \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-col\",\n                        {\n                          staticClass: \"pull-right vs-align-center\",\n                          attrs: { cols: \"2\" }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass:\n                              \"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\",\n                            attrs: { \"aria-hidden\": \"true\" }\n                          })\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-row\",\n                    { staticClass: \"mt-3 item-link\" },\n                    [\n                      _c(\n                        \"b-col\",\n                        { staticClass: \"mr-1\", attrs: { cols: \"2\" } },\n                        [\n                          _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"psm\",\n                              staticStyle: { color: \"white\" }\n                            },\n                            [\n                              _c(\"i\", {\n                                staticClass: \"fa fa-fax mt-1\",\n                                attrs: { id: \"ico\", \"aria-hidden\": \"true\" }\n                              })\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-col\",\n                        { staticClass: \"title\" },\n                        [\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-col\",\n                                {\n                                  staticClass: \"pull-left title\",\n                                  attrs: { cols: \"12\" }\n                                },\n                                [\n                                  _c(\n                                    \"router-link\",\n                                    {\n                                      staticClass: \"pull-left title\",\n                                      attrs: {\n                                        to: { name: \"accounts-finalizations\" }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n            Finalized Invoices\\n            \"\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"b-col\",\n                                {\n                                  staticClass: \"pull-left sub-title\",\n                                  attrs: { cols: \"12\" }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n            Finalized Invoices\\n          \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-col\",\n                        {\n                          staticClass: \"pull-right vs-align-center\",\n                          attrs: { cols: \"2\" }\n                        },\n                        [\n                          _c(\"i\", {\n                            staticClass:\n                              \"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\",\n                            attrs: { \"aria-hidden\": \"true\" }\n                          })\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ]\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-4882a5e5_0\", { source: \"\\n.no-sides[data-v-4882a5e5] {\\n  margin-left: 0px;\\n  margin-right: 8px;\\n}\\n.side-bar-area[data-v-4882a5e5] {\\n  background: white;\\n    width: 100% !important;\\n    padding-top: 20px;\\n    min-height: 600px;\\n    height: 100vh;\\n    overflow-y: hidden;\\n    overflow-x: hidden;\\n    background-color: white;\\n    background-image: linear-gradient(315deg, #06a79e 0%, #6f5a7b 74%);\\n    padding-left: 11px !important;\\n    padding-right: 11px !important;\\n}\\n.item-link[data-v-4882a5e5] {\\n  border-bottom: 1px solid white;\\n\\n  color: #fff !important;\\n\\n  padding-left: 4px;\\n}\\n.title[data-v-4882a5e5] {\\n  font-weight: bold;\\n  color: black !important;\\n  margin-left: 4px;\\n}\\n.user-area[data-v-4882a5e5] {\\n  background: #06a79e;\\n  padding: 13px;\\n  border-radius: 5px;\\n  margin-top: 15px;\\n  margin-right: 15px;\\n  color: white;\\n}\\n.menu-header[data-v-4882a5e5] {\\n  width: 100%;\\n  padding: 10px;\\n  background: white;\\n  font-size: 12px;\\n  font-weight: bold;\\n  /* box-shadow: 0px 7px 0px -5px #ccc; */\\n}\\n.sub-title[data-v-4882a5e5] {\\n  color: gray !important;\\n  font-size: 10px;\\n  margin-left: 4px;\\n  font-weight: 400;\\n}\\n.vs-align-center[data-v-4882a5e5] {\\n  color: white;\\n}\\n.content-area[data-v-4882a5e5]{\\nheight: 87vh;\\noverflow-y: scroll;\\noverflow-x: hidden;\\nscrollbar-width:thin;\\nbackground: white;\\npadding-bottom: 16px;\\npadding-left: 16px;\\nborder-radius: 5px;\\n}\\n.psm[data-v-4882a5e5] {\\n    display: inline-block;\\n    border-radius: 50px;\\n    box-shadow: 0px 0px 2px #888;\\n    height: 40px;\\n    width: 40px;\\n    text-align: center;\\n    position: relative;\\n    padding-bottom:10px ;\\n    position: relative;\\n}\\n#ico[data-v-4882a5e5]{\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    height: 50%;\\n    transform: translate(-50%, -50%);\\n    width: 20px;\\n    height: 20px;\\n    display: block;\\n    color:#06a79e;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/accounts/core/Sidebar.vue\"],\"names\":[],\"mappings\":\";AA4MA;EACA,gBAAA;EACA,iBAAA;AACA;AAEA;EACA,iBAAA;IACA,sBAAA;IACA,iBAAA;IACA,iBAAA;IACA,aAAA;IACA,kBAAA;IACA,kBAAA;IACA,uBAAA;IACA,kEAAA;IACA,6BAAA;IACA,8BAAA;AACA;AACA;EACA,8BAAA;;EAEA,sBAAA;;EAEA,iBAAA;AACA;AACA;EACA,iBAAA;EACA,uBAAA;EACA,gBAAA;AACA;AACA;EACA,mBAAA;EACA,aAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;EACA,YAAA;AACA;AACA;EACA,WAAA;EACA,aAAA;EACA,iBAAA;EACA,eAAA;EACA,iBAAA;EACA,uCAAA;AACA;AACA;EACA,sBAAA;EACA,eAAA;EACA,gBAAA;EACA,gBAAA;AACA;AACA;EACA,YAAA;AACA;AACA;AACA,YAAA;AACA,kBAAA;AACA,kBAAA;AACA,oBAAA;AACA,iBAAA;AACA,oBAAA;AACA,kBAAA;AACA,kBAAA;AACA;AACA;IACA,qBAAA;IACA,mBAAA;IACA,4BAAA;IACA,YAAA;IACA,WAAA;IACA,kBAAA;IACA,kBAAA;IACA,oBAAA;IACA,kBAAA;AACA;AACA;IACA,kBAAA;IACA,QAAA;IACA,SAAA;IACA,WAAA;IACA,gCAAA;IACA,WAAA;IACA,YAAA;IACA,cAAA;IACA,aAAA;AACA\",\"file\":\"Sidebar.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"side-bar-area aside-bottom-padding\\\">\\n    <div class=\\\"content-area\\\">\\n    <b-row>\\n      <b-col cols=\\\"12\\\">\\n      <div class=\\\"p user-area\\\">\\n      <b-row >\\n        <b-col cols=\\\"10\\\">\\n          <b-row>\\n            <b-col>\\n              <h4 style=\\\"color: white; font-weight: bold;text-transform: capitalize\\\">\\n                {{ frappe.session.user_fullname }}\\n              </h4>\\n            </b-col>\\n            </b-row>\\n          <b-row>\\n            <b-col>\\n              <h5 style=\\\"color: white\\\">\\n                {{ frappe.session.user_email }}\\n              </h5></b-col\\n            ></b-row\\n          >\\n        </b-col>\\n        <b-icon icon=\\\"intersect\\\" variant=\\\"light\\\" font-scale=\\\"2\\\"></b-icon>\\n        <b-col> </b-col>\\n      </b-row>\\n      \\n    </div>\\n    \\n   <hr style=\\\"height:0.5px;margin-right:17px;\\\">\\n     <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button class=\\\"psm\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-search mt-1\\\" id=\\\"ico\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n         <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'accounts-search'}\\\" class=\\\"pull-left title\\\">\\n            Patient Search\\n            </router-link>\\n          </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Search Patients\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row>\\n     <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button class=\\\"psm\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-fax mt-1\\\" id=\\\"ico\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n         <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'accounts-finalizations'}\\\" class=\\\"pull-left title\\\">\\n            Finalized Invoices\\n            </router-link>\\n          </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Finalized Invoices\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row>\\n    \\n      </b-col>\\n    </b-row>\\n  </div> \\n\\n\\n <!-- <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"primary\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-calendar mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">Invoices</b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Invoice\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\">\\n        </i>\\n      </b-col>\\n    </b-row> -->\\n<!-- \\n    <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"success\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-user  mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button>\\n        </b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'add-patient'}\\\" class=\\\"pull-left title\\\">\\n              Payment Entries\\n            </router-link>\\n            </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Receipts and payments\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\">\\n        </i>\\n      </b-col>\\n    </b-row> -->\\n   \\n\\n    <!-- <b-row class=\\\"mt-4 mb-2 ml-1\\\">\\n      <div\\n        class=\\\"mx-auto menu-header\\\"\\n        style=\\\"width: 100%; padding: 3px; color:darkgray\\\"\\n      >\\n        <div class=\\\"pull-left\\\">MY LISTS</div>\\n      </div>\\n    </b-row> -->\\n\\n    <!-- <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"danger\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-user  mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'patients' }\\\" class=\\\"pull-left title\\\"\\n              >Patients</router-link\\n            >\\n          </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            List of all registered patients</b-col\\n          >\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row>\\n    <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"warning\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-calendar mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">Appointments</b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\"\\n            >List of all appointments\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row> -->\\n  </b-container>\\n</template>\\n\\n<script>\\nexport default {\\n  name: \\\"Sidebar\\\",\\n  data() {\\n    return {\\n      center: \\\"center\\\",\\n    };\\n  },\\n \\n  methods: {\\n    patientItemClicked(patientItem){\\n      console.log(patientItem)\\n    }\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.no-sides {\\n  margin-left: 0px;\\n  margin-right: 8px;\\n}\\n\\n.side-bar-area {\\n  background: white;\\n    width: 100% !important;\\n    padding-top: 20px;\\n    min-height: 600px;\\n    height: 100vh;\\n    overflow-y: hidden;\\n    overflow-x: hidden;\\n    background-color: white;\\n    background-image: linear-gradient(315deg, #06a79e 0%, #6f5a7b 74%);\\n    padding-left: 11px !important;\\n    padding-right: 11px !important;\\n}\\n.item-link {\\n  border-bottom: 1px solid white;\\n\\n  color: #fff !important;\\n\\n  padding-left: 4px;\\n}\\n.title {\\n  font-weight: bold;\\n  color: black !important;\\n  margin-left: 4px;\\n}\\n.user-area {\\n  background: #06a79e;\\n  padding: 13px;\\n  border-radius: 5px;\\n  margin-top: 15px;\\n  margin-right: 15px;\\n  color: white;\\n}\\n.menu-header {\\n  width: 100%;\\n  padding: 10px;\\n  background: white;\\n  font-size: 12px;\\n  font-weight: bold;\\n  /* box-shadow: 0px 7px 0px -5px #ccc; */\\n}\\n.sub-title {\\n  color: gray !important;\\n  font-size: 10px;\\n  margin-left: 4px;\\n  font-weight: 400;\\n}\\n.vs-align-center {\\n  color: white;\\n}\\n.content-area{\\nheight: 87vh;\\noverflow-y: scroll;\\noverflow-x: hidden;\\nscrollbar-width:thin;\\nbackground: white;\\npadding-bottom: 16px;\\npadding-left: 16px;\\nborder-radius: 5px;\\n}\\n.psm {\\n    display: inline-block;\\n    border-radius: 50px;\\n    box-shadow: 0px 0px 2px #888;\\n    height: 40px;\\n    width: 40px;\\n    text-align: center;\\n    position: relative;\\n    padding-bottom:10px ;\\n    position: relative;\\n}\\n#ico{\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    height: 50%;\\n    transform: translate(-50%, -50%);\\n    width: 20px;\\n    height: 20px;\\n    display: block;\\n    color:#06a79e;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-4882a5e5\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"side-bar-area aside-bottom-padding\\\">\\n    <div class=\\\"content-area\\\">\\n    <b-row>\\n      <b-col cols=\\\"12\\\">\\n      <div class=\\\"p user-area\\\">\\n      <b-row >\\n        <b-col cols=\\\"10\\\">\\n          <b-row>\\n            <b-col>\\n              <h4 style=\\\"color: white; font-weight: bold;text-transform: capitalize\\\">\\n                {{ frappe.session.user_fullname }}\\n              </h4>\\n            </b-col>\\n            </b-row>\\n          <b-row>\\n            <b-col>\\n              <h5 style=\\\"color: white\\\">\\n                {{ frappe.session.user_email }}\\n              </h5></b-col\\n            ></b-row\\n          >\\n        </b-col>\\n        <b-icon icon=\\\"intersect\\\" variant=\\\"light\\\" font-scale=\\\"2\\\"></b-icon>\\n        <b-col> </b-col>\\n      </b-row>\\n      \\n    </div>\\n    \\n   <hr style=\\\"height:0.5px;margin-right:17px;\\\">\\n     <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button class=\\\"psm\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-search mt-1\\\" id=\\\"ico\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n         <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'accounts-search'}\\\" class=\\\"pull-left title\\\">\\n            Patient Search\\n            </router-link>\\n          </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Search Patients\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row>\\n     <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button class=\\\"psm\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-fax mt-1\\\" id=\\\"ico\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n         <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'accounts-finalizations'}\\\" class=\\\"pull-left title\\\">\\n            Finalized Invoices\\n            </router-link>\\n          </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Finalized Invoices\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row>\\n    \\n      </b-col>\\n    </b-row>\\n  </div> \\n\\n\\n <!-- <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"primary\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-calendar mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">Invoices</b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Invoice\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\">\\n        </i>\\n      </b-col>\\n    </b-row> -->\\n<!-- \\n    <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"success\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-user  mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button>\\n        </b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'add-patient'}\\\" class=\\\"pull-left title\\\">\\n              Payment Entries\\n            </router-link>\\n            </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            Receipts and payments\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\">\\n        </i>\\n      </b-col>\\n    </b-row> -->\\n   \\n\\n    <!-- <b-row class=\\\"mt-4 mb-2 ml-1\\\">\\n      <div\\n        class=\\\"mx-auto menu-header\\\"\\n        style=\\\"width: 100%; padding: 3px; color:darkgray\\\"\\n      >\\n        <div class=\\\"pull-left\\\">MY LISTS</div>\\n      </div>\\n    </b-row> -->\\n\\n    <!-- <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"danger\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-user  mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">\\n            <router-link :to=\\\"{ name: 'patients' }\\\" class=\\\"pull-left title\\\"\\n              >Patients</router-link\\n            >\\n          </b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\">\\n            List of all registered patients</b-col\\n          >\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row>\\n    <b-row class=\\\"mt-3 item-link\\\">\\n      <b-col cols=\\\"2\\\" class=\\\"mr-1\\\">\\n        <b-button variant=\\\"warning\\\" style=\\\"color: white\\\">\\n          <i class=\\\"fa fa-calendar mt-1\\\" aria-hidden=\\\"true\\\"></i> </b-button\\n      ></b-col>\\n      <b-col class=\\\"title\\\">\\n        <b-row>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left title\\\">Appointments</b-col>\\n          <b-col cols=\\\"12\\\" class=\\\"pull-left sub-title\\\"\\n            >List of all appointments\\n          </b-col>\\n        </b-row>\\n      </b-col>\\n      <b-col cols=\\\"2\\\" class=\\\"pull-right vs-align-center\\\">\\n        <i\\n          class=\\\"fa fa-chevron-right pull-right vs-align-center mt-1 mr-1\\\"\\n          aria-hidden=\\\"true\\\"\\n        ></i\\n      ></b-col>\\n    </b-row> -->\\n  </b-container>\\n</template>\\n\\n<script>\\nexport default {\\n  name: \\\"Sidebar\\\",\\n  data() {\\n    return {\\n      center: \\\"center\\\",\\n    };\\n  },\\n \\n  methods: {\\n    patientItemClicked(patientItem){\\n      console.log(patientItem)\\n    }\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.no-sides {\\n  margin-left: 0px;\\n  margin-right: 8px;\\n}\\n\\n.side-bar-area {\\n  background: white;\\n    width: 100% !important;\\n    padding-top: 20px;\\n    min-height: 600px;\\n    height: 100vh;\\n    overflow-y: hidden;\\n    overflow-x: hidden;\\n    background-color: white;\\n    background-image: linear-gradient(315deg, #06a79e 0%, #6f5a7b 74%);\\n    padding-left: 11px !important;\\n    padding-right: 11px !important;\\n}\\n.item-link {\\n  border-bottom: 1px solid white;\\n\\n  color: #fff !important;\\n\\n  padding-left: 4px;\\n}\\n.title {\\n  font-weight: bold;\\n  color: black !important;\\n  margin-left: 4px;\\n}\\n.user-area {\\n  background: #06a79e;\\n  padding: 13px;\\n  border-radius: 5px;\\n  margin-top: 15px;\\n  margin-right: 15px;\\n  color: white;\\n}\\n.menu-header {\\n  width: 100%;\\n  padding: 10px;\\n  background: white;\\n  font-size: 12px;\\n  font-weight: bold;\\n  /* box-shadow: 0px 7px 0px -5px #ccc; */\\n}\\n.sub-title {\\n  color: gray !important;\\n  font-size: 10px;\\n  margin-left: 4px;\\n  font-weight: 400;\\n}\\n.vs-align-center {\\n  color: white;\\n}\\n.content-area{\\nheight: 87vh;\\noverflow-y: scroll;\\noverflow-x: hidden;\\nscrollbar-width:thin;\\nbackground: white;\\npadding-bottom: 16px;\\npadding-left: 16px;\\nborder-radius: 5px;\\n}\\n.psm {\\n    display: inline-block;\\n    border-radius: 50px;\\n    box-shadow: 0px 0px 2px #888;\\n    height: 40px;\\n    width: 40px;\\n    text-align: center;\\n    position: relative;\\n    padding-bottom:10px ;\\n    position: relative;\\n}\\n#ico{\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    height: 50%;\\n    transform: translate(-50%, -50%);\\n    width: 20px;\\n    height: 20px;\\n    display: block;\\n    color:#06a79e;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "export default {\n    patient: {},\n    accountSummary: undefined,\n    salesOrderTotal: 0,\n    invoiceFInalization: []\n};", "export default {\n    SET_PATIENT(state, pat) {\n        state.patient = pat;\n    },\n    SET_PATIENT_ACCOUNT_SUMMARY(state, summary) {\n        state.accountSummary = summary;\n    },\n    SET_PATIENT_SALES_ORDER_TOTALS(state, total) {\n        state.salesOrderTotal = total;\n    },\n    SET_INVOICE_FINALIZATION(state, finalizations) {\n        state.invoiceFInalization = finalizations;\n    }\n};", "export const api = ({ method, args = {}, freeze = true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            freeze,\n            callback: ({ message }) => resolve(message),\n            error: reject,\n        })\n    );\n\nexport const getPatient = ({ patient_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_patient\",\n        args: {\n            patient_name,\n        },\n    });\n\n// export const getInvoiceFinalizations2 = (customer_number) =>\n//     api({\n//         method: \"billing.billing.api.accounts.patients.get_invoice_finalizations\",\n//         args: {\n//             customer_number\n//         },\n//     }).then(({ message }) => message);\n\nexport const getInvoiceFinalizations = (customer_number) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_invoice_finalizations\",\n        args: {\n            customer_number,\n        },\n    });\n//.then(({ message }) => message);\n\nexport const getPatientInvoices = ({ patient_number = \"\" }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_customer_invoice\",\n        args: {\n            patient_number,\n        },\n    });\n// .then(({ message }) => message);\n\nexport const savePatientScheme = ({\n        patient_name,\n        scheme_name,\n        member_number,\n        principal_member,\n        relationship_to_principal,\n        inpatient_limit,\n        outpatient_limit,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.create_patient_scheme\",\n        args: {\n            patient_name,\n            scheme_name,\n            member_number,\n            principal_member,\n            relationship_to_principal,\n            inpatient_limit,\n            outpatient_limit,\n        },\n    });\n// .then(({ message }) => message);\nexport const savePaymentEntry = ({\n        docname,\n        doctype,\n        amount,\n        account_for_change,\n        change_amount = 0,\n        amount_tendered,\n        reference_no,\n        mode_of_payment,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.create_payment_entry\",\n        args: {\n            docname,\n            doctype,\n            amount,\n            account_for_change,\n            change_amount,\n            amount_tendered,\n            reference_no,\n            mode_of_payment,\n        },\n    });\n\nexport const getPatientSalesrders = ({ patient_name = \"\" }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_pending_preauth_sales_orders\",\n        args: {\n            patient_name,\n        },\n    });\n// .then(({ message }) => message);\n//\nexport const authorizeSalesrder = ({ sales_order_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.set_sales_order_as_authorized\",\n        args: {\n            sales_order_name,\n        },\n    });\n\n\nexport const transitionSalesOrderToInvoice = ({ sales_order_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.transition_sales_order_to_invoice\",\n        args: {\n            sales_order_name,\n        },\n    });\n\nexport const submitSalesOrder = ({ sales_order_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.submit_sales_order\",\n        args: {\n            sales_order_name,\n        },\n    });\n\nexport const savePrePayment = ({\n        customer_name,\n        amount,\n        account_for_change,\n        change_amount = 0,\n        amount_tendered,\n        reference_no,\n        mode_of_payment,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.create_prepayment\",\n        args: {\n            customer_name,\n            amount,\n            account_for_change,\n            change_amount,\n            amount_tendered,\n            reference_no,\n            mode_of_payment,\n        },\n    });\n\nexport const getPatientProcedues = ({ patient_number = \"\" }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_patient_procedures\",\n        args: {\n            patient_number,\n        },\n    });\n\nexport const getProcedureChargess = ({ procedure_id }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_patient_procedures_charges\",\n        args: {\n            procedure_id,\n        },\n    });\n\nexport const appendProcedureCharges = ({ procedure_charge_name, payload }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.append_procedure_charges\",\n        args: {\n            procedure_charge_name,\n            payload,\n        },\n    });\n\nexport const submitProcedureCharges = ({ procedure_charge_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.submit_procedure_charges\",\n        args: {\n            procedure_charge_name,\n        },\n    });\n\nexport const getCategorizedSalesOrders = ({ patient_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_categorized_sales_orders\",\n        args: {\n            patient_name,\n        },\n    });\n\nexport const getCategorizedSalesInvoices = ({ patient_number }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_categorized_customer_invoice\",\n        args: {\n            patient_number,\n        },\n    });\n\nexport const getInsuranceSalesOrders = ({ patient_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.get_insurance_sales_orders\",\n        args: {\n            patient_name,\n        },\n    });\n\nexport const updateSalesOrderCustomer = ({\n        sales_order_name,\n        customer_group_name,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.update_sales_order_customer\",\n        args: {\n            sales_order_name,\n            customer_group_name,\n        },\n    });\n\nexport const approvePreAuth = (sales_order_name) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.approve_pre_auth\",\n        args: {\n            sales_order_name,\n        },\n    });\n\nexport const sendSalesOrderToDraft = (sales_order_name) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.send_order_to_draft\",\n        args: {\n            sales_order_name,\n        },\n    });\n\nexport const createSalesReturn = ({ invoice_name, return_amount }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.sales_return\",\n        args: {\n            invoice_name,\n            return_amount,\n        },\n    });\n\nexport const createFinalizedPayment = ({\n        finalization_name,\n        amount,\n        customer_group_name,\n        mode_of_payment,\n        reference_no,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.create_finalization_payment\",\n        args: {\n            finalization_name,\n            amount,\n            customer_group_name,\n            mode_of_payment,\n            reference_no,\n        },\n    });\n\nexport const submitInvoiceFinalization = ({ finalization_name }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.submit_finalization\",\n        args: {\n            finalization_name,\n        },\n    });\n\nexport const createCustomSalesOrder = ({\n        items,\n        warehouse,\n        customer_name,\n        patient,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.customer.create_sales_order_from_accounts\",\n        args: {\n            items,\n            warehouse,\n            customer_name,\n            patient,\n        },\n    });\n\nexport const getUserWarehouses = () =>\n    api({\n        method: \"billing.billing.api.accounts.customer.get_user_permitted_warehouses\",\n        args: {},\n    });\n\n//from\n\nexport const getItemPriceListRate = ({\n        item_code,\n        customer,\n        warehouse = \"\",\n        qty = 1,\n    }) =>\n    api({\n        method: \"billing.billing.api.sales_orders.sales_order_endpoint.get_price_list_rate\",\n        args: {\n            item_code,\n            customer,\n            warehouse,\n            qty,\n        },\n    });\n\nexport const fetchConditionalItemPrice = ({\n        item_code,\n        customer,\n        patient,\n        warehouse = \"\",\n        qty = 1,\n    }) =>\n    api({\n        method: \"billing.billing.api.sales_orders.sales_order_endpoint.fetch_conditional_item_price\",\n        args: {\n            item_code,\n            customer,\n            patient,\n            warehouse,\n            qty,\n        },\n    });\n\nexport const itemStockBalance = ({ item_code }) =>\n    api({\n        method: \"clinical.api.warehouse.warehouse.get_item_stock_quantities\",\n        args: {\n            item_code,\n        },\n    });\n\nexport const markSalesOrderAsPosted = ({ sales_order_name }) =>\napi({\n    method: \"billing.billing.api.sales_invoice.create_sales_invoice.post_sales_order\",\n    args: {\n        sales_order_name,\n    },\n});\n\nexport const apppendSalesOrderToInvoice = ({ customer_name }) =>\napi({\n    method: \"billing.billing.api.sales_invoice.create_sales_invoice.invoice_sales_orders\",\n    args: {\n        customer_name,\n    },\n});\n//.then(({ message }) => message)\n\nexport const changeSalesOrderCustomer = (args) =>\napi({\n    method: \"billing.billing.api.sales_invoice.create_sales_invoice.change_invoice_customer\",\n    args\n});", "export const api = ({ method, args = {}, freeze=true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, freeze, callback: resolve })\n    );\n\nexport const getPatientInvoices = ({\n        patient_number = \"\",\n        appointment_number = \"\",\n        inpatient_record = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_invoice\",\n        args: {\n            patient_number,\n            appointment_number,\n            inpatient_record\n        },\n    }).then(({ message }) => message);\n\nexport const getPatientInvoiceTotal = ({\n        patient_number = \"\",\n        appointment_number = \"\",\n        inpatient_record = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_invoice_total\",\n        args: {\n            patient_number,\n            appointment_number,\n            inpatient_record\n        },\n    }).then(({ message }) => message);\n\nexport const getPatientPayments = ({\n        patient_number = \"\",\n        appointment_number = \"\",\n        inpatient_record = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_payments\",\n        args: {\n            patient_number,\n            appointment_number,\n            inpatient_record\n        },\n    }).then(({ message }) => message);\n\nexport const getPatientPaymentsTotal = ({\n        patient_number = \"\",\n        appointment_number = \"\",\n        inpatient_record = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_payments_total\",\n        args: {\n            patient_number,\n            appointment_number,\n            inpatient_record\n        },\n    }).then(({ message }) => message);\n\nexport const getSalesOrders = ({\n        patient_number = \"\",\n        appointment_number = \"\",\n        inpatient_record = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_sales_orders\",\n        args: {\n            patient_number,\n            appointment_number,\n            inpatient_record\n        },\n    }).then(({ message }) => message);\n\nexport const getPaymentEntry = ({\n        patient_number = \"\",\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_payment_entries\",\n        args: {\n            patient_number,\n        },\n    }).then(({ message }) => message);\n\nexport const getAccountsDashboard = ({\n        patient_number = \"\",\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.customer_account_dashboard_info\",\n        args: {\n            patient_number,\n        },\n    }).then(({ message }) => message);\n\nexport const createSalesInvoiceFromSalesOrder = ({\n        sales_order_name,\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.create_sales_invoice_from_order\",\n        args: {\n            sales_order_name,\n        },\n    }).then(({ message }) => message);\n\nexport const finalizeInvoice = (sales_invoice) =>\n    api({\n        method: \"billing.billing.utils.invoice_utils.make_final_invoice\",\n        args: {\n            sales_invoice,\n            sales_invoice_name: \"\"\n        },\n    }).then(({ message }) => message);\n\nexport const getInvoiceFinalizations = ({\n        appointment_number = \"\",\n        inpatient_record = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_invoice_finalizations\",\n        args: {\n            appointment_number,\n            inpatient_record\n        },\n    }).then(({ message }) => message);\n\nexport const emailInvoiceFinalizations = ({\n        party_type,\n        party_name,\n        message,\n        ref_type,\n        ref_name\n    }) =>\n    api({\n        method: \"mtrh_dev.mtrh_dev.tqe_evaluation.stage_party_email\",\n        args: {\n            party_type,\n            party_name,\n            message,\n            ref_type,\n            ref_name\n        },\n    }).then(({ message }) => message);\n//\nexport const getPatientInsuranceSchemes = ({\n        patient_number\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_patient_insurance_scheme\",\n        args: {\n            patient_number\n        },\n    }).then(({ message }) => message);\n\nexport const allocateAmountToInvoice = ({\n        sales_invoice_item,\n        new_amount,\n        payer_name = \"\"\n    }) =>\n    api({\n        method: \"billing.billing.utils.invoice_utils.allocate_to_sales_invoice\",\n        args: {\n            sales_invoice_item,\n            new_amount,\n            payer_name\n        },\n    }).then(({ message }) => message);\nexport const prepareAllocationFieldList = ({\n        docname\n    }) =>\n    api({\n        method: \"mtrh_dev.mtrh_dev.doctype.invoice_finalization.invoice_finalization.prepare_allocation_field_list\",\n        args: {\n            docname\n        },\n    }).then(({ message }) => message);\n\nexport const getSalesInvoiceItems = ({\n        name\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_sales_invoice_items\",\n        args: {\n            name\n        },\n    }).then(({ message }) => message);\n\nexport const splitInvoice = ({\n        primary_invoice,\n        split_args,\n        row\n    }) =>\n    api({\n        method: \"mtrh_dev.mtrh_dev.doctype.invoice_finalization.invoice_finalization.split_invoice\",\n        args: {\n            primary_invoice,\n            split_args,\n            row\n        },\n        freeze: true,\n        freeze_message: 'Allocating Invoices to payers',\n    }).then(({ message }) => message);\nexport const getFinalizedInvoiceItems = ({\n        name\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_finalized_invoice_items\",\n        args: {\n            name\n        },\n    }).then(({ message }) => message);\n\nexport const getUnbilledSalesOrderTotals = ({\n        patient_number\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_unbilled_sales_order_totals\",\n        args: {\n            patient_number\n        },\n    }).then(({ message }) => message);\nexport const createGatePass = ({\n        invoice_finalization_name,\n        remarks\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.create_gate_pass\",\n        args: {\n            invoice_finalization_name,\n            remarks\n        },\n    }).then(({ message }) => message);\nexport const getFinalizedInvoiceAllocations = ({\n        final_invoice_name\n    }) =>\n    api({\n        method: \"clinical.api.patient_accounts.get_finalized_invoice_allocations\",\n        args: {\n            final_invoice_name\n        },\n    }).then(({ message }) => message);\n\nexport const updatePatientInsuranceSchemeLimits = ({\n        docname,\n        scheme_name,\n        op_limit = 0,\n        ip_limit = 0,\n        op_balance = 0,\n        ip_balance = 0,\n    }) =>\n    api({\n        method: \"billing.billing.api.accounts.patients.update_patient_scheme\",\n        args: {\n            docname,\n            scheme_name,\n            op_limit,\n            ip_limit,\n            op_balance,\n            ip_balance\n        },\n    }).then(({ message }) => message);", "import {\n    getPatient,\n    getInvoiceFinalizations\n} from '../../services/accounts/patient.js'\n\nimport {\n    getAccountsDashboard,\n    getUnbilledSalesOrderTotals,\n    //getInvoiceFinalizations,\n    emailInvoiceFinalizations,\n    prepareAllocationFieldList,\n    getSalesInvoiceItems,\n    splitInvoice,\n    getFinalizedInvoiceItems,\n    createGatePass,\n    getFinalizedInvoiceAllocations\n} from \"../../services/patient_chart/accounts.js\";\n\nexport default {\n    fetchPatient({ commit }, patientName) {\n        getPatient({ patient_name: patientName }).then(result => {\n            if (result) {\n                commit('SET_PATIENT', result);\n            }\n        });\n    },\n\n    fetchPatientAccountSummary({ commit }, patientName) {\n        getAccountsDashboard({ patient_number: patientName }).then(result => {\n            if (result) {\n                commit('SET_PATIENT_ACCOUNT_SUMMARY', result);\n            }\n        });\n    },\n    fetchUnbilledSalesOrderTotals({ commit }, patientName) {\n        getUnbilledSalesOrderTotals({ patient_number: patientName }).then(result => {\n            if (result) {\n                commit('SET_PATIENT_SALES_ORDER_TOTALS', result);\n            }\n        });\n    },\n    fetchInvoiceFinalizations({ commit }, customerName) {\n        getInvoiceFinalizations({ customer_number: customerName }).then(result => {\n            if (result) {\n                alert('honna')\n                console.log(JSON.stringify(result))\n                commit('SET_INVOICE_FINALIZATION', result);\n            }\n        });\n    },\n};", "export default {\n    patient: state => state.patient,\n    accountSummary: state => state.accountSummary,\n    salesOrderTotal: state => state.salesOrderTotal,\n    invoiceFInalization: state => state.invoiceFInalization\n};", "import state from \"./state\";\nimport mutations from \"./mutations\";\nimport actions from \"./actions\";\nimport getters from \"./getters\";\n\nexport default {\n    // isRegistered: false,\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters\n};", "export const api = ({ method, args = {}, freeze = true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            freeze,\n            callback: ({ message }) => resolve(message),\n            error: reject,\n        })\n    );\n\n/**\n * @returns {Promise}\n * @param service_unit string\n */\nexport const getPatientsPerServiceUnit = ({\n        serviceUnit: service_unit,\n        servicePoint: service_point,\n        search = \"\",\n        traverse = \"\"\n    }) =>\n    api({\n        method: \"clinical.api.patients.get_patients_per_service_unit\",\n        args: {\n            service_unit,\n            service_point,\n            search,\n            traverse\n        },\n        freeze:false\n    });\n\n/**\n * @returns {Promise<any[]>}\n */\nexport const getMyServiceUnits = () =>\n    api({\n        method: \"clinical.clinical.doctype.user_service_unit.user_service_unit.get_user_service_unit\",\n    });\n\nexport const getMyServicePoints = (service_unit) =>\n    api({\n        method: \"clinical.clinical.doctype.service_point.service_point.get_unit_service_points\",\n        args: {\n            service_unit,\n        },\n    });\n\nexport const getMyLocation = () =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.get_my_location\",\n        args: {},\n    });\n\nexport const updatePractitionerOccupancy = (service_unit, service_point) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.update_practitioner_occupancy\",\n        args: {\n            service_unit,\n            service_point,\n        },\n    });\n\nexport const vacateServicePoint = (service_unit) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.vacate_service_point\",\n        args: {\n            service_unit,\n        },\n    });\n\nexport const viewPatientsInQueue = (service_unit) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.view_patients_in_queue\",\n        args: {\n            service_unit,\n        },\n    });\n\nexport const queuePatientToNextServiceStage = (\n        queue_state,\n        appointment,\n        service_point,\n        passed_status\n    ) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.queue_patient_to_next_service_stage\",\n        args: {\n            queue_state,\n            appointment,\n            service_point,\n            passed_status\n        },\n    });\n\nexport const getAllQueueStatus = () =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.get_all_queue_status\",\n        args: {},\n    });\n\nexport const callPatientIn = (queue_state) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.call_patient_in\",\n        args: {\n            queue_state,\n        },\n    });\n\nexport const stopPatientAnnouncement = (queue_state) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.stop_patient_announcement\",\n        args: {\n            queue_state,\n        },\n    });\n\nexport const getPatientsCurrentlySeeingDoctors = (service_unit) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.get_patients_currently_seeing_doctors\",\n        args: {\n            service_unit,\n        },\n    });\n\nexport const getAnnouncedPatients = (service_unit) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.get_announced_patients\",\n        args: {\n            service_unit,\n        },\n    });\n\nexport const getPatientsAwaiting = (service_unit, status) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.get_number_of_patients_awaiting\",\n        args: {\n            service_unit,\n            status,\n        },\n    });\n\nexport const reinforceQueueTransfer = (service_unit) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.reinforce_queue_transfers\",\n        args: {\n            service_unit,\n        },\n    });\n\n/**\n * @returns {Promise<any[]>}\n */\nexport const getPatientInfo = (patient) =>\n    api({\n        method: \"erpnext.healthcare.doctype.patient.patient.get_patient_detail\",\n        args: {\n            patient,\n        },\n    });\n\n/**\n * @returns {Promise<any[]>}\n */\nexport const getMyPatientTabPermissions = () =>\n    api({\n        method: \"clinical.clinical.doctype.patient_tab_permissions.patient_tab_permissions.get_patient_tabs_user_can_view\",\n    });\n\nexport const getMyPatientTabPermissionsForFilters = () =>\n    api({\n        method: \"clinical.clinical.doctype.patient_tab_permissions.patient_tab_permissions.get_patient_tabs_for_filter\",\n    });\n\nexport const getMedicationOrderReadOnlyStatus = () =>\n    api({\n        method: \"clinical.clinical.doctype.patient_tab_permissions.patient_tab_permissions.get_medication_order_read_only_status\",\n    });\nexport const getProcedureReadOnlyStatus = () =>\n    api({\n        freeze: false,\n        method: \"clinical.clinical.doctype.patient_tab_permissions.patient_tab_permissions.get_procedure_read_only_status\",\n    });\nexport const getPatientMedicationOrders = (patient) =>\n    api({\n        method: \"clinical.api.inpatient_drug_administration.inpatient_drug_administration.fetch_medication_orders\",\n        args: {\n            entry: { patient },\n        },\n    });\n\nexport const getPatientUnboundedMedicationOrder = (payload) =>\n    api({\n        method: \"clinical.api.inpatient_drug_administration.inpatient_drug_administration.fetch_medication_order\",\n        args: {\n            entry: payload,\n        },\n    });\n   \nexport const createMedicationEntry = ({ order, ward }) =>\n    api({\n        method: \"clinical.api.inpatient_drug_administration.medication_entry.create_medication_entry\",\n        args: {\n            order,\n            ward,\n        },\n    });\n\nexport const validatePFNumber = (number) =>\n    api({\n        method: \"clinical.api.inpatient_drug_administration.medication_entry.validate_employee\",\n        freeze: false,\n        args: {\n            number: number.trim(),\n        },\n    });\n\nexport const getPractitionerMedicationOrders = (patient) =>\n    api({\n        method: \"clinical.api.inpatient_medication_orders.inpatient_medication_orders.get_doctor_medication_orders\",\n        args: {\n            patient,\n            patient_encounter_status: \"1\",\n        },\n    });\n\nexport const getUnsubmittedMedicationOrders = (\n        patient,\n        patient_encounter = \"\"\n    ) =>\n    api({\n        method: \"clinical.api.inpatient_medication_orders.inpatient_medication_orders.get_doctor_medication_orders\",\n        args: {\n            patient,\n            patient_encounter_status: \"0\",\n            patient_encounter,\n        },\n    });\n\nexport const cancelMedicationOrder = (name) =>\n    api({\n        method: \"clinical.api.inpatient_medication_orders.inpatient_medication_orders.cancel_inpatient_medication_order\",\n        args: {\n            name,\n        },\n    });\n\nexport const createMedicationOrder = (order) =>\n    api({\n        method: \"clinical.api.inpatient_medication_orders.inpatient_medication_orders.create_inpatient_medication_order\",\n        args: {\n            order,\n        },\n    });\n\nexport const createPrescription = (order, order_list, type) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.create_prescription\",\n        args: {\n            order,\n            order_list,\n            type,\n        },\n    });\n\nexport const createDoctorsPrescription = (order, order_list, type) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.make_doctors_prescription\",\n        args: {\n            order,\n            order_list,\n            type,\n        },\n    });\nexport const getPrescriptions = (patient) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_prescriptions\",\n        args: {\n            patient,\n        },\n    });\n\nexport const getDoctorsPrescriptions = (patient) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_doctors_prescriptions\",\n        args: {\n            patient,\n        },\n    });\n\nexport const addAProcedure = (procedure, ward, is_walk_in) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.add_clinical_procedure\",\n        args: {\n            procedure,\n            ward,\n            is_walk_in,\n        },\n    });\n\nexport const getProcedures = (patient) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_procedures\",\n        args: {\n            patient,\n        },\n    });\n\nexport const getUnsubmittedProcedures = (patient, practitioner) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_unsubmitted_procedures\",\n        args: {\n            patient,\n            practitioner,\n        },\n    });\n\nexport const getInpatientMedications = (patient, inpatient_record) =>\n    api({\n        method: \"clinical.api.patients.get_inpatient_medications\",\n        args: {\n            patient,\n            inpatient_record,\n        },\n    });\n\n\nexport const getInpatientClinicalProcedures = (patient, inpatient_record) =>\n    api({\n        method: \"clinical.api.patients.get_inpatient_clinical_procedures\",\n        args: {\n            patient,\n            inpatient_record,\n        },\n    });\n\nexport const getInpatientLabTests = (patient, inpatient_record) =>\n    api({\n        method: \"clinical.api.patients.get_inpatient_lab_tests\",\n        args: {\n            patient,\n            inpatient_record,\n        },\n    });\n\nexport const getInpatientDischargeNotes = (patient, inpatient_record) =>\n    api({\n        method: \"clinical.api.patients.get_inpatient_discharge_notes\",\n        args: {\n            patient,\n            inpatient_record,\n        },\n    });\n\nexport const getInpatientDoctorsNotes = (patient, inpatient_record) =>\n    api({\n        method: \"clinical.api.patients.get_inpatient_doctors_notes\",\n        args: {\n            patient,\n            inpatient_record,\n        },\n    });\n\nexport const addALabPrescription = ({\n        encounter_name,\n        lab_test_code,\n        lab_test_comment,\n    }) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.add_lab_prescription\",\n        args: {\n            encounter_name,\n            lab_test_code,\n            lab_test_comment,\n        },\n    });\n\nexport const getTemplatePOCStatus = (lab_test_code) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_template_poc_status\",\n        args: {\n            lab_test_code: lab_test_code,\n        },\n    });\n\nexport const getNormalRange = (lab_test_code) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_normal_range\",\n        args: {\n            lab_test_code: lab_test_code,\n        },\n    });\n\nexport const getRangeNote = (lab_test_code, result_value) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_range_note\",\n        args: {\n            lab_test_code: lab_test_code,\n            result_value: result_value,\n        },\n    });\n\nexport const getLabPrescriptions = (patient) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_lab_prescriptions\",\n        args: {\n            patient,\n        },\n    });\n\nexport const getCancelledLabPrescriptions = (patient) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_cancelled_lab_prescriptions\",\n        args: {\n            patient,\n        },\n    });\n\nexport const submitLabPrescriptions = ({\n        service_unit,\n        admission_status,\n        encounter_name,\n    }) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.submit_and_bill_lab_prescriptions\",\n        args: {\n            service_unit,\n            admission_status,\n            encounter_name,\n        },\n    });\n\nexport const cancelLabPrescription = (encounter_name, prescription_name) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.cancel_lab_prescription\",\n        args: {\n            encounter_name,\n            prescription_name,\n        },\n    });\n\nexport const deleteLabPrescription = (encounter_name, prescription_name) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.delete_lab_prescription\",\n        args: {\n            encounter_name,\n            prescription_name,\n        },\n    });\n\nexport const postPOCLabTestResults = (poc_lab_test_results) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.post_poc_lab_test_results\",\n        args: {\n            poc_lab_test_results,\n        },\n    });\n\nexport const getTherapies = (patient) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.get_therapies\",\n        args: {\n            patient,\n        },\n    });\n\nexport const addARehabilitationTherapy = (therapy) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.add_rehab_therapy\",\n        args: {\n            therapy,\n        },\n    });\n\nexport const createPatientEncounter = (patient, is_walk_in) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.create_patient_encounter\",\n        args: {\n            patient,\n            is_walk_in,\n        },\n    });\n\nexport const checkOpenAppointment = (patient) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.check_open_appointment\",\n        args: {\n            patient,\n        },\n    });\n\nexport const makeStockEntry = ({ warehouse, item_code, quantity }) =>\n    api({\n        method: \"clinical.api.prescription.stock.make_stock_entry_for_stockable_items\",\n        args: {\n            warehouse,\n            item_code,\n            quantity\n        },\n    });\n\n\nexport const getDraftPatientEncounters = (patient,source='',service_unit={}) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.get_draft_patient_encounter\",\n        args: {\n            patient,\n            source,\n            service_unit\n        },\n    });\n\nexport const submitEncounter = (name, service_unit = {}, to_bill = true, origin, isWalkIn) => {\n    return api({\n        method: \"clinical.api.patient_encounter.patient_encounter.submit\",\n        args: {\n            name,\n            doctype: \"Patient Encounter\",\n            service_unit,\n            to_bill: to_bill ? 1 : 0,\n            origin,\n            is_walk_in: isWalkIn\n        },\n    });\n}\n\nexport const submitMedicationOrder = (name) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.submit\",\n        args: {\n            name,\n            doctype: \"Inpatient Medication Order\",\n        },\n    });\nexport const removePrescription = (encounter_name, prescription_name) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.remove_prescription\",\n        args: {\n            encounter_name,\n            prescription_name,\n        },\n    });\n\nexport const getDraftMedicationOrder = (patient) =>\n    api({\n        method: \"clinical.api.inpatient_medication_orders.inpatient_medication_orders.get_draft_medication_orders\",\n        args: {\n            patient,\n        },\n    });\n\nexport const getClinicalProcedures = (patient) => {\n    return api({\n        method: \"clinical.api.orders.prescriptions.get_clinical_procedures\",\n        args: {\n            patient,\n        },\n    });\n};\n\nexport const addNotesToProcedure = (procedure, notes = \"\") =>\n    api({\n        method: \"clinical.api.orders.prescriptions.add_notes_to_procedure\",\n        args: {\n            procedure,\n            notes,\n        },\n    });\n\nexport const startOrFinishprocedure = (procedure, status = \"Start\") =>\n    api({\n        method: \"clinical.api.orders.prescriptions.start_finish_procedure\",\n        args: {\n            procedure,\n            status,\n        },\n    });\n\nexport const createProcedureChargesDraft = (procedure, procedure_template) =>\n    api({\n        method: \"clinical.api.clinical_procedure.clinical_procedure.create_procedure_charges_draft\",\n        args: {\n            procedure,\n            procedure_template,\n        },\n    });\n\nexport const submitAndBillProcedure = (document, name, is_emergency, origin) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.submit_clinical_procedure\",\n        args: {\n            document,\n            name,\n            is_emergency,\n            origin,\n        },\n    });\n\nexport const getDoc = (doctype, name) =>\n    api({\n        method: \"frappe.client.get\",\n        args: {\n            doctype,\n            name,\n        },\n    });\n\nexport const createSalesOrder = (data) =>\n    api({\n        method: \"billing.billing.api.sales_orders.sales_order_endpoint.create_sales_order_endpoint\",\n        args: {\n            data,\n        },\n    });\n\nexport const closeAppointment = (appointment_number) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.close_appointment\",\n        args: {\n            appointment_number,\n        },\n    });\n\nexport const scheduleAdmission = (args) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.schedule_admission\",\n        args,\n    });\n\nexport const admitPatient = (args) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.admit_patient\",\n        args,\n    });\n\nexport const checkAdmissionEligibility = ({\n        inpatient_record = \"\",\n        service_unit = \"\",\n    }) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.check_admission_eligibility\",\n        args: {\n            inpatient_record,\n            service_unit,\n        },\n    });\n\nexport const createInpatientTransfer = ({\n        patient,\n        inpatient_record,\n        target_medical_department,\n        initiating_service_unit,\n        initiating_bed,\n        target_service_unit,\n        target_bed,\n    }) =>\n    api({\n        method: \"clinical.api.patients.create_inpatient_transfer\",\n        args: {\n            patient,\n            inpatient_record,\n            target_medical_department,\n            initiating_service_unit,\n            initiating_bed,\n            target_service_unit,\n            target_bed,\n        },\n    });\n\n\nexport const transferOutpatient = ({\n        queue_state,\n        service_unit,\n    }) =>\n    api({\n        method: \"clinical.api.queue_management.queue_logistics.transfer_outpatient_in_queue\",\n        args: {\n            queue_state,\n            service_unit,\n        },\n    });\n\nexport const getPatientAgeAndGender = (patient) =>\n    api({\n        method: \"clinical.api.patients.get_patient_age_and_gender\",\n        args: {\n            patient,\n        },\n    });\n\n\n/**\n * @returns {Promise<any[]>}\n */\nexport const transferPatient = (args) =>\n    api({\n        method: \"clinical.api.patients.transfer_inpatient\",\n        args,\n    });\n\nexport const rejectPatientTransfer = ({ inpatient_transfer, status }) =>\n    api({\n        method: \"clinical.api.patients.update_inpatient_transfer\",\n        args: {\n            inpatient_transfer,\n            status,\n        },\n    });\n\nexport const changePatientMedicalRecord = ({ patient,document }) =>\n    api({\n        method: \"clinical.api.appointment.appointment.change_patient_medical_record\",\n        args: {\n            patient,\n            document\n        },\n    });\n\nexport const generateGatePass = ({ patient }) =>\n    api({\n        method: \"clinical.api.patients.generate_gate_pass_from_user_action\",\n        args: {\n            patient,\n        },\n    });\n\n/**\n * @returns {Promise<any[]>}\n */\nexport const checkStockAvailability = (args) =>\n    api({\n        method: \"erpnext.stock.dashboard.item_dashboard.get_data\",\n        args,\n    });\n\n/**\n * @returns {Promise<any[]>}\n */\nexport const getAlternativeDrugs = (drug_name) =>\n    api({\n        method: \"clinical.api.prescription.prescription.get_drug_item_alternates\",\n        args: {\n            drug_name,\n        },\n    });\n\nexport const addComment = (args) =>\n    api({\n        method: \"clinical.api.orders.prescriptions.add_comment\",\n        args,\n    });\n\nexport const cancelUnsubmittedProcedure = (encounter, procedure_name) => {\n    return api({\n        method: \"clinical.api.clinical_procedure.clinical_procedure.cancel_unsubmitted_procedure\",\n        args: { encounter, procedure_name },\n    });\n};\n\n// cancel_clinical_procedure\nexport const cancelClinicalProcedure = (procedure_name) => {\n    return api({\n        method: \"clinical.api.clinical_procedure.clinical_procedure.cancel_clinical_procedure\",\n        args: { procedure_name },\n    });\n};\n\nexport const bulkRescheduleAppointments = (args) => {\n    return api({\n        method: \"clinical.api.appointment.appointment.reschedule_appointments\",\n        args,\n    });\n};\n\nexport const getDrugMappings = (args) => {\n    return api({\n        method: \"clinical.api.orders.prescriptions.get_drug_options\",\n        args,\n    });\n};\n\nexport const getDrugGroups = (args = {}) => {\n    return api({\n        method: \"clinical.api.orders.prescriptions.get_drug_item_groups\",\n        args,\n    }).then((data) => {\n        console.warn(data)\n        return data\n    })\n}", "export const api = ({ method, args = {}, freeze=true  }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, freeze, callback: resolve })\n    );\n\n\nexport const itemStockBalanceWarehouse = ({\n    item_code,warehouse\n}) =>\napi({\n    method: \"clinical.api.warehouse.warehouse.get_item_stock_warehouse_quantities\",\n    args: {\n        item_code,warehouse\n    },\n}).then(({ message }) => message)", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    getPatientSalesrders,\n    authorizeSalesrder,\n    savePaymentEntry,\n    submitSalesOrder,\n    savePrePayment,\n    getCategorizedSalesOrders,\n    api,\n    createCustomSalesOrder,\n    itemStockBalance,\n    fetchConditionalItemPrice,\n    getUserWarehouses,\n    markSalesOrderAsPosted,\n    apppendSalesOrderToInvoice\n} from '../../services/accounts/patient.js'\nimport {checkOpenAppointment, makeStockEntry} from '../../services/patient_chart/api'\nimport { itemStockBalanceWarehouse } from '../../services/stock/stock-check';\nconst __vue_script__ = {\n    name: 'SalesOrder',\n    props: {\n        patient_number: {\n            type: String,\n            default: \"\",\n            required: true,\n        },\n        customerNumber: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        patientName: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n    },\n    data() {\n        return {\n            salesOrderItems: undefined,\n            selectedOrders: [],\n            categorizedOrders: {},\n            warehouses: [],\n            filterSwitch: false,\n            dynamicFilters: {},\n            patientHasAppointment: false,\n            individualTotal :0,\n            insuranceTotal:0,\n            excludedGroups:[\n                \"BIOMED PLANTS AND EQUIPMENT\", \"CAPITAL PROJECT\",\"TRANSPORT STAFF UNIFORM\",\"MEDICAL EQUIPMENT\",\"MEDICAL EQUIPMENTS\",\"CAPITAL PROJECT (CATERING)\",\n                \"COOKING GASES\",\"FOOD AND RATION\",\"UNIFORMS - CATERING\",\"UTENSILS\",\"ADVERTISEMENT\",\"ADVERTISING & PUBLICITY\",\"CHRISTMAS DECORATIONS\",\"CONFERENCE\",\n                \"DOCUMENTARY\",\"HIRE\",\"HOSPITALITY\",\"SIGNAGE\",\"FAREWELL HOME ITEMS\",\"FUEL & GASES\",\"CLEANSING MATERIALS AND DETERGENTS\",\"MEDICAL RECORDS ITEMS\",\n                \"MEDICAL RECORDS STATIONERY\",\"OFFICE EQUIPMENTS\",\"PASTORAL SERVICES\",\"PHOTOCOPIER\",\"PROMOTIONAL MATERIALS\",\"STATIONERY\",\"ANTISEPTIC\",\"DETERGENTS\",\n                \"DISINFECTANT\",\"UNIFORMS\",\"COMPUTERS AND ACCESSORIES\",\"ICT EQUIPMENTS\",\"MOBILE PHONES ,TABLETS AND IPADS\",\"NETWORKING ACCESSORIES\",\"SERVERS\",\n                \"SOFTWARE AND TECHNOLOGY SERVICES\",\"TELEPHONE ACCESSORIES\",\"INSURANCE\",\"KITCHEN ITEMS GROUP\",\"KITCHEN EQUIPMENT & UTENSILS\",\"LABORATORY REAGENT\",\n                \"LABORATORY REAGENTS\",\"LABORATORY REAGENTS AND CONS\",\"LABORATORY REAGENTS AND CONSUMABLES\",\"LAUNDRY DEPARTMENT GROUP\",\"HUMAN RESOURCE TRAINING\",\n                \"LAUNDRY DETERGENTS\",\"LAUNDRY EQUIPMENTS\",\"Laundry staff uniforms\",\"LINEN\",\"PATIENT UNIFORM\",\"SERVICE OF MACHINES\",\"TAILORING ACCESSORIES\",\"UNIFORM\",\n                \"MEDICAL ENGINEERING\",\"BOLT AND NUTS\",\"CARPENTRY\",\"ELECTRICAL APPLIANCES\",\"ELECTRICALS\",\"MASONRY\",\"MECHANICAL\",\"MEDICAL ENGINEERING SAFETY WEAR\",\n                \"MEDICAL ENGINEERING TOOLS\",\"PAINTING\",\"PLUMBING\",\"HOSPITAL UNIFORM\",\"OSH ITEMS AND SERVICES\",\"PPES\",\"MACHINES\",\"MEDICAL APPLIANCES\",\"MEDICAL EQUIPMENTS\",\n                \"PUBLIC HEALTH ITEM GROUPS\",\"ENVIRONMENTAL IMPACT ASSESSMENT\",\"Fertilizer\",\"HERBICIDE\",\"INSECTICIDE\",\"PUBLIC HEALTH DISINFECTANTS AND ANTISEPTICS\",\n                \"PUBLIC HEALTH EQUIPMENT\",\"PUBLIC HEALTH MATERIALS\",\"PUBLIC HEALTH SERVICES\",\"PUBLIC HEALTH TOOLS\",\"PUBLIC HEALTH VACCINATION CARDS\",\"RODENTICIDE\",\n                \"WASTE MANAGEMENT\",\"SECURITY ITEM GROUP\",\"SECURITY ITEMS\",\"SECURITY UNIFORMS\",\"TRAINING\",\"LIBRARY BOOKS\",\"TRAINING PUBLIC HEALTH\",\"TRANSPORT DEPARTMENT\",\n                \"MOTOR VEHICLES\",\"MOTOR VEHICLES ACCESSORIES\",\"MOTOR VEHICLES INSURANCE COVER AND INSPECTION FEE\",\"MOTOR VEHICLES SERVICES AND REPAIRS\",\n                \"VEHICLE SERVICING AND REPAIRS\"\n            ]\n        };\n    },\n    methods: {\n        // \n     makeSearchAppointmentControl() {\n        let me = this;\n        let customer_field = frappe.ui.form.make_control({\n            df: {\n            label: \"Appointments\",\n            fieldtype: \"Link\",\n            fieldname: \"reference\",\n            options: \"Patient Appointment\",\n            placeholder: __(`Search Patient Appointments`),\n            // filters: { patient: me.patient_number },\n            onchange: function() {\n                if (this.value) {\n                    console.log(this.value)\n                //me.setCurrentDoctype(me.doctype, this.value);\n                }\n            },\n            },\n            parent: this.$refs[\"appointment-search\"],\n            render_input: true,\n        });\n\n        customer_field.toggle_label(false);\n        $(\"#modal-body\")\n            .find(\".input-max-width\")\n            .removeClass(\"input-max-width\");\n        },\n        invoiceOrders(){\n            //   customer_name\n             apppendSalesOrderToInvoice({\n                customer_name: this.customerNumber,\n            }).then((data) => {\n                this.fetchCategorizedSalesOrders();\n                  frappe.show_alert({\n                    message: `Sales Orders Invoiced`,\n                    indicator: 'green'\n                }, 5);\n            });\n        },\n        postSalesOrder(salesOrderItem){\n            markSalesOrderAsPosted({\n                sales_order_name: salesOrderItem.parent,\n            }).then((data) => {\n                this.fetchCategorizedSalesOrders();\n                  frappe.show_alert({\n                    message: `Sales Order Posted`,\n                    indicator: 'green'\n                }, 5);\n            });\n        },\n        createSalesOrder(type) {\n            let dialog;\n            let parent = this;\n            //let warehouses = []\n\n            let fields = [{\n                    label: 'Item',\n                    fieldname: 'item_code',\n                    fieldtype: 'Link',\n                    options: 'Item',\n                    reqd: true,\n                    in_list_view: 1,\n                    filters: type === \"Service\" ? { is_stock_item: 0, disabled: 0, has_variants: 'No',item_group: ['NOT IN', parent.excludedGroups] } : { is_stock_item: 1, disabled: 0, has_variants: 'No',item_group: ['NOT IN', parent.excludedGroups] },\n                    onchange: function(e) {\n                        let notify = true\n                        parent.changeListener(dialog, parent, notify)\n                    }\n                },\n                {\n                    label: 'Quantity',\n                    fieldname: 'qty',\n                    fieldtype: 'Float',\n                    reqd: 1,\n                    in_list_view: 1,\n                    onchange: function(e) {\n                        let notify = false\n                        parent.changeListener(dialog, parent, notify)\n\n                    }\n                },\n                {\n                    label: 'Rate',\n                    fieldname: 'rate',\n                    fieldtype: 'Read Only',\n                    in_list_view: 1,\n                    // reqd: 1,\n                },\n                {\n                    label: 'Amount',\n                    fieldname: 'amount',\n                    fieldtype: 'Read Only',\n                    in_list_view: 1,\n                    // reqd: 1,\n                },\n                {\n                    label: 'Stock',\n                    fieldname: 'stock',\n                    fieldtype: 'Read Only',\n                    in_list_view: 1,\n                    // reqd: 1,\n                },\n                {\n                    label: 'Payer',\n                    fieldname: 'payer',\n                    fieldtype: 'Read Only',\n                    in_list_view: 1,\n                    // reqd: 1,\n                },\n            ];\n            dialog = new frappe.ui.Dialog({\n                title: 'Create Sales Order',\n                fields: [{\n                        label: 'Billing Type',\n                        fieldname: 'billing_type',\n                        default: type,\n                        fieldtype: \"Read Only\",\n                    },\n                    {\n                        label: 'Warehouse',\n                        fieldname: 'warehouse',\n                        fieldtype: 'Select',\n                        options: parent.warehouses,\n                        default: parent.warehouses,\n                        mandatory_depends_on: 'eval: doc.billing_type == \"Consumables\"',\n                        depends_on: 'eval: doc.billing_type == \"Consumables\"',\n                        reqd: true,\n                    },\n                    {\n                        fieldname: \"item_list\",\n                        fieldtype: \"Table\",\n                        label: \"Items\",\n                        cannot_add_rows: false,\n                        in_place_edit: true,\n                        reqd: 1,\n                        data: [],\n                        fields\n                    },\n                    {\n                        label: 'Total',\n                        fieldname: 'total',\n                        fieldtype: 'Read Only',\n                        in_list_view: 1,\n                        // reqd: 1,\n                    },\n                ],\n                primary_action_label: 'Submit',\n                primary_action: (values) => {\n\n                    dialog.set_values({\n                        billing_type: `<div class=\"loader\" style=\"border: 16px solid #f3f3f3;border-radius: 50%;border-top: 16px solid #FFA701;width: 30px;height: 30px;-webkit-animation: spin 2s linear infinite;animation: spin 2s linear infinite;\"></div><p>Billing items in the background, please wait</p>`,\n                    });\n\n                    let nullChecker = 0;\n                    values.item_list.forEach((item, index) => {\n                        !item.rate ? nullChecker = 1 : nullChecker = 0;\n                    })\n                       \n                        if (!nullChecker) {\n\n                              createCustomSalesOrder({\n                                        items: values.item_list,\n                                        warehouse: values.warehouse || \"\",\n                                        customer_name: parent.customerNumber,\n                                        patient: parent.patient_number\n                                    }).then(r => {\n                                        // makeStockEntry({warehouse:values.warehouse || \"\",item_code:item.item_code,quantity:item.qty})\n                                        // console.log(JSON.stringify(r))\n                                        if (r.length > 0) {\n                                            parent.fetchCategorizedSalesOrders();\n                                        }\n                                        frappe.msgprint({\n                                            title: __(\"Notification\"),\n                                            indicator: \"green\",\n                                            message: __(`Patient has been successfully billed`),\n                                        });\n\n                                        dialog.set_values({\n                                            billing_type: type,\n                                        });\n\n                                    }).catch(() => {\n                                            dialog.set_values({\n                                                billing_type: type,\n                                        });\n                                    });\n\n                        }else{\n\n                            dialog.set_values({\n                                billing_type: type,\n                            });\n\n                            frappe.msgprint({\n                                            title: __(\"Notification\"),\n                                            indicator: \"red\",\n                                            message: __(`Ensure price has been set for all items`),\n                            });\n                        }\n\n                        \n                    \n                    // dialog.hide();\n\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action() {\n                    dialog.hide();\n                }\n            });\n            dialog.fields_dict[\"item_list\"].df.onchange = () => {\n                alert(\"changed\")\n            }\n            /*dialog.fields_dict[\"qty\"].df.onchange = () => {\n                dialog.set_values({\n                    rate: Number(dialog.get_value(\"item_code\")) * Number(dialog.get_value(\"qty\")),\n                });\n            };*/\n\n            dialog.show();\n            dialog.$wrapper.find('.modal-content').css(\"width\", \"1000px\");\n            dialog.$wrapper.find('.modal-content').css(\"margin-left\", \"-200px\");\n            dialog.$wrapper.find('.modal-content').css(\"backdrop\", \"static\");\n            dialog.$wrapper.find('.modal-content').css(\"keyboard\", \"false\");\n\n            $('.modal-dialog').modal({\n                backdrop: 'static',\n                keyboard: false\n            })\n\n        },\n        changeListener(dialog, parent, notify) {\n            const data = dialog.fields[2].data || [];\n            let total = 0;\n            const promises = data.map((value) => {\n                const { item_code, qty: quantity } = value\n                // console.log(dialog.get_value(\"warehouse\"))\n                \n                return item_code && fetchConditionalItemPrice({\n                    item_code: item_code,\n                    customer: parent.customerNumber,\n                    patient:parent.patient_number,\n                }).then(res => {\n                    if(dialog.get_value(\"warehouse\")){\n                        itemStockBalanceWarehouse({\n                            item_code: item_code,\n                            warehouse: dialog.get_value(\"warehouse\")\n                        }).then(stock=>{\n                            console.log(stock)\n                            if(stock && stock.length>0){\n                                value.stock = stock[0].actual_qty\n                            }\n                            else{\n                            value.stock = 0\n                            }\n                        });\n                    }\n                    if (res.type === \"Patient\") {\n                        let price = res.price;\n                        let amount = Math.ceil((price * quantity));\n                        value.rate = price;\n                        value.amount = amount;\n                        total = total + amount;\n                        value.payer = res.type;\n                        dialog.set_values({\n                            total: total,\n                        });\n                        \n                        if (res.is_nhif === true && notify === true) {\n                            frappe.msgprint({\n                                title: __('Note'),\n                                message: __('Patient will be charged for this item due to insufficient insurance balance'),\n                                primary_action: {\n\n                                }\n                            });\n                        }\n                    } else if (res.type === \"Copay\") {\n                        let price = res.price;\n                        let amount = Math.ceil((price * ((res.remaining_quantity) * quantity)));\n                        value.rate = price;\n                        value.amount = amount;\n                        total = total + amount;\n                        value.payer = \"Copaid amount: \" + \"(\" + (price * ((res.co_paid_quantity) * quantity)) + \")\"\n                        dialog.set_values({\n                            total: total,\n                        });\n                    } else if (res.type === \"Insurance\") {\n                        let price = res.price;\n                        let amount = Math.ceil((price * quantity));\n                        value.rate = price;\n                        value.amount = amount;\n                        total = total + amount;\n                        value.payer = \"Insurance: \" + \"(\" + amount + \")\"\n                        dialog.set_values({\n                            total: total,\n                        });\n\n                    } else if (res.type === \"Pre-auth Insurance\") {\n                        let price = res.price;\n                        let amount = Math.ceil((price * quantity));\n                        value.rate = price;\n                        value.amount = amount;\n                        total = total + amount;\n                        value.payer = \"Pre-auth Insurance: \" + \"(\" + amount + \")\"\n                        dialog.set_values({\n                            total: total,\n                        });\n                    } else if (res.type === \"Pre-auth Copay\") {\n                        let price = res.price;\n                        let amount = Math.ceil((price * ((res.remaining_quantity) * quantity)));\n                        value.rate = price;\n                        value.amount = amount;\n                        total = total + amount;\n                        value.payer = \"Pre-auth Copay: \" + \"(\" + (price * ((res.co_paid_quantity) * quantity)) + \")\"\n                        dialog.set_values({\n                            total: total,\n                        });\n                    }\n                })\n            })\n            Promise.all(promises).then(() => {\n                dialog.refresh()\n            })\n\n        },\n        postInvoiceToAllowService(salesOrderItem) {},\n        submitSalesOrder(salesOrderItem) {\n            submitSalesOrder({ sales_order_name: salesOrderItem.parent }).then(r => {\n                this.fetchCategorizedSalesOrders();\n            })\n        },\n        makePayment(salesOrderItem) {\n            let parent = this;\n            let dialog = new frappe.ui.Dialog({\n                title: `Add Payment Entry for ${parent.patientName}`,\n                fields: [{\n                        label: 'Client Name',\n                        fieldname: 'party',\n                        fieldtype: 'Read Only',\n                        options: 'Customer',\n                        default: `${parent.patientName} (${parent.customerNumber})`,\n                        readonly: 0\n                    },\n                    {\n                        label: 'Sales Order',\n                        fieldname: 'sales_order',\n                        fieldtype: 'Link',\n                        options: 'Sales Order',\n                        default: salesOrderItem.parent,\n                        readonly: 0,\n                        filters: { customer: parent.customerNumber, status: ['not in', ['Completed', 'Cancelled']] },\n                    },\n                    //  {\n                    //     label: 'Account',\n                    //     fieldname: 'paid_to',\n                    //     fieldtype: 'Link',\n                    //     options: 'Account',\n                    //     filters: { account_type: ['in', ['Cash', 'Bank']] },\n                    //     reqd: 1\n                    // },\n                    {\n                        label: 'Mode of Payment',\n                        fieldname: 'mode_of_payment',\n                        fieldtype: 'Link',\n                        options: 'Mode of Payment',\n                        // filters: { account_type: ['in', ['Cash', 'Bank']] },\n                        reqd: 1\n                    },\n                    {\n                        label: 'Reference',\n                        fieldname: 'reference_no',\n                        fieldtype: 'Data',\n                        reqd: 1,\n                        default: Math.floor(Date.now()).toString(36).toUpperCase().toString()\n                    },\n                    {\n                        label: 'Amount',\n                        fieldname: 'paid_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1,\n                        default: salesOrderItem.amount\n                    },\n                    {\n                        label: 'Confirm Amount',\n                        fieldname: 'confirm_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Amount Tendered',\n                        fieldname: 'tendered_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Change',\n                        fieldname: 'change_amount',\n                        fieldtype: 'Read Only',\n                        default: 0,\n                        readony: 0,\n                    },\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    //  console.log(JSON.stringify(dialog.get_values()));\n                    var diff = values.paid_amount - values.confirm_amount\n                    parseFloat(values.confirm_amount) !== parseFloat(values.paid_amount) ? frappe.throw(`Sorry the values you entered differ with invoice by ${diff}`) :\n                        savePaymentEntry({\n                            docname: values.sales_order,\n                            doctype: 'Sales Order',\n                            amount: values.paid_amount,\n                            change_amount: values.change_amount,\n                            amount_tendered: values.tendered_amount,\n                            reference_no: values.reference_no,\n                            // paid_to: values.paid_to\n                            mode_of_payment: values.mode_of_payment\n                        }).then(r => {\n                            parent.$emit('newPaymentEntry');\n                            frappe.show_alert({\n                                message: `Payment Entry Created`,\n                                indicator: 'green'\n                            }, 5);\n                            parent.fetchCategorizedSalesOrders();\n                        });\n                    dialog.hide();\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action() {\n                    dialog.hide();\n                }\n            });\n            dialog.fields_dict[\"tendered_amount\"].df.onchange = () => {\n                // dialog.get_primary_btn().attr(\"disabled\", dialog.get_value(\"paid_amount\") !== dialog.get_value(\"confirm_amount\"));\n                //  dialog.get_value(\"confirm_amount\")\n                if (dialog.get_value(\"paid_amount\") === dialog.get_value(\"confirm_amount\")) {\n                    if (dialog.get_value(\"tendered_amount\") >= dialog.get_value(\"paid_amount\")) {\n                        dialog.set_values({ change_amount: dialog.get_value(\"tendered_amount\") - dialog.get_value(\"paid_amount\") });\n                    } else {\n                        var diff = dialog.get_value(\"tendered_amount\") - dialog.get_value(\"paid_amount\")\n                        dialog.get_primary_btn().attr(\"disabled\", false);\n                        frappe.msgprint(`Sorry the tendered amount is less than paid amount by ${diff.toFixed(2)}`);\n                    }\n                }\n            };\n            dialog.get_primary_btn().attr(\"disabled\", true);\n            dialog.fields_dict[\"paid_amount\"].df.onchange = () => {\n                dialog.get_primary_btn().attr(\"disabled\", dialog.get_value(\"paid_amount\") !== dialog.get_value(\"confirm_amount\"));\n            };\n            dialog.fields_dict[\"confirm_amount\"].df.onchange = () => {\n                dialog.get_primary_btn().attr(\"disabled\", dialog.get_value(\"paid_amount\") !== dialog.get_value(\"confirm_amount\"));\n            };\n            dialog.show();\n        },\n        uploadFile(row) {\n            const me = this;\n            new frappe.ui.FileUploaderCustom({\n                doctype: \"Sales Order\",\n                docname: row.parent,\n                on_success(file_doc) {\n                    authorizeSalesrder({ sales_order_name: row.parent }).then(r => {\n                        frappe.show_alert({\n                            message: `Sales Order Submitted`,\n                            indicator: 'green'\n                        }, 5);\n                    });\n                    me.fetchCategorizedSalesOrders();\n                },\n            });\n        },\n        fetchCategorizedSalesOrders() {\n            this.categorizedOrders = {}\n            if(this.patient_number !== ''){\n                getCategorizedSalesOrders({\n                    patient_name: this.patient_number,\n                }).then((data) => {\n                    this.categorizedOrders = data;\n                });\n            }\n        },\n        // fetchSalesOrders() {\n        //     this.selectedOrders = [];\n        //     getPatientSalesrders({\n        //         patient_name: this.patient_number,\n        //     }).then((data) => {\n        //         this.salesOrderItems = data;\n        //     });\n        // }\n    },\n    watch: {\n        patient_number(value) {\n            checkOpenAppointment(value).then(res => {\n            if (res === true) {\n                this.patientHasAppointment = true\n            }\n        });\n            // this.fetchSalesOrders();\n            this.fetchCategorizedSalesOrders();\n        },\n        \n    },\n    created() {\n        //  api({\n        //         method:'clinical.push_bytes',\n        //         args: {\n        //             // doctype: 'Item Group',\n        //             // async: false,\n        //             // filters: { is_prescription_item: 1 }\n        //         },\n\n        //     }).then(res => {\n        //         console.log(res)\n        //     })\n        if (this.patient_number != \"\" ){\n            checkOpenAppointment(this.patient_number).then(res => {\n            if (res === true) {\n                this.patientHasAppointment = true\n            }\n        });\n        }\n        \n        // this.fetchSalesOrders();\n        this.fetchCategorizedSalesOrders();\n        getUserWarehouses().then(r => {\n            r.map(warehouse => {\n                this.warehouses.push(warehouse['for_value'])\n                console.log(this.warehouses);\n            })\n        });\n\n    },\n    mounted(){\n        this.makeSearchAppointmentControl();\n    },\n    filters: {\n        // Filter definitions\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      !_vm.patientHasAppointment\n        ? _c(\n            \"b-row\",\n            { staticStyle: { \"margin-top\": \"10px\" } },\n            [\n              _c(\n                \"b-col\",\n                [\n                  _c(\"b-alert\", { attrs: { variant: \"danger\", show: \"\" } }, [\n                    _vm._v(\n                      \"Ensure the patient has an appointment before proceeding with billing\"\n                    )\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", { attrs: { md: \"6\" } }, [\n            _c(\"div\", {}, [\n              _c(\"div\", { staticStyle: { width: \"100%\" } }, [\n                _c(\"div\", {\n                  ref: \"appointment-search\",\n                  staticClass: \"ref-field-input\"\n                })\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"b-col\", { attrs: { md: \"6\" } }, [\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"flex\", \"justify-content\": \"flex-end\" }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [\n                    _vm.patientHasAppointment\n                      ? _c(\"div\", { staticClass: \"btn-group\" }, [\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-primary dropdown-toggle\",\n                              attrs: {\n                                type: \"button\",\n                                \"data-toggle\": \"dropdown\",\n                                \"aria-haspopup\": \"true\",\n                                \"aria-expanded\": \"false\"\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                                Add\\n                                              \"\n                              )\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"dropdown-menu\" }, [\n                            _c(\n                              \"a\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { href: \"#\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.createSalesOrder(\"Service\")\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Service\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"a\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { href: \"#\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.createSalesOrder(\"Consumables\")\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Consumables\")]\n                            )\n                          ])\n                        ])\n                      : _vm._e(),\n                    _vm._v(\"\\n                    \u00A0\\n                    \"),\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { size: \"sm\", variant: \"primary\" },\n                        on: { click: _vm.fetchCategorizedSalesOrders }\n                      },\n                      [_vm._v(\"Refresh \")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-btn\",\n                      {\n                        attrs: { variant: \"primary\", size: \"sm\" },\n                        on: { click: _vm.invoiceOrders }\n                      },\n                      [_vm._v(\"Invoice Posted Orders\")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.invoiced_orders.length\n        ? _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table table-striped table-bordered\" },\n                  [\n                    _c(\"thead\", [\n                      _c(\"tr\"),\n                      _c(\"tr\", [\n                        _c(\"th\", { attrs: { colspan: \"5\" } }, [\n                          _vm._v(\n                            \"Invoiced Orders \" +\n                              _vm._s(\n                                _vm.categorizedOrders.invoiced_orders.length ||\n                                  0\n                              ) +\n                              \" \"\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Date\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Name\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Status\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Item\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Amount\")])\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.categorizedOrders.invoiced_orders, function(\n                      salesOrderItem\n                    ) {\n                      return _c(\"tr\", { key: salesOrderItem.name }, [\n                        _c(\"td\", [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm._f(\"dateFormat\")(salesOrderItem.creation)\n                              )\n                            )\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"span\", {\n                            domProps: {\n                              innerHTML: _vm._s(salesOrderItem.so_link)\n                            }\n                          })\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _vm._v(_vm._s(salesOrderItem.workflow_state))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"span\", [_vm._v(_vm._s(salesOrderItem.item_name))])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm._f(\"numberWithCommas\")(\n                                  salesOrderItem.amount.toFixed(2)\n                                )\n                              )\n                            )\n                          ])\n                        ])\n                      ])\n                    })\n                  ],\n                  2\n                )\n              ])\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.un_invoiced_orders.length\n        ? _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table table-striped table-bordered\" },\n                  [\n                    _c(\"thead\", [\n                      _c(\"tr\"),\n                      _c(\"tr\", [\n                        _c(\"th\", { attrs: { colspan: \"6\" } }, [\n                          _vm._v(\n                            \"Un Invoiced Orders \" +\n                              _vm._s(\n                                _vm.categorizedOrders.un_invoiced_orders\n                                  .length || 0\n                              )\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Date\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Name\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Status\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Item\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Amount\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Action\")])\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.categorizedOrders.un_invoiced_orders, function(\n                      salesOrderItem\n                    ) {\n                      return _c(\"tr\", { key: salesOrderItem.name }, [\n                        _c(\"td\", [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm._f(\"dateFormat\")(salesOrderItem.creation)\n                              )\n                            )\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"span\", {\n                            domProps: {\n                              innerHTML: _vm._s(salesOrderItem.so_link)\n                            }\n                          })\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _vm._v(_vm._s(salesOrderItem.workflow_state))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _c(\"span\", [_vm._v(_vm._s(salesOrderItem.item_name))])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                          _c(\"span\", [\n                            _vm._v(\n                              _vm._s(\n                                _vm._f(\"numberWithCommas\")(\n                                  salesOrderItem.amount.toFixed(2)\n                                )\n                              )\n                            )\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"b-dropdown\",\n                              {\n                                attrs: {\n                                  text: \"Select Action\",\n                                  variant: \"primary\"\n                                }\n                              },\n                              [\n                                salesOrderItem.workflow_state ===\n                                \"Pending Request for Preauthorization\"\n                                  ? _c(\n                                      \"b-btn\",\n                                      {\n                                        attrs: {\n                                          variant: \"primary\",\n                                          size: \"sm\"\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.uploadFile(\n                                              salesOrderItem\n                                            )\n                                          }\n                                        }\n                                      },\n                                      [_vm._v(\"Mark as Authorised\")]\n                                    )\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                salesOrderItem.status === \"To Bill\"\n                                  ? _c(\n                                      \"b-dropdown-item\",\n                                      {\n                                        attrs: {\n                                          variant: \"primary\",\n                                          size: \"sm\"\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.makePayment(\n                                              salesOrderItem\n                                            )\n                                          }\n                                        }\n                                      },\n                                      [_vm._v(\"Make Payment\")]\n                                    )\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                salesOrderItem.status === \"To Bill\"\n                                  ? _c(\n                                      \"b-dropdown-item\",\n                                      {\n                                        attrs: {\n                                          variant: \"primary\",\n                                          size: \"sm\"\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.postSalesOrder(\n                                              salesOrderItem\n                                            )\n                                          }\n                                        }\n                                      },\n                                      [_vm._v(\"Mark as Posted\")]\n                                    )\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                salesOrderItem.status === \"Draft\"\n                                  ? _c(\n                                      \"b-dropdown-item\",\n                                      {\n                                        attrs: {\n                                          variant: \"primary\",\n                                          size: \"sm\"\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.submitSalesOrder(\n                                              salesOrderItem\n                                            )\n                                          }\n                                        }\n                                      },\n                                      [_vm._v(\"Submit\")]\n                                    )\n                                  : _vm._e()\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ])\n                    })\n                  ],\n                  2\n                )\n              ])\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.un_invoiced_orders.length\n        ? _c(\"b-row\", { staticClass: \"m-3\" }, [\n            _c(\"b\", [\n              _vm._v(\n                \"Total \" +\n                  _vm._s(\n                    _vm.categorizedOrders.un_invoiced_orders\n                      .map(function(item) {\n                        return item.amount.toFixed(2)\n                      })\n                      .reduce(function(partialSum, a) {\n                        return parseFloat(partialSum) + parseFloat(a)\n                      }, 0)\n                  ) +\n                  \" \"\n              )\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.invoiced_insurance_orders.length ||\n      _vm.categorizedOrders.un_invoiced_insurance_orders.length\n        ? _c(\"b\", [\n            _c(\n              \"p\",\n              { staticStyle: { \"margin-top\": \"10px:\", color: \"#2490ef\" } },\n              [_vm._v(\"INSURANCE SALES ORDERS\")]\n            )\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.invoiced_insurance_orders.length\n        ? _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table table-striped table-bordered\" },\n                  [\n                    _c(\"thead\", [\n                      _c(\"tr\"),\n                      _c(\"tr\", [\n                        _c(\"th\", { attrs: { colspan: \"6\" } }, [\n                          _vm._v(\n                            \"Un Invoiced Orders \" +\n                              _vm._s(\n                                _vm.categorizedOrders.invoiced_insurance_orders\n                                  .length || 0\n                              ) +\n                              \" \"\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Date\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Name\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Status\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Item\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Amount\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Actions\")])\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(\n                      _vm.categorizedOrders.invoiced_insurance_orders,\n                      function(salesOrderItem) {\n                        return _c(\"tr\", { key: salesOrderItem.name }, [\n                          _c(\"td\", [\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"dateFormat\")(salesOrderItem.creation)\n                                )\n                              )\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _c(\"span\", {\n                              domProps: {\n                                innerHTML: _vm._s(salesOrderItem.so_link)\n                              }\n                            })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _vm._v(_vm._s(salesOrderItem.workflow_state))\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _c(\"span\", [\n                              _vm._v(_vm._s(salesOrderItem.item_name))\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"numberWithCommas\")(\n                                    salesOrderItem.amount.toFixed(2)\n                                  )\n                                )\n                              )\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"td\",\n                            [\n                              _c(\n                                \"b-dropdown\",\n                                {\n                                  attrs: {\n                                    text: \"Select Action\",\n                                    variant: \"primary\"\n                                  }\n                                },\n                                [\n                                  salesOrderItem.status === \"To Bill\"\n                                    ? _c(\n                                        \"b-dropdown-item\",\n                                        {\n                                          attrs: {\n                                            variant: \"primary\",\n                                            size: \"sm\"\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.postSalesOrder(\n                                                salesOrderItem\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [_vm._v(\"Mark as Posted\")]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"b-dropdown-item\",\n                                    { attrs: { variant: \"primary\" } },\n                                    [\n                                      _vm._v(\"Update Items \"),\n                                      _c(\"span\", {\n                                        domProps: {\n                                          innerHTML: _vm._s(\n                                            salesOrderItem.so_link\n                                          )\n                                        }\n                                      })\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ])\n                      }\n                    )\n                  ],\n                  2\n                )\n              ])\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.invoiced_insurance_orders.length\n        ? _c(\"b-row\", { staticClass: \"m-3\" }, [\n            _c(\"b\", [\n              _vm._v(\n                \"Total \" +\n                  _vm._s(\n                    _vm.categorizedOrders.invoiced_insurance_orders\n                      .map(function(item) {\n                        return item.amount.toFixed(2)\n                      })\n                      .reduce(function(partialSum, a) {\n                        return parseFloat(partialSum) + parseFloat(a)\n                      }, 0)\n                  ) +\n                  \" \"\n              )\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.un_invoiced_insurance_orders.length\n        ? _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table table-striped table-bordered\" },\n                  [\n                    _c(\"thead\", [\n                      _c(\"tr\"),\n                      _c(\"tr\", [\n                        _c(\"th\", { attrs: { colspan: \"6\" } }, [\n                          _vm._v(\n                            \"Invoiced Orders \" +\n                              _vm._s(\n                                _vm.categorizedOrders\n                                  .un_invoiced_insurance_orders.length || 0\n                              )\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Date\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Name\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Status\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Item\")]),\n                      _vm._v(\" \"),\n                      _c(\"th\", [_vm._v(\"Amount\")])\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(\n                      _vm.categorizedOrders.un_invoiced_insurance_orders,\n                      function(salesOrderItem) {\n                        return _c(\"tr\", { key: salesOrderItem.name }, [\n                          _c(\"td\", [\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"dateFormat\")(salesOrderItem.creation)\n                                )\n                              )\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _c(\"span\", {\n                              domProps: {\n                                innerHTML: _vm._s(salesOrderItem.so_link)\n                              }\n                            })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _vm._v(_vm._s(salesOrderItem.workflow_state))\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _c(\"span\", [\n                              _vm._v(_vm._s(salesOrderItem.item_name))\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                            _c(\"span\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm._f(\"numberWithCommas\")(\n                                    salesOrderItem.amount.toFixed(2)\n                                  )\n                                )\n                              )\n                            ])\n                          ])\n                        ])\n                      }\n                    )\n                  ],\n                  2\n                )\n              ])\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.categorizedOrders.un_invoiced_insurance_orders.length\n        ? _c(\"b-row\", { staticClass: \"m-3\" }, [\n            _c(\"b\", [\n              _vm._v(\n                \"Total \" +\n                  _vm._s(\n                    _vm.categorizedOrders.un_invoiced_insurance_orders\n                      .map(function(item) {\n                        return item.amount.toFixed(2)\n                      })\n                      .reduce(function(partialSum, a) {\n                        return parseFloat(partialSum) + parseFloat(a)\n                      }, 0)\n                  ) +\n                  \" \"\n              )\n            ])\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = undefined\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n         <b-row v-if=\\\"!patientHasAppointment\\\" style=\\\"margin-top:10px;\\\">\\n            <b-col>\\n                <b-alert variant=\\\"danger\\\" show>Ensure the patient has an appointment before proceeding with billing</b-alert>\\n            </b-col>\\n        </b-row>\\n        <b-row>\\n            <b-col md=\\\"6\\\">\\n                <!-- <b-btn>sdfgsdfgfsdgsfd</b-btn> -->\\n                <div class=\\\"\\\">\\n                    <div style=\\\"width:100%\\\"><div ref=\\\"appointment-search\\\" class=\\\"ref-field-input\\\" /></div> \\n                </div>\\n                <!-- <div class=\\\"form-dashboard-section form-stats\\\" style=\\\"display: block;\\\">\\n                <div class=\\\"section-head\\\">\\n                    Search\\n                </div>\\n                <div class=\\\"section-body\\\">\\n                    <div style=\\\"width:100%\\\"><div ref=\\\"appointment-search\\\" class=\\\"ref-field-input\\\" /></div> \\n                </div>\\n                </div> -->\\n            </b-col>\\n            <b-col md=\\\"6\\\">\\n                <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <div v-if=\\\"patientHasAppointment\\\" class=\\\"btn-group\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                                    Add\\n                                                  </button>\\n                            <div class=\\\"dropdown-menu\\\">\\n                                <a class=\\\"dropdown-item\\\" @click=\\\"createSalesOrder('Service')\\\" href=\\\"#\\\">Service</a>\\n                                <a class=\\\"dropdown-item\\\" @click=\\\"createSalesOrder('Consumables')\\\" href=\\\"#\\\">Consumables</a>\\n                            </div>\\n                        </div>\\n                        &nbsp;\\n                        <b-button style=\\\"margin-right:2px;\\\" size=\\\"sm\\\" variant=\\\"primary\\\" @click=\\\"fetchCategorizedSalesOrders\\\">Refresh </b-button>\\n                        <b-btn variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"invoiceOrders\\\">Invoice Posted Orders</b-btn>\\n                    </b-button-group>\\n                </div>\\n            </b-col>\\n        </b-row>\\n        <b-row v-if=\\\"categorizedOrders.invoiced_orders.length\\\">\\n            <b-col>\\n                <table class=\\\"table table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <tr>\\n                                <th colspan=\\\"5\\\">Invoiced Orders {{ categorizedOrders.invoiced_orders.length || 0 }} </th>\\n                            </tr>\\n                            <th>Date</th>\\n                            <th>Name</th>\\n                            <th>Status</th>\\n                            <th>Item</th>\\n                            <!-- <th>Qty</th>\\n                                                                                                                                                                                                                                <th>Rate</th> -->\\n                            <th>Amount</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"salesOrderItem in categorizedOrders.invoiced_orders\\\" :key=\\\"salesOrderItem.name\\\">\\n                        <td><span>{{ salesOrderItem.creation | dateFormat }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.parent }}</span> </td> -->\\n                         <td>  <span v-html=\\\"salesOrderItem.so_link\\\"></span> </td>\\n                        <td>{{ salesOrderItem.workflow_state }}</td>\\n                        <td><span>{{ salesOrderItem.item_name }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.qty }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.rate.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n    \\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n        <b-row v-if=\\\"categorizedOrders.un_invoiced_orders.length\\\">\\n            <b-col>\\n                <table class=\\\"table table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <tr>\\n                                <th colspan=\\\"6\\\">Un Invoiced Orders {{ categorizedOrders.un_invoiced_orders.length || 0 }}</th>\\n                                <!-- <th>  </th> -->\\n                            </tr>\\n                            <th>Date</th>\\n                            <th>Name</th>\\n                            <th>Status</th>\\n                            <th>Item</th>\\n                            <!-- <th>Qty</th>\\n                                                                                                                                                                                                                                <th>Rate</th> -->\\n                            <th>Amount</th>\\n                            <th>Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"salesOrderItem in categorizedOrders.un_invoiced_orders\\\" :key=\\\"salesOrderItem.name\\\">\\n                        <td><span>{{ salesOrderItem.creation | dateFormat }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.parent }}</span> </td> -->\\n                        <td>  <span v-html=\\\"salesOrderItem.so_link\\\"></span> </td>\\n                        <td>{{ salesOrderItem.workflow_state }}</td>\\n                        <td><span>{{ salesOrderItem.item_name }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.qty }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.rate.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <td>\\n                             <b-dropdown text=\\\"Select Action\\\" variant=\\\"primary\\\">\\n                            <b-btn v-if=\\\"salesOrderItem.workflow_state === 'Pending Request for Preauthorization'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"uploadFile(salesOrderItem)\\\">Mark as Authorised</b-btn>\\n                            <b-dropdown-item v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"makePayment(salesOrderItem)\\\">Make Payment</b-dropdown-item>\\n                            <!-- <b-btn v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\"   @click=\\\"postInvoiceToAllowService(salesOrderItem)\\\">Allow Without Pay</b-btn> -->\\n                            <b-dropdown-item v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"postSalesOrder(salesOrderItem)\\\">Mark as Posted</b-dropdown-item>\\n                            <b-dropdown-item v-if=\\\"salesOrderItem.status === 'Draft'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"submitSalesOrder(salesOrderItem)\\\">Submit</b-dropdown-item>\\n                             </b-dropdown>\\n                        </td>\\n                    </tr>\\n                </table>\\n\\n            </b-col> \\n        </b-row>\\n        <!-- <hr/> -->\\n        <b-row  v-if=\\\"categorizedOrders.un_invoiced_orders.length\\\" class=\\\"m-3\\\"> <b>Total {{  categorizedOrders.un_invoiced_orders.map(item =>  item.amount.toFixed(2)).reduce((partialSum, a) => parseFloat( partialSum)+ parseFloat( a), 0) }} </b></b-row>\\n        <!-- <hr/> -->\\n        <b v-if=\\\"categorizedOrders.invoiced_insurance_orders.length || categorizedOrders.un_invoiced_insurance_orders.length\\\"><p style=\\\"margin-top:10px:;color:#2490ef\\\">INSURANCE SALES ORDERS</p></b>\\n         <b-row v-if=\\\"categorizedOrders.invoiced_insurance_orders.length\\\">\\n            <b-col>\\n                <table class=\\\"table table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <tr>\\n                                <th colspan=\\\"6\\\">Un Invoiced Orders {{ categorizedOrders.invoiced_insurance_orders.length || 0 }} </th>\\n                                <!-- <th> <b-btn variant=\\\"primary\\\" @click=\\\"invoiceOrders\\\">Invoice</b-btn> </th> -->\\n                            </tr>\\n                            <th>Date</th>\\n                            <th>Name</th>\\n                            <th>Status</th>\\n                            <th>Item</th>\\n                            <!-- <th>Qty</th>                                                                                                                                                                                            <th>Rate</th> -->\\n                            <th>Amount</th>\\n                            <th>Actions</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"salesOrderItem in categorizedOrders.invoiced_insurance_orders\\\" :key=\\\"salesOrderItem.name\\\">\\n                        <td><span>{{ salesOrderItem.creation | dateFormat }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.parent }}</span> </td> -->\\n                        <td>  <span v-html=\\\"salesOrderItem.so_link\\\"></span> </td>\\n                        <td>{{ salesOrderItem.workflow_state }}</td>\\n                        <td><span>{{ salesOrderItem.item_name }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.qty }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.rate.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <td>\\n                            <b-dropdown text=\\\"Select Action\\\" variant=\\\"primary\\\">\\n                            <!-- <b-dropdown-item v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"postSalesOrder(salesOrderItem)\\\">Post</b-dropdown-item> -->\\n                            <b-dropdown-item v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"postSalesOrder(salesOrderItem)\\\">Mark as Posted</b-dropdown-item>\\n                            <b-dropdown-item variant=\\\"primary\\\">Update Items <span v-html=\\\"salesOrderItem.so_link\\\"></span></b-dropdown-item>\\n                            </b-dropdown>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n         <!-- <hr/> -->\\n        <b-row  v-if=\\\"categorizedOrders.invoiced_insurance_orders.length\\\" class=\\\"m-3\\\"> <b>Total {{  categorizedOrders.invoiced_insurance_orders.map(item =>  item.amount.toFixed(2)).reduce((partialSum, a) => parseFloat( partialSum)+ parseFloat( a), 0) }} </b></b-row>\\n        <!-- <hr/> -->\\n        <b-row v-if=\\\"categorizedOrders.un_invoiced_insurance_orders.length\\\">\\n            <b-col>\\n                <table class=\\\"table table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <tr>\\n                                <th colspan=\\\"6\\\">Invoiced Orders {{ categorizedOrders.un_invoiced_insurance_orders.length || 0 }}</th>\\n                            </tr>\\n                            <th>Date</th>\\n                            <th>Name</th>\\n                            <th>Status</th>\\n                            <th>Item</th>\\n                            <!-- <th>Qty</th>                                                                                                                                                                                                    <th>Rate</th> -->\\n                            <th>Amount</th>\\n                            <!-- <th>Action</th> -->\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"salesOrderItem in categorizedOrders.un_invoiced_insurance_orders\\\" :key=\\\"salesOrderItem.name\\\">\\n                        <td><span>{{ salesOrderItem.creation | dateFormat }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.parent }}</span> </td> -->\\n                        <td>  <span v-html=\\\"salesOrderItem.so_link\\\"></span> </td>\\n                        <td>{{ salesOrderItem.workflow_state }}</td>\\n                        <td><span>{{ salesOrderItem.item_name }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.qty }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.rate.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <!-- <td>\\n                            <b-btn v-if=\\\"salesOrderItem.workflow_state === 'Pending Request for Preauthorization'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"uploadFile(salesOrderItem)\\\">Mark as Authorised</b-btn>\\n                            <b-btn v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"makePayment(salesOrderItem)\\\">Make Payment</b-btn>\\n                            <b-btn v-if=\\\"salesOrderItem.status === 'To Bill'\\\" variant=\\\"primary\\\" size=\\\"sm\\\"   @click=\\\"postInvoiceToAllowService(salesOrderItem)\\\">Allow Without Pay</b-btn>\\n                            <b-btn v-if=\\\"salesOrderItem.status === 'Draft'\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"submitSalesOrder(salesOrderItem)\\\">Submit</b-btn>\\n    \\n                        </td> -->\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n        <b-row  v-if=\\\"categorizedOrders.un_invoiced_insurance_orders.length\\\" class=\\\"m-3\\\"> <b>Total {{  categorizedOrders.un_invoiced_insurance_orders.map(item =>  item.amount.toFixed(2)).reduce((partialSum, a) => parseFloat( partialSum)+ parseFloat( a), 0) }} </b></b-row>\\n    </div>\\n</template>\\n\\n<script>\\nimport {\\n    getPatientSalesrders,\\n    authorizeSalesrder,\\n    savePaymentEntry,\\n    submitSalesOrder,\\n    savePrePayment,\\n    getCategorizedSalesOrders,\\n    api,\\n    createCustomSalesOrder,\\n    itemStockBalance,\\n    fetchConditionalItemPrice,\\n    getUserWarehouses,\\n    markSalesOrderAsPosted,\\n    apppendSalesOrderToInvoice\\n} from '../../services/accounts/patient.js'\\nimport {checkOpenAppointment, makeStockEntry} from '../../services/patient_chart/api'\\nimport { itemStockBalanceWarehouse } from '../../services/stock/stock-check';\\nexport default {\\n    name: 'SalesOrder',\\n    props: {\\n        patient_number: {\\n            type: String,\\n            default: \\\"\\\",\\n            required: true,\\n        },\\n        customerNumber: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        patientName: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n    },\\n    data() {\\n        return {\\n            salesOrderItems: undefined,\\n            selectedOrders: [],\\n            categorizedOrders: {},\\n            warehouses: [],\\n            filterSwitch: false,\\n            dynamicFilters: {},\\n            patientHasAppointment: false,\\n            individualTotal :0,\\n            insuranceTotal:0,\\n            excludedGroups:[\\n                \\\"BIOMED PLANTS AND EQUIPMENT\\\", \\\"CAPITAL PROJECT\\\",\\\"TRANSPORT STAFF UNIFORM\\\",\\\"MEDICAL EQUIPMENT\\\",\\\"MEDICAL EQUIPMENTS\\\",\\\"CAPITAL PROJECT (CATERING)\\\",\\n                \\\"COOKING GASES\\\",\\\"FOOD AND RATION\\\",\\\"UNIFORMS - CATERING\\\",\\\"UTENSILS\\\",\\\"ADVERTISEMENT\\\",\\\"ADVERTISING & PUBLICITY\\\",\\\"CHRISTMAS DECORATIONS\\\",\\\"CONFERENCE\\\",\\n                \\\"DOCUMENTARY\\\",\\\"HIRE\\\",\\\"HOSPITALITY\\\",\\\"SIGNAGE\\\",\\\"FAREWELL HOME ITEMS\\\",\\\"FUEL & GASES\\\",\\\"CLEANSING MATERIALS AND DETERGENTS\\\",\\\"MEDICAL RECORDS ITEMS\\\",\\n                \\\"MEDICAL RECORDS STATIONERY\\\",\\\"OFFICE EQUIPMENTS\\\",\\\"PASTORAL SERVICES\\\",\\\"PHOTOCOPIER\\\",\\\"PROMOTIONAL MATERIALS\\\",\\\"STATIONERY\\\",\\\"ANTISEPTIC\\\",\\\"DETERGENTS\\\",\\n                \\\"DISINFECTANT\\\",\\\"UNIFORMS\\\",\\\"COMPUTERS AND ACCESSORIES\\\",\\\"ICT EQUIPMENTS\\\",\\\"MOBILE PHONES ,TABLETS AND IPADS\\\",\\\"NETWORKING ACCESSORIES\\\",\\\"SERVERS\\\",\\n                \\\"SOFTWARE AND TECHNOLOGY SERVICES\\\",\\\"TELEPHONE ACCESSORIES\\\",\\\"INSURANCE\\\",\\\"KITCHEN ITEMS GROUP\\\",\\\"KITCHEN EQUIPMENT & UTENSILS\\\",\\\"LABORATORY REAGENT\\\",\\n                \\\"LABORATORY REAGENTS\\\",\\\"LABORATORY REAGENTS AND CONS\\\",\\\"LABORATORY REAGENTS AND CONSUMABLES\\\",\\\"LAUNDRY DEPARTMENT GROUP\\\",\\\"HUMAN RESOURCE TRAINING\\\",\\n                \\\"LAUNDRY DETERGENTS\\\",\\\"LAUNDRY EQUIPMENTS\\\",\\\"Laundry staff uniforms\\\",\\\"LINEN\\\",\\\"PATIENT UNIFORM\\\",\\\"SERVICE OF MACHINES\\\",\\\"TAILORING ACCESSORIES\\\",\\\"UNIFORM\\\",\\n                \\\"MEDICAL ENGINEERING\\\",\\\"BOLT AND NUTS\\\",\\\"CARPENTRY\\\",\\\"ELECTRICAL APPLIANCES\\\",\\\"ELECTRICALS\\\",\\\"MASONRY\\\",\\\"MECHANICAL\\\",\\\"MEDICAL ENGINEERING SAFETY WEAR\\\",\\n                \\\"MEDICAL ENGINEERING TOOLS\\\",\\\"PAINTING\\\",\\\"PLUMBING\\\",\\\"HOSPITAL UNIFORM\\\",\\\"OSH ITEMS AND SERVICES\\\",\\\"PPES\\\",\\\"MACHINES\\\",\\\"MEDICAL APPLIANCES\\\",\\\"MEDICAL EQUIPMENTS\\\",\\n                \\\"PUBLIC HEALTH ITEM GROUPS\\\",\\\"ENVIRONMENTAL IMPACT ASSESSMENT\\\",\\\"Fertilizer\\\",\\\"HERBICIDE\\\",\\\"INSECTICIDE\\\",\\\"PUBLIC HEALTH DISINFECTANTS AND ANTISEPTICS\\\",\\n                \\\"PUBLIC HEALTH EQUIPMENT\\\",\\\"PUBLIC HEALTH MATERIALS\\\",\\\"PUBLIC HEALTH SERVICES\\\",\\\"PUBLIC HEALTH TOOLS\\\",\\\"PUBLIC HEALTH VACCINATION CARDS\\\",\\\"RODENTICIDE\\\",\\n                \\\"WASTE MANAGEMENT\\\",\\\"SECURITY ITEM GROUP\\\",\\\"SECURITY ITEMS\\\",\\\"SECURITY UNIFORMS\\\",\\\"TRAINING\\\",\\\"LIBRARY BOOKS\\\",\\\"TRAINING PUBLIC HEALTH\\\",\\\"TRANSPORT DEPARTMENT\\\",\\n                \\\"MOTOR VEHICLES\\\",\\\"MOTOR VEHICLES ACCESSORIES\\\",\\\"MOTOR VEHICLES INSURANCE COVER AND INSPECTION FEE\\\",\\\"MOTOR VEHICLES SERVICES AND REPAIRS\\\",\\n                \\\"VEHICLE SERVICING AND REPAIRS\\\"\\n            ]\\n        };\\n    },\\n    methods: {\\n        // \\n     makeSearchAppointmentControl() {\\n        let me = this;\\n        let customer_field = frappe.ui.form.make_control({\\n            df: {\\n            label: \\\"Appointments\\\",\\n            fieldtype: \\\"Link\\\",\\n            fieldname: \\\"reference\\\",\\n            options: \\\"Patient Appointment\\\",\\n            placeholder: __(`Search Patient Appointments`),\\n            // filters: { patient: me.patient_number },\\n            onchange: function() {\\n                if (this.value) {\\n                    console.log(this.value)\\n                //me.setCurrentDoctype(me.doctype, this.value);\\n                }\\n            },\\n            },\\n            parent: this.$refs[\\\"appointment-search\\\"],\\n            render_input: true,\\n        });\\n\\n        customer_field.toggle_label(false);\\n        $(\\\"#modal-body\\\")\\n            .find(\\\".input-max-width\\\")\\n            .removeClass(\\\"input-max-width\\\");\\n        },\\n        invoiceOrders(){\\n            //   customer_name\\n             apppendSalesOrderToInvoice({\\n                customer_name: this.customerNumber,\\n            }).then((data) => {\\n                this.fetchCategorizedSalesOrders();\\n                  frappe.show_alert({\\n                    message: `Sales Orders Invoiced`,\\n                    indicator: 'green'\\n                }, 5);\\n            });\\n        },\\n        postSalesOrder(salesOrderItem){\\n            markSalesOrderAsPosted({\\n                sales_order_name: salesOrderItem.parent,\\n            }).then((data) => {\\n                this.fetchCategorizedSalesOrders();\\n                  frappe.show_alert({\\n                    message: `Sales Order Posted`,\\n                    indicator: 'green'\\n                }, 5);\\n            });\\n        },\\n        createSalesOrder(type) {\\n            let dialog;\\n            let parent = this;\\n            //let warehouses = []\\n\\n            let fields = [{\\n                    label: 'Item',\\n                    fieldname: 'item_code',\\n                    fieldtype: 'Link',\\n                    options: 'Item',\\n                    reqd: true,\\n                    in_list_view: 1,\\n                    filters: type === \\\"Service\\\" ? { is_stock_item: 0, disabled: 0, has_variants: 'No',item_group: ['NOT IN', parent.excludedGroups] } : { is_stock_item: 1, disabled: 0, has_variants: 'No',item_group: ['NOT IN', parent.excludedGroups] },\\n                    onchange: function(e) {\\n                        let notify = true\\n                        parent.changeListener(dialog, parent, notify)\\n                    }\\n                },\\n                {\\n                    label: 'Quantity',\\n                    fieldname: 'qty',\\n                    fieldtype: 'Float',\\n                    reqd: 1,\\n                    in_list_view: 1,\\n                    onchange: function(e) {\\n                        let notify = false\\n                        parent.changeListener(dialog, parent, notify)\\n\\n                    }\\n                },\\n                {\\n                    label: 'Rate',\\n                    fieldname: 'rate',\\n                    fieldtype: 'Read Only',\\n                    in_list_view: 1,\\n                    // reqd: 1,\\n                },\\n                {\\n                    label: 'Amount',\\n                    fieldname: 'amount',\\n                    fieldtype: 'Read Only',\\n                    in_list_view: 1,\\n                    // reqd: 1,\\n                },\\n                {\\n                    label: 'Stock',\\n                    fieldname: 'stock',\\n                    fieldtype: 'Read Only',\\n                    in_list_view: 1,\\n                    // reqd: 1,\\n                },\\n                {\\n                    label: 'Payer',\\n                    fieldname: 'payer',\\n                    fieldtype: 'Read Only',\\n                    in_list_view: 1,\\n                    // reqd: 1,\\n                },\\n            ];\\n            dialog = new frappe.ui.Dialog({\\n                title: 'Create Sales Order',\\n                fields: [{\\n                        label: 'Billing Type',\\n                        fieldname: 'billing_type',\\n                        default: type,\\n                        fieldtype: \\\"Read Only\\\",\\n                    },\\n                    {\\n                        label: 'Warehouse',\\n                        fieldname: 'warehouse',\\n                        fieldtype: 'Select',\\n                        options: parent.warehouses,\\n                        default: parent.warehouses,\\n                        mandatory_depends_on: 'eval: doc.billing_type == \\\"Consumables\\\"',\\n                        depends_on: 'eval: doc.billing_type == \\\"Consumables\\\"',\\n                        reqd: true,\\n                    },\\n                    {\\n                        fieldname: \\\"item_list\\\",\\n                        fieldtype: \\\"Table\\\",\\n                        label: \\\"Items\\\",\\n                        cannot_add_rows: false,\\n                        in_place_edit: true,\\n                        reqd: 1,\\n                        data: [],\\n                        fields\\n                    },\\n                    {\\n                        label: 'Total',\\n                        fieldname: 'total',\\n                        fieldtype: 'Read Only',\\n                        in_list_view: 1,\\n                        // reqd: 1,\\n                    },\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action: (values) => {\\n\\n                    dialog.set_values({\\n                        billing_type: `<div class=\\\"loader\\\" style=\\\"border: 16px solid #f3f3f3;border-radius: 50%;border-top: 16px solid #FFA701;width: 30px;height: 30px;-webkit-animation: spin 2s linear infinite;animation: spin 2s linear infinite;\\\"></div><p>Billing items in the background, please wait</p>`,\\n                    });\\n\\n                    let nullChecker = 0;\\n                    values.item_list.forEach((item, index) => {\\n                        !item.rate ? nullChecker = 1 : nullChecker = 0;\\n                    })\\n                       \\n                        if (!nullChecker) {\\n\\n                              createCustomSalesOrder({\\n                                        items: values.item_list,\\n                                        warehouse: values.warehouse || \\\"\\\",\\n                                        customer_name: parent.customerNumber,\\n                                        patient: parent.patient_number\\n                                    }).then(r => {\\n                                        // makeStockEntry({warehouse:values.warehouse || \\\"\\\",item_code:item.item_code,quantity:item.qty})\\n                                        // console.log(JSON.stringify(r))\\n                                        if (r.length > 0) {\\n                                            parent.fetchCategorizedSalesOrders();\\n                                        }\\n                                        frappe.msgprint({\\n                                            title: __(\\\"Notification\\\"),\\n                                            indicator: \\\"green\\\",\\n                                            message: __(`Patient has been successfully billed`),\\n                                        });\\n\\n                                        dialog.set_values({\\n                                            billing_type: type,\\n                                        });\\n\\n                                    }).catch(() => {\\n                                            dialog.set_values({\\n                                                billing_type: type,\\n                                        });\\n                                    });\\n\\n                        }else{\\n\\n                            dialog.set_values({\\n                                billing_type: type,\\n                            });\\n\\n                            frappe.msgprint({\\n                                            title: __(\\\"Notification\\\"),\\n                                            indicator: \\\"red\\\",\\n                                            message: __(`Ensure price has been set for all items`),\\n                            });\\n                        }\\n\\n                        \\n                    \\n                    // dialog.hide();\\n\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action() {\\n                    dialog.hide();\\n                }\\n            });\\n            dialog.fields_dict[\\\"item_list\\\"].df.onchange = () => {\\n                alert(\\\"changed\\\")\\n            }\\n            /*dialog.fields_dict[\\\"qty\\\"].df.onchange = () => {\\n                dialog.set_values({\\n                    rate: Number(dialog.get_value(\\\"item_code\\\")) * Number(dialog.get_value(\\\"qty\\\")),\\n                });\\n            };*/\\n\\n            dialog.show();\\n            dialog.$wrapper.find('.modal-content').css(\\\"width\\\", \\\"1000px\\\");\\n            dialog.$wrapper.find('.modal-content').css(\\\"margin-left\\\", \\\"-200px\\\");\\n            dialog.$wrapper.find('.modal-content').css(\\\"backdrop\\\", \\\"static\\\");\\n            dialog.$wrapper.find('.modal-content').css(\\\"keyboard\\\", \\\"false\\\");\\n\\n            $('.modal-dialog').modal({\\n                backdrop: 'static',\\n                keyboard: false\\n            })\\n\\n        },\\n        changeListener(dialog, parent, notify) {\\n            const data = dialog.fields[2].data || [];\\n            let total = 0;\\n            const promises = data.map((value) => {\\n                const { item_code, qty: quantity } = value\\n                // console.log(dialog.get_value(\\\"warehouse\\\"))\\n                \\n                return item_code && fetchConditionalItemPrice({\\n                    item_code: item_code,\\n                    customer: parent.customerNumber,\\n                    patient:parent.patient_number,\\n                }).then(res => {\\n                    if(dialog.get_value(\\\"warehouse\\\")){\\n                        itemStockBalanceWarehouse({\\n                            item_code: item_code,\\n                            warehouse: dialog.get_value(\\\"warehouse\\\")\\n                        }).then(stock=>{\\n                            console.log(stock)\\n                            if(stock && stock.length>0){\\n                                value.stock = stock[0].actual_qty\\n                            }\\n                            else{\\n                            value.stock = 0\\n                            }\\n                        });\\n                    }\\n                    if (res.type === \\\"Patient\\\") {\\n                        let price = res.price;\\n                        let amount = Math.ceil((price * quantity));\\n                        value.rate = price;\\n                        value.amount = amount;\\n                        total = total + amount;\\n                        value.payer = res.type;\\n                        dialog.set_values({\\n                            total: total,\\n                        });\\n                        \\n                        if (res.is_nhif === true && notify === true) {\\n                            frappe.msgprint({\\n                                title: __('Note'),\\n                                message: __('Patient will be charged for this item due to insufficient insurance balance'),\\n                                primary_action: {\\n\\n                                }\\n                            });\\n                        }\\n                    } else if (res.type === \\\"Copay\\\") {\\n                        let price = res.price;\\n                        let amount = Math.ceil((price * ((res.remaining_quantity) * quantity)));\\n                        value.rate = price;\\n                        value.amount = amount;\\n                        total = total + amount;\\n                        value.payer = \\\"Copaid amount: \\\" + \\\"(\\\" + (price * ((res.co_paid_quantity) * quantity)) + \\\")\\\"\\n                        dialog.set_values({\\n                            total: total,\\n                        });\\n                    } else if (res.type === \\\"Insurance\\\") {\\n                        let price = res.price;\\n                        let amount = Math.ceil((price * quantity));\\n                        value.rate = price;\\n                        value.amount = amount;\\n                        total = total + amount;\\n                        value.payer = \\\"Insurance: \\\" + \\\"(\\\" + amount + \\\")\\\"\\n                        dialog.set_values({\\n                            total: total,\\n                        });\\n\\n                    } else if (res.type === \\\"Pre-auth Insurance\\\") {\\n                        let price = res.price;\\n                        let amount = Math.ceil((price * quantity));\\n                        value.rate = price;\\n                        value.amount = amount;\\n                        total = total + amount;\\n                        value.payer = \\\"Pre-auth Insurance: \\\" + \\\"(\\\" + amount + \\\")\\\"\\n                        dialog.set_values({\\n                            total: total,\\n                        });\\n                    } else if (res.type === \\\"Pre-auth Copay\\\") {\\n                        let price = res.price;\\n                        let amount = Math.ceil((price * ((res.remaining_quantity) * quantity)));\\n                        value.rate = price;\\n                        value.amount = amount;\\n                        total = total + amount;\\n                        value.payer = \\\"Pre-auth Copay: \\\" + \\\"(\\\" + (price * ((res.co_paid_quantity) * quantity)) + \\\")\\\"\\n                        dialog.set_values({\\n                            total: total,\\n                        });\\n                    }\\n                })\\n            })\\n            Promise.all(promises).then(() => {\\n                dialog.refresh()\\n            })\\n\\n        },\\n        postInvoiceToAllowService(salesOrderItem) {},\\n        submitSalesOrder(salesOrderItem) {\\n            submitSalesOrder({ sales_order_name: salesOrderItem.parent }).then(r => {\\n                this.fetchCategorizedSalesOrders();\\n            })\\n        },\\n        makePayment(salesOrderItem) {\\n            let parent = this;\\n            let dialog = new frappe.ui.Dialog({\\n                title: `Add Payment Entry for ${parent.patientName}`,\\n                fields: [{\\n                        label: 'Client Name',\\n                        fieldname: 'party',\\n                        fieldtype: 'Read Only',\\n                        options: 'Customer',\\n                        default: `${parent.patientName} (${parent.customerNumber})`,\\n                        readonly: 0\\n                    },\\n                    {\\n                        label: 'Sales Order',\\n                        fieldname: 'sales_order',\\n                        fieldtype: 'Link',\\n                        options: 'Sales Order',\\n                        default: salesOrderItem.parent,\\n                        readonly: 0,\\n                        filters: { customer: parent.customerNumber, status: ['not in', ['Completed', 'Cancelled']] },\\n                    },\\n                    //  {\\n                    //     label: 'Account',\\n                    //     fieldname: 'paid_to',\\n                    //     fieldtype: 'Link',\\n                    //     options: 'Account',\\n                    //     filters: { account_type: ['in', ['Cash', 'Bank']] },\\n                    //     reqd: 1\\n                    // },\\n                    {\\n                        label: 'Mode of Payment',\\n                        fieldname: 'mode_of_payment',\\n                        fieldtype: 'Link',\\n                        options: 'Mode of Payment',\\n                        // filters: { account_type: ['in', ['Cash', 'Bank']] },\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Reference',\\n                        fieldname: 'reference_no',\\n                        fieldtype: 'Data',\\n                        reqd: 1,\\n                        default: Math.floor(Date.now()).toString(36).toUpperCase().toString()\\n                    },\\n                    {\\n                        label: 'Amount',\\n                        fieldname: 'paid_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1,\\n                        default: salesOrderItem.amount\\n                    },\\n                    {\\n                        label: 'Confirm Amount',\\n                        fieldname: 'confirm_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Amount Tendered',\\n                        fieldname: 'tendered_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Change',\\n                        fieldname: 'change_amount',\\n                        fieldtype: 'Read Only',\\n                        default: 0,\\n                        readony: 0,\\n                    },\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action(values) {\\n                    //  console.log(JSON.stringify(dialog.get_values()));\\n                    var diff = values.paid_amount - values.confirm_amount\\n                    parseFloat(values.confirm_amount) !== parseFloat(values.paid_amount) ? frappe.throw(`Sorry the values you entered differ with invoice by ${diff}`) :\\n                        savePaymentEntry({\\n                            docname: values.sales_order,\\n                            doctype: 'Sales Order',\\n                            amount: values.paid_amount,\\n                            change_amount: values.change_amount,\\n                            amount_tendered: values.tendered_amount,\\n                            reference_no: values.reference_no,\\n                            // paid_to: values.paid_to\\n                            mode_of_payment: values.mode_of_payment\\n                        }).then(r => {\\n                            parent.$emit('newPaymentEntry');\\n                            frappe.show_alert({\\n                                message: `Payment Entry Created`,\\n                                indicator: 'green'\\n                            }, 5);\\n                            parent.fetchCategorizedSalesOrders();\\n                        });\\n                    dialog.hide();\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action() {\\n                    dialog.hide();\\n                }\\n            });\\n            dialog.fields_dict[\\\"tendered_amount\\\"].df.onchange = () => {\\n                // dialog.get_primary_btn().attr(\\\"disabled\\\", dialog.get_value(\\\"paid_amount\\\") !== dialog.get_value(\\\"confirm_amount\\\"));\\n                //  dialog.get_value(\\\"confirm_amount\\\")\\n                if (dialog.get_value(\\\"paid_amount\\\") === dialog.get_value(\\\"confirm_amount\\\")) {\\n                    if (dialog.get_value(\\\"tendered_amount\\\") >= dialog.get_value(\\\"paid_amount\\\")) {\\n                        dialog.set_values({ change_amount: dialog.get_value(\\\"tendered_amount\\\") - dialog.get_value(\\\"paid_amount\\\") });\\n                    } else {\\n                        var diff = dialog.get_value(\\\"tendered_amount\\\") - dialog.get_value(\\\"paid_amount\\\")\\n                        dialog.get_primary_btn().attr(\\\"disabled\\\", false);\\n                        frappe.msgprint(`Sorry the tendered amount is less than paid amount by ${diff.toFixed(2)}`);\\n                    }\\n                }\\n            };\\n            dialog.get_primary_btn().attr(\\\"disabled\\\", true);\\n            dialog.fields_dict[\\\"paid_amount\\\"].df.onchange = () => {\\n                dialog.get_primary_btn().attr(\\\"disabled\\\", dialog.get_value(\\\"paid_amount\\\") !== dialog.get_value(\\\"confirm_amount\\\"));\\n            };\\n            dialog.fields_dict[\\\"confirm_amount\\\"].df.onchange = () => {\\n                dialog.get_primary_btn().attr(\\\"disabled\\\", dialog.get_value(\\\"paid_amount\\\") !== dialog.get_value(\\\"confirm_amount\\\"));\\n            };\\n            dialog.show();\\n        },\\n        uploadFile(row) {\\n            const me = this;\\n            new frappe.ui.FileUploaderCustom({\\n                doctype: \\\"Sales Order\\\",\\n                docname: row.parent,\\n                on_success(file_doc) {\\n                    authorizeSalesrder({ sales_order_name: row.parent }).then(r => {\\n                        frappe.show_alert({\\n                            message: `Sales Order Submitted`,\\n                            indicator: 'green'\\n                        }, 5);\\n                    });\\n                    me.fetchCategorizedSalesOrders();\\n                },\\n            });\\n        },\\n        fetchCategorizedSalesOrders() {\\n            this.categorizedOrders = {}\\n            if(this.patient_number !== ''){\\n                getCategorizedSalesOrders({\\n                    patient_name: this.patient_number,\\n                }).then((data) => {\\n                    this.categorizedOrders = data;\\n                });\\n            }\\n        },\\n        // fetchSalesOrders() {\\n        //     this.selectedOrders = [];\\n        //     getPatientSalesrders({\\n        //         patient_name: this.patient_number,\\n        //     }).then((data) => {\\n        //         this.salesOrderItems = data;\\n        //     });\\n        // }\\n    },\\n    watch: {\\n        patient_number(value) {\\n            checkOpenAppointment(value).then(res => {\\n            if (res === true) {\\n                this.patientHasAppointment = true\\n            }\\n        });\\n            // this.fetchSalesOrders();\\n            this.fetchCategorizedSalesOrders();\\n        },\\n        \\n    },\\n    created() {\\n        //  api({\\n        //         method:'clinical.push_bytes',\\n        //         args: {\\n        //             // doctype: 'Item Group',\\n        //             // async: false,\\n        //             // filters: { is_prescription_item: 1 }\\n        //         },\\n\\n        //     }).then(res => {\\n        //         console.log(res)\\n        //     })\\n        if (this.patient_number != \\\"\\\" ){\\n            checkOpenAppointment(this.patient_number).then(res => {\\n            if (res === true) {\\n                this.patientHasAppointment = true\\n            }\\n        });\\n        }\\n        \\n        // this.fetchSalesOrders();\\n        this.fetchCategorizedSalesOrders();\\n        getUserWarehouses().then(r => {\\n            r.map(warehouse => {\\n                this.warehouses.push(warehouse['for_value'])\\n                console.log(this.warehouses);\\n            })\\n        });\\n\\n    },\\n    mounted(){\\n        this.makeSearchAppointmentControl();\\n    },\\n    filters: {\\n        // Filter definitions\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n}\\n</script>\\n\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (false) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPatientPayments } from \"../../services/patient_chart/accounts.js\";\n//\nimport {\n    savePaymentEntry,\n    savePrePayment\n} from '../../services/accounts/patient.js'\nconst __vue_script__ = {\n    name: 'Receipts',\n    props: {\n        patient_number: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        customerNumber: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        patientName: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n    },\n    data() {\n        return {\n            paymentItems: undefined,\n        };\n    },\n    methods: {\n        verifyMpesaPayment(){\n             frappe.require(\"/assets/frontend/js/mpesa_dialog.js\", () => {\n            // chat.js is loaded\n                console.log(b)\n                mpesaDialog(this.customerNumber)\n            })\n        },\n        printReceipt(paymentItem){\n              var w = window.open(frappe.urllib.get_full_url(\"/printview?\" +\n                \"doctype=\" + encodeURIComponent('Payment Entry') +\n                \"&name=\" + encodeURIComponent(paymentItem.name) +\n                \"&format=Payment Entry Receipt&_lang=en&trigger_print=1\"\n            ));\n            if (!w) {\n                msgprint(__(\"Please enable pop-ups\"));\n                return;\n            }\n        },\n        createPaymentEntry() {\n            let parent = this;\n            let dialog = new frappe.ui.Dialog({\n                title: `Add Payment Entry for ${parent.patientName}`,\n                fields: [{\n                        label: 'Client Name',\n                        fieldname: 'party',\n                        fieldtype: 'Read Only',\n                        options: 'Customer',\n                        default: `${parent.patientName} (${parent.customerNumber})`,\n                        readonly: 0\n                    },\n                    {\n                        label: 'Sales Order',\n                        fieldname: 'sales_order',\n                        fieldtype: 'Link',\n                        options: 'Sales Order',\n                        // hidden: doctype,\n                        filters: { customer: parent.customerNumber, status: ['not in', ['Completed', 'Cancelled']] },\n                    },\n                    {\n                        label: 'Mode of Payment',\n                        fieldname: 'mode_of_payment',\n                        fieldtype: 'Link',\n                        options: 'Mode of Payment',\n                        // filters: { account_type: ['in', ['Cash', 'Bank']] },\n                        reqd: 1\n                    },\n                    {\n                        label: 'Reference',\n                        fieldname: 'reference_no',\n                        fieldtype: 'Data',\n                        reqd: 1,\n                        default:Math.floor(Date.now()).toString(36).toUpperCase().toString()\n                    },\n                    {\n                        label: 'Amount',\n                        fieldname: 'paid_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Confirm Amount',\n                        fieldname: 'confirm_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Amount Tendered',\n                        fieldname: 'tendered_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Change',\n                        fieldname: 'change_amount',\n                        fieldtype: 'Read Only',\n                        default: 0,\n                        readony: 0,\n                    },\n                    // {\n                    //     label: 'Change Account',\n                    //     fieldname: 'account_for_change',\n                    //     fieldtype: 'Link',\n                    //     options: 'Account',\n                    //     // hidden: doctype,\n                    //     filters: { account_type: \"Cash\" },\n                    // },\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    // save payment entry\n                    console.log(JSON.stringify(dialog.get_values()));\n                    if (values.sales_order) {\n                        // && values.confirm_amount === values.paid_amount\n                        var diff = values.paid_amount - values.confirm_amount\n                        parseFloat(values.confirm_amount) !== parseFloat(values.paid_amount) ? frappe.throw(`Sorry the values you entered differ with invoice by ${diff}`) :\n                            savePaymentEntry({\n                                docname: values.sales_order,\n                                doctype: 'Sales Order',\n                                amount: values.paid_amount,\n                                // account_for_change:values.account_for_change,\n                                change_amount: values.change_amount,\n                                amount_tendered: values.tendered_amount,\n                                reference_no: values.reference_no,\n                                // paid_to: values.paid_to\n                                mode_of_payment:values.mode_of_payment\n                            }).then(r => {\n                                parent.$emit('newPaymentEntry');\n                                frappe.show_alert({\n                                    message: `Payment Entry Created`,\n                                    indicator: 'green'\n                                }, 5);\n                                //dialog.hide();\n                                parent.getPayments();\n                            });\n                            dialog.hide();\n                    } else {\n                        dialog.hide();\n                        savePrePayment({\n                            customer_name: parent.customerNumber,\n                            amount: values.paid_amount,\n                            // account_for_change:values.account_for_change, \n                            change_amount: values.change_amount,\n                            amount_tendered: values.tendered_amount,\n                            reference_no: values.reference_no,\n                            // paid_to: values.paid_to\n                             mode_of_payment:values.mode_of_payment\n                        }).then(r => {\n                            parent.$emit('newPaymentEntry');\n                            frappe.show_alert({\n                                message: `Payment Entry Created`,\n                                indicator: 'green'\n                            }, 5);\n                            parent.getPayments();\n                        });\n                    }\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action() {\n                    dialog.hide();\n                }\n            });\n            dialog.fields_dict[\"tendered_amount\"].df.onchange = () => {\n                // dialog.get_primary_btn().attr(\"disabled\", dialog.get_value(\"paid_amount\") !== dialog.get_value(\"confirm_amount\"));\n                //  dialog.get_value(\"confirm_amount\")\n                if (dialog.get_value(\"paid_amount\") === dialog.get_value(\"confirm_amount\")) {\n                    if (dialog.get_value(\"tendered_amount\") >= dialog.get_value(\"paid_amount\")) {\n                        dialog.set_values({ change_amount: dialog.get_value(\"tendered_amount\") - dialog.get_value(\"paid_amount\") });\n                    } else {\n                        var diff = dialog.get_value(\"tendered_amount\") - dialog.get_value(\"paid_amount\")\n                        dialog.get_primary_btn().attr(\"disabled\", false);\n                        frappe.msgprint(`Sorry the tendered amount is less than paid amount by ${diff.toFixed(2)}`);\n                    }\n                } else {\n                    dialog.get_primary_btn().attr(\"disabled\", false);\n                }\n            };\n            dialog.get_primary_btn().attr(\"disabled\", true);\n            dialog.fields_dict[\"paid_amount\"].df.onchange = () => {\n                dialog.get_primary_btn().attr(\"disabled\", dialog.get_value(\"paid_amount\") !== dialog.get_value(\"confirm_amount\"));\n            };\n            dialog.fields_dict[\"confirm_amount\"].df.onchange = () => {\n                dialog.get_primary_btn().attr(\"disabled\", dialog.get_value(\"paid_amount\") !== dialog.get_value(\"confirm_amount\"));\n            };\n            dialog.show();\n        },\n        getPayments() {\n            getPatientPayments({\n                patient_number: this.patient_number,\n                appointment_number: this.appointment_number,\n                inpatient_record: this.inpatient_record,\n            }).then((data) => {\n                this.paymentItems = data;\n            });\n        },\n\n    },\n    watch: {\n        patient_number() {\n            this.getPayments();\n        }\n    },\n    created() {\n        this.getPayments();\n    },\n    filters: {\n        // Filter definitions\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"flex\", \"justify-content\": \"flex-end\" }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { size: \"sm\", variant: \"primary\" },\n                        on: { click: _vm.createPaymentEntry }\n                      },\n                      [_vm._v(\"Add \")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { size: \"md\", variant: \"primary\" },\n                        on: { click: _vm.verifyMpesaPayment }\n                      },\n                      [_vm._v(\"Verify Mpesa \")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"table\",\n        { staticClass: \"table table-striped table-bordered\" },\n        [\n          _vm._m(0),\n          _vm._v(\" \"),\n          _vm._l(_vm.paymentItems, function(paymentItem) {\n            return _c(\"tr\", { key: paymentItem.name }, [\n              _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(paymentItem.name))])]),\n              _vm._v(\" \"),\n              _c(\"td\", [\n                _c(\"span\", [\n                  _vm._v(_vm._s(_vm._f(\"dateFormat\")(paymentItem.creation)))\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"td\", [_vm._v(_vm._s(paymentItem.status))]),\n              _vm._v(\" \"),\n              _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                _c(\"span\", [\n                  _vm._v(_vm._s(paymentItem.received_amount.toFixed(2)))\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"td\", [_c(\"span\", [_vm._v(_vm._s(paymentItem.paid_to))])]),\n              _vm._v(\" \"),\n              _c(\n                \"td\",\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.printReceipt(paymentItem)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", {\n                        staticClass: \"fa fa-print\",\n                        attrs: { \"aria-hidden\": \"true\" }\n                      }),\n                      _vm._v(\" Print\")\n                    ]\n                  )\n                ],\n                1\n              )\n            ])\n          })\n        ],\n        2\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(\"Number\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"Date\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"Status\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"Amount\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"Account\")]),\n        _vm._v(\" \"),\n        _c(\"th\", [_vm._v(\"Action\")])\n      ])\n    ])\n  }\n]\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = undefined\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n        <b-row>\\n            <b-col>\\n                <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <b-button style=\\\"margin-right:2px;\\\" size=\\\"sm\\\" variant=\\\"primary\\\" @click=\\\"createPaymentEntry\\\">Add </b-button>\\n                        <b-button style=\\\"margin-right:2px;\\\" size=\\\"md\\\" variant=\\\"primary\\\" @click=\\\"verifyMpesaPayment\\\">Verify Mpesa </b-button>\\n\\n                    </b-button-group>\\n                </div>\\n            </b-col>\\n        </b-row>\\n        <table class=\\\"table table-striped table-bordered\\\">\\n            <thead>\\n                <tr>\\n                    <th>Number</th>\\n                    <th>Date</th>\\n                    <th>Status</th>\\n                    <th>Amount</th>\\n                    <th>Account</th>\\n                    <!-- <th>Quantity</th>\\n                    <th>Total</th>-->\\n                    <th>Action</th> \\n                </tr>\\n            </thead>\\n            <tr v-for=\\\"paymentItem in paymentItems\\\" :key=\\\"paymentItem.name\\\">\\n                <td><span>{{ paymentItem.name }}</span> </td>\\n                <td><span>{{ paymentItem.creation | dateFormat }}</span> </td>\\n                <td>{{ paymentItem.status }}</td>\\n                <td style=\\\"text-align: right;\\\"><span>{{ paymentItem.received_amount.toFixed(2) }}</span> </td>\\n                <td><span>{{ paymentItem.paid_to }}</span> </td>\\n                <td>\\n                     <b-button @click=\\\"printReceipt(paymentItem)\\\" variant=\\\"primary\\\"><i class=\\\"fa fa-print\\\" aria-hidden=\\\"true\\\"></i> Print</b-button>\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n</template>\\n\\n<script>\\nimport { getPatientPayments } from \\\"../../services/patient_chart/accounts.js\\\";\\n//\\nimport {\\n    savePaymentEntry,\\n    savePrePayment\\n} from '../../services/accounts/patient.js'\\nexport default {\\n    name: 'Receipts',\\n    props: {\\n        patient_number: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        customerNumber: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        patientName: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n    },\\n    data() {\\n        return {\\n            paymentItems: undefined,\\n        };\\n    },\\n    methods: {\\n        verifyMpesaPayment(){\\n             frappe.require(\\\"/assets/frontend/js/mpesa_dialog.js\\\", () => {\\n            // chat.js is loaded\\n                console.log(b)\\n                mpesaDialog(this.customerNumber)\\n            })\\n        },\\n        printReceipt(paymentItem){\\n              var w = window.open(frappe.urllib.get_full_url(\\\"/printview?\\\" +\\n                \\\"doctype=\\\" + encodeURIComponent('Payment Entry') +\\n                \\\"&name=\\\" + encodeURIComponent(paymentItem.name) +\\n                \\\"&format=Payment Entry Receipt&_lang=en&trigger_print=1\\\"\\n            ));\\n            if (!w) {\\n                msgprint(__(\\\"Please enable pop-ups\\\"));\\n                return;\\n            }\\n        },\\n        createPaymentEntry() {\\n            let parent = this;\\n            let dialog = new frappe.ui.Dialog({\\n                title: `Add Payment Entry for ${parent.patientName}`,\\n                fields: [{\\n                        label: 'Client Name',\\n                        fieldname: 'party',\\n                        fieldtype: 'Read Only',\\n                        options: 'Customer',\\n                        default: `${parent.patientName} (${parent.customerNumber})`,\\n                        readonly: 0\\n                    },\\n                    {\\n                        label: 'Sales Order',\\n                        fieldname: 'sales_order',\\n                        fieldtype: 'Link',\\n                        options: 'Sales Order',\\n                        // hidden: doctype,\\n                        filters: { customer: parent.customerNumber, status: ['not in', ['Completed', 'Cancelled']] },\\n                    },\\n                    {\\n                        label: 'Mode of Payment',\\n                        fieldname: 'mode_of_payment',\\n                        fieldtype: 'Link',\\n                        options: 'Mode of Payment',\\n                        // filters: { account_type: ['in', ['Cash', 'Bank']] },\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Reference',\\n                        fieldname: 'reference_no',\\n                        fieldtype: 'Data',\\n                        reqd: 1,\\n                        default:Math.floor(Date.now()).toString(36).toUpperCase().toString()\\n                    },\\n                    {\\n                        label: 'Amount',\\n                        fieldname: 'paid_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Confirm Amount',\\n                        fieldname: 'confirm_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Amount Tendered',\\n                        fieldname: 'tendered_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Change',\\n                        fieldname: 'change_amount',\\n                        fieldtype: 'Read Only',\\n                        default: 0,\\n                        readony: 0,\\n                    },\\n                    // {\\n                    //     label: 'Change Account',\\n                    //     fieldname: 'account_for_change',\\n                    //     fieldtype: 'Link',\\n                    //     options: 'Account',\\n                    //     // hidden: doctype,\\n                    //     filters: { account_type: \\\"Cash\\\" },\\n                    // },\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action(values) {\\n                    // save payment entry\\n                    console.log(JSON.stringify(dialog.get_values()));\\n                    if (values.sales_order) {\\n                        // && values.confirm_amount === values.paid_amount\\n                        var diff = values.paid_amount - values.confirm_amount\\n                        parseFloat(values.confirm_amount) !== parseFloat(values.paid_amount) ? frappe.throw(`Sorry the values you entered differ with invoice by ${diff}`) :\\n                            savePaymentEntry({\\n                                docname: values.sales_order,\\n                                doctype: 'Sales Order',\\n                                amount: values.paid_amount,\\n                                // account_for_change:values.account_for_change,\\n                                change_amount: values.change_amount,\\n                                amount_tendered: values.tendered_amount,\\n                                reference_no: values.reference_no,\\n                                // paid_to: values.paid_to\\n                                mode_of_payment:values.mode_of_payment\\n                            }).then(r => {\\n                                parent.$emit('newPaymentEntry');\\n                                frappe.show_alert({\\n                                    message: `Payment Entry Created`,\\n                                    indicator: 'green'\\n                                }, 5);\\n                                //dialog.hide();\\n                                parent.getPayments();\\n                            });\\n                            dialog.hide();\\n                    } else {\\n                        dialog.hide();\\n                        savePrePayment({\\n                            customer_name: parent.customerNumber,\\n                            amount: values.paid_amount,\\n                            // account_for_change:values.account_for_change, \\n                            change_amount: values.change_amount,\\n                            amount_tendered: values.tendered_amount,\\n                            reference_no: values.reference_no,\\n                            // paid_to: values.paid_to\\n                             mode_of_payment:values.mode_of_payment\\n                        }).then(r => {\\n                            parent.$emit('newPaymentEntry');\\n                            frappe.show_alert({\\n                                message: `Payment Entry Created`,\\n                                indicator: 'green'\\n                            }, 5);\\n                            parent.getPayments();\\n                        });\\n                    }\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action() {\\n                    dialog.hide();\\n                }\\n            });\\n            dialog.fields_dict[\\\"tendered_amount\\\"].df.onchange = () => {\\n                // dialog.get_primary_btn().attr(\\\"disabled\\\", dialog.get_value(\\\"paid_amount\\\") !== dialog.get_value(\\\"confirm_amount\\\"));\\n                //  dialog.get_value(\\\"confirm_amount\\\")\\n                if (dialog.get_value(\\\"paid_amount\\\") === dialog.get_value(\\\"confirm_amount\\\")) {\\n                    if (dialog.get_value(\\\"tendered_amount\\\") >= dialog.get_value(\\\"paid_amount\\\")) {\\n                        dialog.set_values({ change_amount: dialog.get_value(\\\"tendered_amount\\\") - dialog.get_value(\\\"paid_amount\\\") });\\n                    } else {\\n                        var diff = dialog.get_value(\\\"tendered_amount\\\") - dialog.get_value(\\\"paid_amount\\\")\\n                        dialog.get_primary_btn().attr(\\\"disabled\\\", false);\\n                        frappe.msgprint(`Sorry the tendered amount is less than paid amount by ${diff.toFixed(2)}`);\\n                    }\\n                } else {\\n                    dialog.get_primary_btn().attr(\\\"disabled\\\", false);\\n                }\\n            };\\n            dialog.get_primary_btn().attr(\\\"disabled\\\", true);\\n            dialog.fields_dict[\\\"paid_amount\\\"].df.onchange = () => {\\n                dialog.get_primary_btn().attr(\\\"disabled\\\", dialog.get_value(\\\"paid_amount\\\") !== dialog.get_value(\\\"confirm_amount\\\"));\\n            };\\n            dialog.fields_dict[\\\"confirm_amount\\\"].df.onchange = () => {\\n                dialog.get_primary_btn().attr(\\\"disabled\\\", dialog.get_value(\\\"paid_amount\\\") !== dialog.get_value(\\\"confirm_amount\\\"));\\n            };\\n            dialog.show();\\n        },\\n        getPayments() {\\n            getPatientPayments({\\n                patient_number: this.patient_number,\\n                appointment_number: this.appointment_number,\\n                inpatient_record: this.inpatient_record,\\n            }).then((data) => {\\n                this.paymentItems = data;\\n            });\\n        },\\n\\n    },\\n    watch: {\\n        patient_number() {\\n            this.getPayments();\\n        }\\n    },\\n    created() {\\n        this.getPayments();\\n    },\\n    filters: {\\n        // Filter definitions\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n    }\\n}\\n</script>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (false) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  generateGatePass,\n} from \"../../../services/patient_chart/api.js\";\nconst __vue_script__ = {\n  name: \"GatePass\",\n  data() {\n    return {};\n  },\n  created() {},\n  props: {\n      patient: {\n            type: String,\n            default: \" \",\n            required: true,\n        }\n  },\n\n  methods: {\n    GenerateGP() {\n      generateGatePass({\n        patient: this.patient,\n      }).then((data) => {\n          \n      });\n    },\n    \n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-button\",\n        {\n          staticClass: \"pull-right\",\n          attrs: { variant: \"success btn-sm\" },\n          on: {\n            click: function($event) {\n              return _vm.GenerateGP()\n            }\n          }\n        },\n        [_vm._v(\"\\n    Generate Gate Pass\\n  \")]\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-4e095058_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"GatePass.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n    <b-button\\n      class=\\\"pull-right\\\"\\n      @click=\\\"GenerateGP()\\\"\\n      variant=\\\"success btn-sm\\\"\\n    >\\n      Generate Gate Pass\\n    </b-button>\\n  </div>\\n</template>\\n\\n<script>\\nimport {\\n  generateGatePass,\\n} from \\\"../../../services/patient_chart/api.js\\\";\\nexport default {\\n  name: \\\"GatePass\\\",\\n  data() {\\n    return {};\\n  },\\n  created() {},\\n  props: {\\n      patient: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        }\\n  },\\n\\n  methods: {\\n    GenerateGP() {\\n      generateGatePass({\\n        patient: this.patient,\\n      }).then((data) => {\\n          \\n      });\\n    },\\n    \\n  },\\n};\\n</script>\\n\\n<style></style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { /*getPatientInvoices,*/ finalizeInvoice } from \"../../services/patient_chart/accounts.js\";\nimport {\n    getPatientInvoices,\n    getCategorizedSalesInvoices,\n    createSalesReturn,\n    changeSalesOrderCustomer\n} from '../../services/accounts/patient.js'\nimport GatePass from './components/GatePass.vue'\nconst __vue_script__ = {\n    name: 'Invoices',\n    props: {\n        patient_number: {\n            type: String,\n            default: \" \",\n            required: true,\n        }\n    },\n    data() {\n        return {\n            invoices: [],\n        };\n    },\n    components:{\n        GatePass\n    },\n    methods: {\n        changeInvoiceCustomerGroup(invoiceName){\n            const dialog = new frappe.ui.Dialog({\n                title: 'Update Invoice Customer Group',\n                fields: [{\n                    label: 'Insurance Payer',\n                    fieldtype: 'Link',\n                    options: 'Customer Group',\n                    fieldname: 'customer_group'\n                }],\n                primary_action: (values) => {\n                    changeSalesOrderCustomer({\n                        sales_invoice: invoiceName, customer_group: values.customer_group\n                    }).then(() => {\n                         dialog.hide()\n                    })\n                }\n            })\n            dialog.show()\n        },\n         printNHIFRenal(invoiceName){\n             var w = window.open(frappe.urllib.get_full_url(\"/printview?\" +\n                \"doctype=\" + encodeURIComponent('Sales Invoice') +\n                \"&name=\" + encodeURIComponent(invoiceName) +\n                \"&format=\" + encodeURIComponent('Sales Invoice Summary NHIF Renal') +\n                \"&_lang=en&no_letterhead=0&letterhead=MTRH%20Default&settings=%7B%7D&trigger_print=1\"\n            ));\n            //  var w = window.open(frappe.urllib.get_full_url(`app/print/Sales Invoice/${invoiceName}` //+\n            //     // \"doctype=\" + encodeURIComponent('Invoice Finalization') +\n            //     // \"&name=\" + encodeURIComponent(finalInvoiceItem.name)\n            // ));\n            if (!w) {\n                msgprint(__(\"Please enable pop-ups\"));\n                return;\n            }\n        },\n        printInterim(invoiceName){\n             var w = window.open(frappe.urllib.get_full_url(\"/printview?\" +\n                \"doctype=\" + encodeURIComponent('Sales Invoice') +\n                \"&name=\" + encodeURIComponent(invoiceName) +\n                \"&format=\" + encodeURIComponent('Interim Sales Invoice') +\n                \"&_lang=en&no_letterhead=0&letterhead=MTRH%20Default&settings=%7B%7D&trigger_print=1\"\n            ));\n            //  var w = window.open(frappe.urllib.get_full_url(`app/print/Sales Invoice/${invoiceName}` //+\n            //     // \"doctype=\" + encodeURIComponent('Invoice Finalization') +\n            //     // \"&name=\" + encodeURIComponent(finalInvoiceItem.name)\n            // ));\n            if (!w) {\n                msgprint(__(\"Please enable pop-ups\"));\n                return;\n            }\n        },\n        printSummary(invoiceName){\n            // Sales Invoice Summary\n              var w = window.open(frappe.urllib.get_full_url(\"/printview?\" +\n                \"doctype=\" + encodeURIComponent('Sales Invoice') +\n                \"&name=\" + encodeURIComponent(invoiceName) +\n                \"&format=\"+ encodeURIComponent('Sales Invoice Summary') + \n                \"&_lang=en&no_letterhead=0&letterhead=MTRH%20Default&settings=%7B%7D&trigger_print=1\"\n            ));\n             var w = window.open(frappe.urllib.get_full_url(`app/print/Sales Invoice/${invoiceName}` //+\n                // \"doctype=\" + encodeURIComponent('Invoice Finalization') +\n                // \"&name=\" + encodeURIComponent(finalInvoiceItem.name)\n            ));\n            if (!w) {\n                msgprint(__(\"Please enable pop-ups\"));\n                return;\n            }\n        },\n        \n        createCreditNote(invoiceItem) {\n            let parent = this;\n            let dialog = new frappe.ui.Dialog({\n                title: `Add Credit Note for ${invoiceItem.parent}`,\n                fields: [{\n                        label: 'Total to be paid',\n                        fieldname: 'party',\n                        fieldtype: 'Read Only',\n                        options: 'Currency',\n                        default: `${invoiceItem.amount.toFixed(2)}`,\n                        readonly: 0\n                    },\n                    {\n                        label: 'New Invoice Amount',\n                        fieldname: 'new_amount',\n                        fieldtype: 'Currency',\n                        reqd: 1,\n                        default: 0\n                    },\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    dialog.hide();\n                    createSalesReturn({\n                        invoice_name:invoiceItem.parent,\n                        return_amount: parseFloat(invoiceItem.amount) - parseFloat(values.new_amount) \n                    }).then(r=>{\n                          frappe.show_alert({\n                            message: `Credit Note Created #${r.name}`,\n                            indicator: 'green'\n                        }, 5);        \n                    });\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action() {\n                    dialog.hide();\n                }\n            });\n            dialog.show();\n        },\n        finalizeInvoices() {\n            if (this.invoices.unpaid_sales_invoice_items.length || this.invoices.paid_sales_invoice_items.length) {\n                let concat = this.invoices.unpaid_sales_invoice_items.concat(this.invoices.paid_sales_invoice_items);\n                let salesInvoice = {\n                    name: concat[0].parent\n                    // name:this.invoices.unpaid_sales_invoice_items[0].parent || this.invoices.paid_sales_invoice_items[0].parent\n                };\n                finalizeInvoice(salesInvoice).then((data) => {\n                    frappe.show_alert({\n                        message: `Invoice finalized`,\n                        indicator: 'green'\n                    }, 5);\n                    this.fetchCategorizedSalesInvoices();\n                });\n            } else {\n                frappe.show_alert({\n                    message: `No invoice(s) to finalize`,\n                    indicator: 'orange'\n                }, 5);\n            }\n        },\n        //\n        fetchCategorizedSalesInvoices() {\n            getCategorizedSalesInvoices({ patient_number: this.patient_number })\n                .then((data) => {\n                    this.invoices = data;\n                });\n        },\n        // fetchInvoices() {\n        //     getPatientInvoices({ patient_number: this.patient_number})\n        //         .then((data) => {\n        //             this.invoices = data;\n        //         });\n        // }\n    },\n    watch: {\n        patient_number() {\n            // this.fetchInvoices();\n            this.fetchCategorizedSalesInvoices();\n        }\n    },\n    created() {\n        // this.fetchInvoices();\n        this.fetchCategorizedSalesInvoices();\n    },\n    filters: {\n        // Filter definitions\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"div\",\n              {\n                staticStyle: {\n                  display: \"flex\",\n                  \"justify-content\": \"flex-start\"\n                }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [_c(\"gate-pass\", { attrs: { patient: _vm.patient_number } })],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"flex\", \"justify-content\": \"flex-end\" }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { variant: \"primary\", size: \"sm\" },\n                        on: { click: _vm.fetchCategorizedSalesInvoices }\n                      },\n                      [_vm._v(\"Refresh \")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"table\",\n              { staticClass: \"table table-striped table-bordered\" },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\"),\n                  _c(\"tr\", [\n                    _c(\"th\", { attrs: { colspan: \"6\" } }, [\n                      _vm._v(\n                        \" Paid Items \" +\n                          _vm._s(\n                            _vm.invoices.paid_sales_invoice_items.length || 0\n                          )\n                      )\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Item\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Invoice\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Date\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Quantity\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Rate\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Amount\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Action\")])\n                ]),\n                _vm._v(\" \"),\n                _vm._l(_vm.invoices.paid_sales_invoice_items, function(\n                  invoiceItem\n                ) {\n                  return _c(\"tr\", { key: invoiceItem.name }, [\n                    _c(\"td\", [_vm._v(_vm._s(invoiceItem.item_name))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", {\n                        domProps: { innerHTML: _vm._s(invoiceItem.si_link) }\n                      })\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(_vm._f(\"dateFormat\")(invoiceItem.creation))\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(_vm._f(\"numberWithCommas\")(invoiceItem.qty || 1))\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"numberWithCommas\")(\n                            invoiceItem.rate.toFixed(2)\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"numberWithCommas\")(\n                              invoiceItem.amount.toFixed(2)\n                            )\n                          )\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"td\",\n                      [\n                        _c(\n                          \"b-dropdown\",\n                          {\n                            attrs: {\n                              text: \"Select Actions\",\n                              variant: \"primary\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printNHIFRenal(\n                                      invoiceItem.parent\n                                    )\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Renal NHIF \")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printInterim(invoiceItem.parent)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Print Interim\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printSummary(invoiceItem.parent)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Print Summary \")]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                })\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"table\",\n              { staticClass: \"table table-striped table-bordered\" },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\"),\n                  _c(\"tr\", [\n                    _c(\"th\", { attrs: { colspan: \"6\" } }, [\n                      _vm._v(\n                        \"Un Paid Items \" +\n                          _vm._s(\n                            _vm.invoices.unpaid_sales_invoice_items.length || 0\n                          ) +\n                          \" \"\n                      )\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Item\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Invoice\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Date\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Quantity\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Rate\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Amount\")]),\n                  _vm._v(\" \"),\n                  _c(\"th\", [_vm._v(\"Action\")])\n                ]),\n                _vm._v(\" \"),\n                _vm._l(_vm.invoices.unpaid_sales_invoice_items, function(\n                  invoiceItem\n                ) {\n                  return _c(\"tr\", { key: invoiceItem.name }, [\n                    _c(\"td\", [_vm._v(_vm._s(invoiceItem.item_name))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", {\n                        domProps: { innerHTML: _vm._s(invoiceItem.si_link) }\n                      })\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(_vm._f(\"dateFormat\")(invoiceItem.creation))\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(_vm._f(\"numberWithCommas\")(invoiceItem.qty || 1))\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"numberWithCommas\")(\n                            invoiceItem.rate.toFixed(2)\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"numberWithCommas\")(\n                              invoiceItem.amount.toFixed(2)\n                            )\n                          )\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"td\",\n                      [\n                        _c(\n                          \"b-dropdown\",\n                          {\n                            attrs: {\n                              text: \"Select Actions\",\n                              variant: \"primary\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printNHIFRenal(\n                                      invoiceItem.parent\n                                    )\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Renal NHIF \")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printInterim(invoiceItem.parent)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Print Interim\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printSummary(invoiceItem.parent)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Print Summary \")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.changeInvoiceCustomerGroup(\n                                      invoiceItem.parent\n                                    )\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Change Invoice Customer Group\")]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                })\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = undefined\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n        <!-- {{ invoices }} -->\\n        <b-row>\\n            <b-col>\\n                <div style=\\\"display: flex; justify-content: flex-start\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <gate-pass :patient=\\\"patient_number\\\"/>\\n                    </b-button-group>\\n                </div>\\n                <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <!-- <b-button style=\\\"margin-right:2px;\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"finalizeInvoices\\\">Finalize Invoices</b-button> -->\\n                        <b-button style=\\\"margin-right:2px;\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"fetchCategorizedSalesInvoices\\\">Refresh </b-button>\\n                    </b-button-group>\\n                </div>\\n            </b-col>\\n        </b-row>\\n        <b-row>\\n            <b-col>\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <tr>\\n                                <th colspan=\\\"6\\\"> Paid Items {{ invoices.paid_sales_invoice_items.length || 0}}</th>\\n                            </tr>\\n                            <th>Item</th>\\n                            <th>Invoice</th>\\n                            <th>Date</th>\\n                            <th>Quantity</th>\\n                            <th>Rate</th>\\n                            <th>Amount</th>\\n                            <!-- <th>Sales Order</th> -->\\n                            <!-- <th>Account</th> -->\\n                            <th>Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"invoiceItem in invoices.paid_sales_invoice_items\\\" :key=\\\"invoiceItem.name\\\">\\n                        <td>{{ invoiceItem.item_name }}</td>\\n                        <!-- <td><span>{{ invoiceItem.parent }}</span> </td> -->\\n                        <td>  <span v-html=\\\"invoiceItem.si_link\\\"></span> </td>\\n                        <td><span>{{ invoiceItem.creation | dateFormat}}</span> </td>\\n                        <td>{{ invoiceItem.qty || 1 | numberWithCommas }}</td>\\n                        <td>{{ invoiceItem.rate.toFixed(2) | numberWithCommas }}</td>\\n                        <td style=\\\"text-align: right;\\\"><span>{{ invoiceItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <!-- <td><span>{{ invoiceItem.sales_order}}</span> </td> -->\\n                        <td>\\n                            <!-- <b-btn variant=\\\"primary\\\" @click=\\\"createCreditNote(invoiceItem)\\\">Credit Note</b-btn> -->\\n                             <b-dropdown text=\\\"Select Actions\\\" variant=\\\"primary\\\">\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printNHIFRenal(invoiceItem.parent)\\\">Renal NHIF </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printInterim(invoiceItem.parent)\\\">Print Interim</b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printSummary(invoiceItem.parent)\\\">Print Summary </b-dropdown-item>\\n                            </b-dropdown>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n        <b-row>\\n            <b-col>\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <tr>\\n                                <th colspan=\\\"6\\\">Un Paid Items {{ invoices.unpaid_sales_invoice_items.length || 0}} </th>\\n                            </tr>\\n                            <th>Item</th>\\n                            <th>Invoice</th>\\n                            <th>Date</th>\\n                            <th>Quantity</th>\\n                            <th>Rate</th>\\n                            <th>Amount</th>\\n                            <!-- <th>Sales Order</th> -->\\n                            <!-- <th>Account</th> -->\\n                            <th>Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"invoiceItem in invoices.unpaid_sales_invoice_items\\\" :key=\\\"invoiceItem.name\\\">\\n                        <td>{{ invoiceItem.item_name }}</td>\\n                        <!-- <td><span>{{ invoiceItem.parent }}</span> </td> -->\\n                        <td>  <span v-html=\\\"invoiceItem.si_link\\\"></span> </td>\\n                        <td><span>{{ invoiceItem.creation | dateFormat}}</span> </td>\\n                        <td>{{ invoiceItem.qty || 1 | numberWithCommas }}</td>\\n                        <td>{{ invoiceItem.rate.toFixed(2) | numberWithCommas }}</td>\\n                        <td style=\\\"text-align: right;\\\"><span>{{ invoiceItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <!-- <td><span>{{ invoiceItem.sales_order}}</span> </td> -->\\n                        <td>\\n                               <b-dropdown text=\\\"Select Actions\\\" variant=\\\"primary\\\">\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printNHIFRenal(invoiceItem.parent)\\\">Renal NHIF </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printInterim(invoiceItem.parent)\\\">Print Interim</b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printSummary(invoiceItem.parent)\\\">Print Summary </b-dropdown-item> \\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"changeInvoiceCustomerGroup(invoiceItem.parent)\\\">Change Invoice Customer Group</b-dropdown-item>                        \\n                            </b-dropdown>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n    </div>\\n</template>\\n\\n<script>\\nimport { /*getPatientInvoices,*/ finalizeInvoice } from \\\"../../services/patient_chart/accounts.js\\\";\\nimport {\\n    getPatientInvoices,\\n    getCategorizedSalesInvoices,\\n    createSalesReturn,\\n    changeSalesOrderCustomer\\n} from '../../services/accounts/patient.js'\\nimport GatePass from './components/GatePass.vue'\\nexport default {\\n    name: 'Invoices',\\n    props: {\\n        patient_number: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        }\\n    },\\n    data() {\\n        return {\\n            invoices: [],\\n        };\\n    },\\n    components:{\\n        GatePass\\n    },\\n    methods: {\\n        changeInvoiceCustomerGroup(invoiceName){\\n            const dialog = new frappe.ui.Dialog({\\n                title: 'Update Invoice Customer Group',\\n                fields: [{\\n                    label: 'Insurance Payer',\\n                    fieldtype: 'Link',\\n                    options: 'Customer Group',\\n                    fieldname: 'customer_group'\\n                }],\\n                primary_action: (values) => {\\n                    changeSalesOrderCustomer({\\n                        sales_invoice: invoiceName, customer_group: values.customer_group\\n                    }).then(() => {\\n                         dialog.hide()\\n                    })\\n                }\\n            })\\n            dialog.show()\\n        },\\n         printNHIFRenal(invoiceName){\\n             var w = window.open(frappe.urllib.get_full_url(\\\"/printview?\\\" +\\n                \\\"doctype=\\\" + encodeURIComponent('Sales Invoice') +\\n                \\\"&name=\\\" + encodeURIComponent(invoiceName) +\\n                \\\"&format=\\\" + encodeURIComponent('Sales Invoice Summary NHIF Renal') +\\n                \\\"&_lang=en&no_letterhead=0&letterhead=MTRH%20Default&settings=%7B%7D&trigger_print=1\\\"\\n            ));\\n            //  var w = window.open(frappe.urllib.get_full_url(`app/print/Sales Invoice/${invoiceName}` //+\\n            //     // \\\"doctype=\\\" + encodeURIComponent('Invoice Finalization') +\\n            //     // \\\"&name=\\\" + encodeURIComponent(finalInvoiceItem.name)\\n            // ));\\n            if (!w) {\\n                msgprint(__(\\\"Please enable pop-ups\\\"));\\n                return;\\n            }\\n        },\\n        printInterim(invoiceName){\\n             var w = window.open(frappe.urllib.get_full_url(\\\"/printview?\\\" +\\n                \\\"doctype=\\\" + encodeURIComponent('Sales Invoice') +\\n                \\\"&name=\\\" + encodeURIComponent(invoiceName) +\\n                \\\"&format=\\\" + encodeURIComponent('Interim Sales Invoice') +\\n                \\\"&_lang=en&no_letterhead=0&letterhead=MTRH%20Default&settings=%7B%7D&trigger_print=1\\\"\\n            ));\\n            //  var w = window.open(frappe.urllib.get_full_url(`app/print/Sales Invoice/${invoiceName}` //+\\n            //     // \\\"doctype=\\\" + encodeURIComponent('Invoice Finalization') +\\n            //     // \\\"&name=\\\" + encodeURIComponent(finalInvoiceItem.name)\\n            // ));\\n            if (!w) {\\n                msgprint(__(\\\"Please enable pop-ups\\\"));\\n                return;\\n            }\\n        },\\n        printSummary(invoiceName){\\n            // Sales Invoice Summary\\n              var w = window.open(frappe.urllib.get_full_url(\\\"/printview?\\\" +\\n                \\\"doctype=\\\" + encodeURIComponent('Sales Invoice') +\\n                \\\"&name=\\\" + encodeURIComponent(invoiceName) +\\n                \\\"&format=\\\"+ encodeURIComponent('Sales Invoice Summary') + \\n                \\\"&_lang=en&no_letterhead=0&letterhead=MTRH%20Default&settings=%7B%7D&trigger_print=1\\\"\\n            ));\\n             var w = window.open(frappe.urllib.get_full_url(`app/print/Sales Invoice/${invoiceName}` //+\\n                // \\\"doctype=\\\" + encodeURIComponent('Invoice Finalization') +\\n                // \\\"&name=\\\" + encodeURIComponent(finalInvoiceItem.name)\\n            ));\\n            if (!w) {\\n                msgprint(__(\\\"Please enable pop-ups\\\"));\\n                return;\\n            }\\n        },\\n        \\n        createCreditNote(invoiceItem) {\\n            let parent = this;\\n            let dialog = new frappe.ui.Dialog({\\n                title: `Add Credit Note for ${invoiceItem.parent}`,\\n                fields: [{\\n                        label: 'Total to be paid',\\n                        fieldname: 'party',\\n                        fieldtype: 'Read Only',\\n                        options: 'Currency',\\n                        default: `${invoiceItem.amount.toFixed(2)}`,\\n                        readonly: 0\\n                    },\\n                    {\\n                        label: 'New Invoice Amount',\\n                        fieldname: 'new_amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1,\\n                        default: 0\\n                    },\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action(values) {\\n                    dialog.hide();\\n                    createSalesReturn({\\n                        invoice_name:invoiceItem.parent,\\n                        return_amount: parseFloat(invoiceItem.amount) - parseFloat(values.new_amount) \\n                    }).then(r=>{\\n                          frappe.show_alert({\\n                            message: `Credit Note Created #${r.name}`,\\n                            indicator: 'green'\\n                        }, 5);        \\n                    });\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action() {\\n                    dialog.hide();\\n                }\\n            });\\n            dialog.show();\\n        },\\n        finalizeInvoices() {\\n            if (this.invoices.unpaid_sales_invoice_items.length || this.invoices.paid_sales_invoice_items.length) {\\n                let concat = this.invoices.unpaid_sales_invoice_items.concat(this.invoices.paid_sales_invoice_items);\\n                let salesInvoice = {\\n                    name: concat[0].parent\\n                    // name:this.invoices.unpaid_sales_invoice_items[0].parent || this.invoices.paid_sales_invoice_items[0].parent\\n                };\\n                finalizeInvoice(salesInvoice).then((data) => {\\n                    frappe.show_alert({\\n                        message: `Invoice finalized`,\\n                        indicator: 'green'\\n                    }, 5);\\n                    this.fetchCategorizedSalesInvoices();\\n                });\\n            } else {\\n                frappe.show_alert({\\n                    message: `No invoice(s) to finalize`,\\n                    indicator: 'orange'\\n                }, 5);\\n            }\\n        },\\n        //\\n        fetchCategorizedSalesInvoices() {\\n            getCategorizedSalesInvoices({ patient_number: this.patient_number })\\n                .then((data) => {\\n                    this.invoices = data;\\n                });\\n        },\\n        // fetchInvoices() {\\n        //     getPatientInvoices({ patient_number: this.patient_number})\\n        //         .then((data) => {\\n        //             this.invoices = data;\\n        //         });\\n        // }\\n    },\\n    watch: {\\n        patient_number() {\\n            // this.fetchInvoices();\\n            this.fetchCategorizedSalesInvoices();\\n        }\\n    },\\n    created() {\\n        // this.fetchInvoices();\\n        this.fetchCategorizedSalesInvoices();\\n    },\\n    filters: {\\n        // Filter definitions\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n}\\n</script>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (false) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    // getInvoiceFinalizations,\n    emailInvoiceFinalizations,\n    prepareAllocationFieldList,\n    getSalesInvoiceItems,\n    splitInvoice,\n    getFinalizedInvoiceItems,\n    createGatePass,\n    getFinalizedInvoiceAllocations\n} from '../../services/patient_chart/accounts.js'\nimport {\n    getInvoiceFinalizations,\n    createSalesReturn,\n    submitInvoiceFinalization\n} from '../../services/accounts/patient.js'\n\n// import patientAccountModule from '../../state/accounts';\n\nconst __vue_script__ = {\n    name: 'InvoiceFInalization',\n    props: {\n        patientName: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        customerName: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        // inpatient_record: {\n        //   type: String,\n        //   default: \" \",\n        //   required: true,\n        // },\n    },\n    data() {\n        return {\n            invoiceFInalization: [],\n            // schemes : []\n        };\n    },\n    computed: {\n        // invoiceFInalization() {\n        //   return this.$store.getters['patientAccounts1/invoiceFInalization']\n        // }\n    },\n    methods: {\n        submitFinalization(finalInvoiceItem) {\n            submitInvoiceFinalization({ finalization_name: finalInvoiceItem.name })\n                .then(r => {\n                    this.getFinalizations();\n                    frappe.show_alert({\n                        message: `Invoice finalization Submitted`,\n                        indicator: \"green\",\n                    }, 5);\n                })\n        },\n        makePayment(finalInvoiceItem) {\n            //\n        },\n        makeCreditNote(finalInvoiceItem) {\n            let invoiceArr = []\n            getFinalizedInvoiceItems({ name: finalInvoiceItem.name }).then(r => {\n                console.log(r)\n                invoiceArr = r;\n            });\n            prepareAllocationFieldList({ docname: finalInvoiceItem.name })\n                .then((r) => {\n                    let schemes = r;\n                    let query_args = {\n                        filters: { 'parent': [\"IN\", invoiceArr], }\n                    }\n                    new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Sales Invoice Item\",\n                        target: parent,\n                        setters: {\n                            item_code: \"\",\n                            item_name: '',\n                            amount: ''\n                        },\n                        get_query() {\n                            return query_args;\n                        },\n                        primary_action_label: 'Set Paid Amount',\n                        action(selections) {\n                            // console.log(selections);\n                            getSalesInvoiceItems({ name: selections[0] })\n                                .then((r) => {\n                                    let invoice = r.parent;\n                                    let total = r.amount;\n                                    var title = `Set for ${invoice} Amount paid out of  ${total}`;\n                                    let x = new frappe.ui.Dialog({\n                                        title: title,\n                                        fields: [{\n                                            label: 'New Invoice Amount',\n                                            fieldname: 'new_amount',\n                                            fieldtype: 'Currency',\n                                            reqd: 1,\n                                            default: 0\n                                        }],\n                                        primary_action_label: 'Set Invoice Amount',\n                                        primary_action: (values) => {\n                                            console.log(invoice)\n                                            console.log(values)\n                                            x.hide();\n                                            createSalesReturn({\n                                                invoice_name: invoice,\n                                                return_amount: parseFloat(total) - parseFloat(values.new_amount)\n                                            }).then(result => {\n                                                frappe.show_alert({\n                                                    message: `Credit Note Created #${result.name}`,\n                                                    indicator: 'green'\n                                                }, 5);\n                                            });\n                                        }\n                                    });\n                                    x.show();\n                                });\n                        }\n                    });\n                })\n        },\n        viewAllocations(finalInvoiceItem) {\n            getFinalizedInvoiceAllocations({\n                final_invoice_name: finalInvoiceItem.name\n            }).then(r => {\n                let message = '<ol>'\n                r.map(item => {\n                    message += `<li> ${item.invoice} &nbsp; ${item.payer} &nbsp; ${item.total.toFixed(2)}</li>`;\n                })\n                message += '</ol>'\n                frappe.msgprint({\n                    title: __('Payment Allocations'),\n                    message: message,\n                });\n            });\n        },\n        createGatePass(finalInvoiceItem) {\n            let x = new frappe.ui.Dialog({\n                title: 'Gate pass',\n                fields: [{\n                    label: 'Remarks',\n                    fieldname: 'remarks',\n                    fieldtype: 'Text'\n                }],\n                primary_action_label: 'Create Gate Pass',\n                primary_action: (values) => {\n                    console.log(values)\n                    createGatePass({\n                        invoice_finalization_name: finalInvoiceItem.name,\n                        remarks: values.remarks\n                    }).then(r => {\n                        if (r) {\n                            x.hide()\n                            frappe.show_alert({\n                                message: `Gate pass created`,\n                                indicator: \"green\",\n                            }, 5);\n                        }\n                    })\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action: (values) => {\n                    x.hide()\n                }\n            });\n            x.show();\n\n        },\n        allocateInvoiceItem(finalInvoiceItem) {\n            let parent = this;\n\n            function split_invoice(primary_invoice, split_args, row) {\n                splitInvoice({\n                    primary_invoice,\n                    split_args,\n                    row\n                }).then((r) => {\n                    console.log(r)\n                    frappe.show_alert({\n                            message: `Finalized Document allocation success`,\n                            indicator: \"green\",\n                        },\n                        5\n                    );\n                })\n            }\n            let invoiceArr = []\n            getFinalizedInvoiceItems({ name: finalInvoiceItem.name }).then(r => {\n                console.log(r)\n                invoiceArr = r;\n            });\n            prepareAllocationFieldList({ docname: finalInvoiceItem.name })\n                .then((r) => {\n                    let schemes = r;\n                    let query_args = {\n                        filters: { 'parent': [\"IN\", invoiceArr], }\n                    }\n                    new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Sales Invoice Item\",\n                        target: parent,\n                        setters: {\n                            item_code: \"\",\n                            item_name: '',\n                            amount: ''\n                        },\n                        get_query() {\n                            return query_args;\n                        },\n                        primary_action_label: 'Allocate Item',\n                        action(selections) {\n                            // console.log(selections);\n                            getSalesInvoiceItems({ name: selections[0] })\n                                .then((r) => {\n                                    let invoice = r.parent;\n                                    let total = r.amount;\n                                    var title = `${invoice} Total to allocate:  ${total}`;\n                                    let x = new frappe.ui.Dialog({\n                                        title: title,\n                                        fields: schemes,\n                                        primary_action_label: 'Allocate Invoices',\n                                        primary_action: (values) => {\n                                            let valuePayload = []\n                                            const propertyNames = Object.keys(values);\n                                            const propertyValues = Object.values(values);\n                                            propertyNames.forEach(function(val, key) {\n                                                valuePayload.push({ name: val, value: propertyValues[key] });\n                                            });\n                                            var entered_value = Object.values(values).reduce(function(a, b) {\n                                                return a + b // returns object with property x\n                                            }, 0)\n                                            // console.log(entered_value,total)\n                                            // \"700\" > \"300\"\n                                            var diff = total - entered_value\n                                            parseFloat(entered_value) > parseFloat(total) ? frappe.throw(`Sorry the values you entered differ with invoice by ${diff}`) : split_invoice(invoice, valuePayload, selections[0]);\n                                        }\n                                    });\n                                    x.show();\n                                });\n                        }\n                    });\n                })\n        },\n        printFinalization(finalInvoiceItem) {\n            // frappe.set_route('print', 'Invoice Finalization', finalInvoiceItem.name);\n            var w = window.open(frappe.urllib.get_full_url(`app/print/Invoice Finalization/${finalInvoiceItem.name}` //+\n                // \"doctype=\" + encodeURIComponent('Invoice Finalization') +\n                // \"&name=\" + encodeURIComponent(finalInvoiceItem.name)\n            ));\n            // \"&format=Drug Prescription Label&_lang=en&no_letterhead=1&letterhead=No Letterhead&trigger_print=1\"\n            if (!w) {\n                msgprint(__(\"Please enable pop-ups\"));\n                return;\n            }\n        },\n        emailFinalizations(finalInvoiceItem) {\n            let messageBody = `Dear Sir/Madam,<br/>Please find attached Finalized Invoice for appointment <b>${finalInvoiceItem.appointment_number}</b>, for your reference.\\\n        The list of items is shown on the attached document.<br/> Any queries or Issues should be addressed to Moi Teaching and Referral Hospital Finance/Billing Department.<br/><br/>\\\n        Regards <br/> Moi Teaching and Referal Hospital.`;\n            emailInvoiceFinalizations({\n                party_type: \"Customer\",\n                party_name: this.customerName,\n                message: messageBody,\n                ref_type: \"Invoice Finalization\",\n                ref_name: finalInvoiceItem.name\n            }).then((result) => {\n                if (result) {\n                    frappe.show_alert({\n                            message: `Finalized Document Sent to email Queue`,\n                            indicator: \"green\",\n                        },\n                        5\n                    );\n                }\n            });\n        },\n        getFinalizations() {\n            //  this.$store.dispatch(\"patientAccounts1/fetchInvoiceFinalizations\", this.patientName);\n            getInvoiceFinalizations(this.patientName)\n                .then((result) => {\n                    if (result) {\n                        this.invoiceFInalization = result;\n                    }\n                });\n        }\n    },\n    watch: {\n        appointment_number() {\n            this.getFinalizations();\n        },\n        inpatient_record() {\n            this.getFinalizations();\n        }\n    },\n    created() {\n        // this.$store.registerModule('patientAccounts1', patientAccountModule);\n        this.getFinalizations();\n    },\n    filters: {\n        // Filter definitions\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"flex\", \"justify-content\": \"flex-end\" }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { size: \"sm\", variant: \"primary\" },\n                        on: { click: _vm.getFinalizations }\n                      },\n                      [_vm._v(\"Refresh \")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"table\",\n              { staticClass: \"table table-striped table-bordered\" },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\"th\", [_vm._v(\"Name\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Timestamp\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Visit Type\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Total\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Actions\")])\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _vm._l(_vm.invoiceFInalization, function(finalInvoiceItem) {\n                  return _c(\"tr\", { key: finalInvoiceItem.name }, [\n                    _c(\"td\", [_vm._v(_vm._s(finalInvoiceItem.name))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"dateFormat\")(finalInvoiceItem.creation)\n                          )\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [_vm._v(_vm._s(finalInvoiceItem.visit_type))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"numberWithCommas\")(\n                            finalInvoiceItem.total_invoice_amount.toFixed(2)\n                          )\n                        )\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"td\",\n                      [\n                        _c(\n                          \"b-dropdown\",\n                          {\n                            staticClass: \"m-md-2\",\n                            attrs: {\n                              id: \"dropdown-1\",\n                              variant: \"primary\",\n                              text: \"Select Actions\"\n                            }\n                          },\n                          [\n                            finalInvoiceItem.docstatus === 0\n                              ? _c(\n                                  \"b-dropdown-item\",\n                                  {\n                                    attrs: { variant: \"primary\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.submitFinalization(\n                                          finalInvoiceItem\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                Submit\\n                            \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.printFinalization(\n                                      finalInvoiceItem\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                Print\\n                            \"\n                                )\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.emailFinalizations(\n                                      finalInvoiceItem\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                Email\\n                            \"\n                                )\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.viewAllocations(finalInvoiceItem)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                View Allocations\\n                            \"\n                                )\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.allocateInvoiceItem(\n                                      finalInvoiceItem\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                Allocate to Payers\\n                            \"\n                                )\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-dropdown-item\",\n                              {\n                                attrs: { variant: \"primary\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.createGatePass(finalInvoiceItem)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                Gate Pass\\n                            \"\n                                )\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                })\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = undefined\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n        <b-row>\\n            <b-col>\\n                <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <b-button style=\\\"margin-right:2px;\\\" size=\\\"sm\\\" variant=\\\"primary\\\" @click=\\\"getFinalizations\\\">Refresh </b-button>\\n                    </b-button-group>\\n                </div>\\n            </b-col>\\n        </b-row>\\n        <b-row>\\n            <b-col>\\n                <!-- {{ invoiceFInalization }} -->\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Timestamp</th>\\n                            <th>Visit Type</th>\\n                            <th>Total</th>\\n                            <!-- <th>Deductions</th> -->\\n                            <!-- <th>Net Due From Client</th> -->\\n                            <th>Actions</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"finalInvoiceItem in invoiceFInalization\\\" :key=\\\"finalInvoiceItem.name\\\">\\n                        <td>{{ finalInvoiceItem.name }}</td>\\n                        <td><span>{{ finalInvoiceItem.creation | dateFormat}}</span> </td>\\n                        <td><span>{{ finalInvoiceItem.visit_type }}</span> </td>\\n                        <td style=\\\"text-align: right;\\\">{{ finalInvoiceItem.total_invoice_amount.toFixed(2) | numberWithCommas }}</td>\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ finalInvoiceItem.total_deductions.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\">{{ finalInvoiceItem.net_due_from_client.toFixed(2) | numberWithCommas }}</td> -->\\n                        <td>\\n                            <b-dropdown id=\\\"dropdown-1\\\" variant=\\\"primary\\\" text=\\\"Select Actions\\\" class=\\\"m-md-2\\\">\\n                                <!-- <b-dropdown-item variant=\\\"primary\\\" @click=\\\"makePayment(finalInvoiceItem)\\\">\\n                                        Make Payment\\n                                    </b-dropdown-item>\\n                                     <b-dropdown-item variant=\\\"primary\\\" @click=\\\"makeCreditNote(finalInvoiceItem)\\\">\\n                                        Credit Note\\n                                    </b-dropdown-item> -->\\n                                <b-dropdown-item v-if=\\\"finalInvoiceItem.docstatus === 0\\\" variant=\\\"primary\\\" @click=\\\"submitFinalization(finalInvoiceItem)\\\">\\n                                    Submit\\n                                </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"printFinalization(finalInvoiceItem)\\\">\\n                                    Print\\n                                </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"emailFinalizations(finalInvoiceItem)\\\">\\n                                    Email\\n                                </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"viewAllocations(finalInvoiceItem)\\\">\\n                                    View Allocations\\n                                </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"allocateInvoiceItem(finalInvoiceItem)\\\">\\n                                    Allocate to Payers\\n                                </b-dropdown-item>\\n                                <b-dropdown-item variant=\\\"primary\\\" @click=\\\"createGatePass(finalInvoiceItem)\\\">\\n                                    Gate Pass\\n                                </b-dropdown-item>\\n                            </b-dropdown>\\n    \\n                        </td>\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n    </div>\\n</template>\\n\\n<script>\\nimport {\\n    // getInvoiceFinalizations,\\n    emailInvoiceFinalizations,\\n    prepareAllocationFieldList,\\n    getSalesInvoiceItems,\\n    splitInvoice,\\n    getFinalizedInvoiceItems,\\n    createGatePass,\\n    getFinalizedInvoiceAllocations\\n} from '../../services/patient_chart/accounts.js'\\nimport {\\n    getInvoiceFinalizations,\\n    createSalesReturn,\\n    submitInvoiceFinalization\\n} from '../../services/accounts/patient.js'\\n\\n// import patientAccountModule from '../../state/accounts';\\n\\nexport default {\\n    name: 'InvoiceFInalization',\\n    props: {\\n        patientName: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        customerName: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        // inpatient_record: {\\n        //   type: String,\\n        //   default: \\\" \\\",\\n        //   required: true,\\n        // },\\n    },\\n    data() {\\n        return {\\n            invoiceFInalization: [],\\n            // schemes : []\\n        };\\n    },\\n    computed: {\\n        // invoiceFInalization() {\\n        //   return this.$store.getters['patientAccounts1/invoiceFInalization']\\n        // }\\n    },\\n    methods: {\\n        submitFinalization(finalInvoiceItem) {\\n            submitInvoiceFinalization({ finalization_name: finalInvoiceItem.name })\\n                .then(r => {\\n                    this.getFinalizations();\\n                    frappe.show_alert({\\n                        message: `Invoice finalization Submitted`,\\n                        indicator: \\\"green\\\",\\n                    }, 5);\\n                })\\n        },\\n        makePayment(finalInvoiceItem) {\\n            //\\n        },\\n        makeCreditNote(finalInvoiceItem) {\\n            let invoiceArr = []\\n            getFinalizedInvoiceItems({ name: finalInvoiceItem.name }).then(r => {\\n                console.log(r)\\n                invoiceArr = r;\\n            });\\n            prepareAllocationFieldList({ docname: finalInvoiceItem.name })\\n                .then((r) => {\\n                    let schemes = r;\\n                    let query_args = {\\n                        filters: { 'parent': [\\\"IN\\\", invoiceArr], }\\n                    }\\n                    new frappe.ui.form.MultiSelectDialog({\\n                        doctype: \\\"Sales Invoice Item\\\",\\n                        target: parent,\\n                        setters: {\\n                            item_code: \\\"\\\",\\n                            item_name: '',\\n                            amount: ''\\n                        },\\n                        get_query() {\\n                            return query_args;\\n                        },\\n                        primary_action_label: 'Set Paid Amount',\\n                        action(selections) {\\n                            // console.log(selections);\\n                            getSalesInvoiceItems({ name: selections[0] })\\n                                .then((r) => {\\n                                    let invoice = r.parent;\\n                                    let total = r.amount;\\n                                    var title = `Set for ${invoice} Amount paid out of  ${total}`;\\n                                    let x = new frappe.ui.Dialog({\\n                                        title: title,\\n                                        fields: [{\\n                                            label: 'New Invoice Amount',\\n                                            fieldname: 'new_amount',\\n                                            fieldtype: 'Currency',\\n                                            reqd: 1,\\n                                            default: 0\\n                                        }],\\n                                        primary_action_label: 'Set Invoice Amount',\\n                                        primary_action: (values) => {\\n                                            console.log(invoice)\\n                                            console.log(values)\\n                                            x.hide();\\n                                            createSalesReturn({\\n                                                invoice_name: invoice,\\n                                                return_amount: parseFloat(total) - parseFloat(values.new_amount)\\n                                            }).then(result => {\\n                                                frappe.show_alert({\\n                                                    message: `Credit Note Created #${result.name}`,\\n                                                    indicator: 'green'\\n                                                }, 5);\\n                                            });\\n                                        }\\n                                    });\\n                                    x.show();\\n                                });\\n                        }\\n                    });\\n                })\\n        },\\n        viewAllocations(finalInvoiceItem) {\\n            getFinalizedInvoiceAllocations({\\n                final_invoice_name: finalInvoiceItem.name\\n            }).then(r => {\\n                let message = '<ol>'\\n                r.map(item => {\\n                    message += `<li> ${item.invoice} &nbsp; ${item.payer} &nbsp; ${item.total.toFixed(2)}</li>`;\\n                })\\n                message += '</ol>'\\n                frappe.msgprint({\\n                    title: __('Payment Allocations'),\\n                    message: message,\\n                });\\n            });\\n        },\\n        createGatePass(finalInvoiceItem) {\\n            let x = new frappe.ui.Dialog({\\n                title: 'Gate pass',\\n                fields: [{\\n                    label: 'Remarks',\\n                    fieldname: 'remarks',\\n                    fieldtype: 'Text'\\n                }],\\n                primary_action_label: 'Create Gate Pass',\\n                primary_action: (values) => {\\n                    console.log(values)\\n                    createGatePass({\\n                        invoice_finalization_name: finalInvoiceItem.name,\\n                        remarks: values.remarks\\n                    }).then(r => {\\n                        if (r) {\\n                            x.hide()\\n                            frappe.show_alert({\\n                                message: `Gate pass created`,\\n                                indicator: \\\"green\\\",\\n                            }, 5);\\n                        }\\n                    })\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action: (values) => {\\n                    x.hide()\\n                }\\n            });\\n            x.show();\\n\\n        },\\n        allocateInvoiceItem(finalInvoiceItem) {\\n            let parent = this;\\n\\n            function split_invoice(primary_invoice, split_args, row) {\\n                splitInvoice({\\n                    primary_invoice,\\n                    split_args,\\n                    row\\n                }).then((r) => {\\n                    console.log(r)\\n                    frappe.show_alert({\\n                            message: `Finalized Document allocation success`,\\n                            indicator: \\\"green\\\",\\n                        },\\n                        5\\n                    );\\n                })\\n            }\\n            let invoiceArr = []\\n            getFinalizedInvoiceItems({ name: finalInvoiceItem.name }).then(r => {\\n                console.log(r)\\n                invoiceArr = r;\\n            });\\n            prepareAllocationFieldList({ docname: finalInvoiceItem.name })\\n                .then((r) => {\\n                    let schemes = r;\\n                    let query_args = {\\n                        filters: { 'parent': [\\\"IN\\\", invoiceArr], }\\n                    }\\n                    new frappe.ui.form.MultiSelectDialog({\\n                        doctype: \\\"Sales Invoice Item\\\",\\n                        target: parent,\\n                        setters: {\\n                            item_code: \\\"\\\",\\n                            item_name: '',\\n                            amount: ''\\n                        },\\n                        get_query() {\\n                            return query_args;\\n                        },\\n                        primary_action_label: 'Allocate Item',\\n                        action(selections) {\\n                            // console.log(selections);\\n                            getSalesInvoiceItems({ name: selections[0] })\\n                                .then((r) => {\\n                                    let invoice = r.parent;\\n                                    let total = r.amount;\\n                                    var title = `${invoice} Total to allocate:  ${total}`;\\n                                    let x = new frappe.ui.Dialog({\\n                                        title: title,\\n                                        fields: schemes,\\n                                        primary_action_label: 'Allocate Invoices',\\n                                        primary_action: (values) => {\\n                                            let valuePayload = []\\n                                            const propertyNames = Object.keys(values);\\n                                            const propertyValues = Object.values(values);\\n                                            propertyNames.forEach(function(val, key) {\\n                                                valuePayload.push({ name: val, value: propertyValues[key] });\\n                                            });\\n                                            var entered_value = Object.values(values).reduce(function(a, b) {\\n                                                return a + b // returns object with property x\\n                                            }, 0)\\n                                            // console.log(entered_value,total)\\n                                            // \\\"700\\\" > \\\"300\\\"\\n                                            var diff = total - entered_value\\n                                            parseFloat(entered_value) > parseFloat(total) ? frappe.throw(`Sorry the values you entered differ with invoice by ${diff}`) : split_invoice(invoice, valuePayload, selections[0]);\\n                                        }\\n                                    });\\n                                    x.show();\\n                                });\\n                        }\\n                    });\\n                })\\n        },\\n        printFinalization(finalInvoiceItem) {\\n            // frappe.set_route('print', 'Invoice Finalization', finalInvoiceItem.name);\\n            var w = window.open(frappe.urllib.get_full_url(`app/print/Invoice Finalization/${finalInvoiceItem.name}` //+\\n                // \\\"doctype=\\\" + encodeURIComponent('Invoice Finalization') +\\n                // \\\"&name=\\\" + encodeURIComponent(finalInvoiceItem.name)\\n            ));\\n            // \\\"&format=Drug Prescription Label&_lang=en&no_letterhead=1&letterhead=No Letterhead&trigger_print=1\\\"\\n            if (!w) {\\n                msgprint(__(\\\"Please enable pop-ups\\\"));\\n                return;\\n            }\\n        },\\n        emailFinalizations(finalInvoiceItem) {\\n            let messageBody = `Dear Sir/Madam,<br/>Please find attached Finalized Invoice for appointment <b>${finalInvoiceItem.appointment_number}</b>, for your reference.\\\\\\n        The list of items is shown on the attached document.<br/> Any queries or Issues should be addressed to Moi Teaching and Referral Hospital Finance/Billing Department.<br/><br/>\\\\\\n        Regards <br/> Moi Teaching and Referal Hospital.`;\\n            emailInvoiceFinalizations({\\n                party_type: \\\"Customer\\\",\\n                party_name: this.customerName,\\n                message: messageBody,\\n                ref_type: \\\"Invoice Finalization\\\",\\n                ref_name: finalInvoiceItem.name\\n            }).then((result) => {\\n                if (result) {\\n                    frappe.show_alert({\\n                            message: `Finalized Document Sent to email Queue`,\\n                            indicator: \\\"green\\\",\\n                        },\\n                        5\\n                    );\\n                }\\n            });\\n        },\\n        getFinalizations() {\\n            //  this.$store.dispatch(\\\"patientAccounts1/fetchInvoiceFinalizations\\\", this.patientName);\\n            getInvoiceFinalizations(this.patientName)\\n                .then((result) => {\\n                    if (result) {\\n                        this.invoiceFInalization = result;\\n                    }\\n                });\\n        }\\n    },\\n    watch: {\\n        appointment_number() {\\n            this.getFinalizations();\\n        },\\n        inpatient_record() {\\n            this.getFinalizations();\\n        }\\n    },\\n    created() {\\n        // this.$store.registerModule('patientAccounts1', patientAccountModule);\\n        this.getFinalizations();\\n    },\\n    filters: {\\n        // Filter definitions\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n}\\n</script>\\n\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (false) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPatientInsuranceSchemes, updatePatientInsuranceSchemeLimits } from \"../../services/patient_chart/accounts.js\";\n\nimport {\n    savePatientScheme\n} from '../../services/accounts/patient.js'\nconst __vue_script__ = {\n    name: 'Schemes',\n    props: {\n        patient_number: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        customerNumber: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n    },\n    data() {\n        return {\n            insuranceSchemes: undefined\n        };\n    },\n    methods: {\n        updateScheme(schemeItem) {\n            const parent = this;\n            frappe.prompt([\n                {\n                        label: 'Customer Group',\n                        fieldname: 'scheme_name',\n                        fieldtype: 'Link',\n                        options: 'Customer Group',\n                        // reqd: 1\n                         default: schemeItem.scheme,\n                    },\n                {\n                    label: 'Inpatient Limit',\n                    fieldname: 'inpatient_limit',\n                    fieldtype: 'Currency',\n                    default: schemeItem.inpatient_limit || 10000000,\n\n                },\n                {\n                    label: 'Outpatient Limit',\n                    fieldname: 'outpatient_limit',\n                    fieldtype: 'Currency',\n                    default: schemeItem.outpatient_limit || 10000000,\n\n                },\n                 {\n                    label: 'Outpatient Balance',\n                    fieldname: 'outpatient_balance',\n                    fieldtype: 'Currency',\n                    default: schemeItem.outpatient_balance || 10000000,\n\n                },\n                 {\n                    label: 'Inpatient Balance',\n                    fieldname: 'inpatient_balance',\n                    fieldtype: 'Currency',\n                    default: schemeItem.inpatient_balance || 10000000,\n\n                },\n            ], (values) => {\n                updatePatientInsuranceSchemeLimits({\n                    docname:schemeItem.name,\n                    scheme_name:values.scheme_name,\n                    op_limit: parseFloat(values.outpatient_limit) > 0 ? parseFloat(values.outpatient_limit) : 0,\n                    ip_limit: parseFloat(values.inpatient_limit) > 0 ? parseFloat(values.inpatient_limit) : 0,\n                    op_balance: parseFloat(values.outpatient_balance) > 0 ? parseFloat(values.outpatient_balance) : 0,\n                    ip_balance: parseFloat(values.inpatient_balance) > 0 ? parseFloat(values.inpatient_balance) : 0,\n                }).then(r => {\n                    parent.fetchCustomerSchemes();\n                    frappe.show_alert({\n                        message: `Limits Updated`,\n                        indicator: 'green'\n                    }, 5);\n                });\n                // console.log(values.outpatient_limit, values.inpatient_limit);\n            })\n        },\n        addScheme() {\n            const parent = this;\n            let d = new frappe.ui.Dialog({\n                title: 'Add Customer Scheme',\n                fields: [{\n                        label: 'Customer Group',\n                        fieldname: 'scheme_name',\n                        fieldtype: 'Link',\n                        options: 'Customer Group',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Member Number',\n                        fieldname: 'member_number',\n                        fieldtype: 'Data',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Principal Member',\n                        fieldname: 'principal_member',\n                        fieldtype: 'Link',\n                        options: 'Customer',\n                        reqd: 1,\n                        default: parent.customerNumber\n                    },\n                    {\n                        label: 'Relationship to Principal',\n                        fieldname: 'relationship_to_principal',\n                        fieldtype: 'Select',\n                        options: ['Self', 'Spouse', 'Child'],\n                        reqd: 1\n                    },\n                    {\n                        label: 'Inpatient Limit',\n                        fieldname: 'inpatient_limit',\n                        fieldtype: 'Currency',\n                        reqd: 1,\n                        default: 10000000,\n\n                    },\n                    {\n                        label: 'Outpatient Limit',\n                        fieldname: 'outpatient_limit',\n                        fieldtype: 'Currency',\n                        reqd: 1,\n                        default: 10000000,\n                    }\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    savePatientScheme({\n                        patient_name: parent.patient_number,\n                        scheme_name: values.scheme_name,\n                        member_number: values.member_number,\n                        principal_member: values.principal_member,\n                        relationship_to_principal: values.relationship_to_principal,\n                        inpatient_limit: values.inpatient_limit,\n                        outpatient_limit: values.outpatient_limit\n                    }).then(r => {\n                        parent.fetchCustomerSchemes();\n                        frappe.show_alert({\n                            message: `Patient added to scheme`,\n                            indicator: 'green'\n                        }, 5);\n                    })\n                    d.hide();\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action() {\n                    d.hide();\n                }\n            });\n\n            d.show();\n\n        },\n        fetchCustomerSchemes() {\n            getPatientInsuranceSchemes({\n                patient_number: this.patient_number,\n            }).then((result) => {\n                if (result) {\n                    this.insuranceSchemes = result;\n                }\n            });\n        },\n    },\n    watch: {\n        patient_number() {\n            this.fetchCustomerSchemes();\n        },\n    },\n    created() {\n        this.fetchCustomerSchemes();\n    },\n    filters: {\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"flex\", \"justify-content\": \"flex-end\" }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { size: \"sm\", variant: \"primary\" },\n                        on: { click: _vm.addScheme }\n                      },\n                      [_vm._v(\"Add \")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"table\",\n              { staticClass: \"table table-striped table-bordered\" },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\"th\", [_vm._v(\"Scheme\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Member Number\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Relationship to Principal\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Inpatient Limit\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Outpatient Limit\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Action\")])\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _vm._l(_vm.insuranceSchemes, function(schemeItem) {\n                  return _c(\"tr\", { key: schemeItem.name }, [\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(_vm._s(_vm._f(\"Upper\")(schemeItem.scheme)))\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(schemeItem.member_number))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\" \" + _vm._s(schemeItem.relationship_to_principal))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"numberWithCommas\")(\n                              schemeItem.inpatient_limit.toFixed(2)\n                            )\n                          )\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"numberWithCommas\")(\n                              schemeItem.outpatient_limit.toFixed(2)\n                            )\n                          )\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"td\",\n                      [\n                        _c(\n                          \"b-button\",\n                          {\n                            staticStyle: { \"margin-right\": \"2px\" },\n                            attrs: { size: \"sm\", variant: \"primary\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.updateScheme(schemeItem)\n                              }\n                            }\n                          },\n                          [_vm._v(\"Edit\")]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                })\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = undefined\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n        <b-row>\\n            <b-col>\\n                <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <b-button style=\\\"margin-right:2px;\\\" size=\\\"sm\\\" variant=\\\"primary\\\" @click=\\\"addScheme\\\">Add </b-button>\\n                    </b-button-group>\\n                </div>\\n            </b-col>\\n        </b-row>\\n        <b-row>\\n            <b-col>\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Scheme</th>\\n                            <th>Member Number</th>\\n                            <!-- <th>Mrincipal Member</th> -->\\n                            <th>Relationship to Principal</th>\\n                            <th>Inpatient Limit</th>\\n                            <th>Outpatient Limit</th>\\n                            <th>Action</th>\\n                            <!-- <th>Dental Limit</th> -->\\n                            <!-- <th>Optical Limit</th> -->\\n                            <!-- <th>Maternity Limit</th> -->\\n                            <!-- <th>Last Expense Limit</th> -->\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"schemeItem in insuranceSchemes\\\" :key=\\\"schemeItem.name\\\">\\n                        <td><span>{{ schemeItem.scheme | Upper}}</span> </td>\\n                        <td>{{ schemeItem.member_number }}</td>\\n                        <!-- <td>\\n                           {{ schemeItem.principal_member }}\\n                        </td> -->\\n                        <td> {{ schemeItem.relationship_to_principal }}</td>\\n                        <td style=\\\"text-align: right;\\\"><span>{{ schemeItem.inpatient_limit.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <td style=\\\"text-align: right;\\\"><span>{{ schemeItem.outpatient_limit.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <td>\\n                            <b-button style=\\\"margin-right:2px;\\\" size=\\\"sm\\\" variant=\\\"primary\\\" @click=\\\"updateScheme(schemeItem)\\\">Edit</b-button>\\n                        </td>\\n                        <!-- <td style=\\\"text-align: right;\\\">{{ schemeItem.dental_limit.toFixed(2) | numberWithCommas }}</td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\">{{ schemeItem.optical_limit.toFixed(2) | numberWithCommas }}</td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ schemeItem.maternity_limit.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ schemeItem.last_expense_limit.toFixed(2) | numberWithCommas}}</span> </td> -->\\n    \\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n    </div>\\n</template>\\n\\n<script>\\nimport { getPatientInsuranceSchemes, updatePatientInsuranceSchemeLimits } from \\\"../../services/patient_chart/accounts.js\\\";\\n\\nimport {\\n    savePatientScheme\\n} from '../../services/accounts/patient.js'\\nexport default {\\n    name: 'Schemes',\\n    props: {\\n        patient_number: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        customerNumber: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n    },\\n    data() {\\n        return {\\n            insuranceSchemes: undefined\\n        };\\n    },\\n    methods: {\\n        updateScheme(schemeItem) {\\n            const parent = this;\\n            frappe.prompt([\\n                {\\n                        label: 'Customer Group',\\n                        fieldname: 'scheme_name',\\n                        fieldtype: 'Link',\\n                        options: 'Customer Group',\\n                        // reqd: 1\\n                         default: schemeItem.scheme,\\n                    },\\n                {\\n                    label: 'Inpatient Limit',\\n                    fieldname: 'inpatient_limit',\\n                    fieldtype: 'Currency',\\n                    default: schemeItem.inpatient_limit || 10000000,\\n\\n                },\\n                {\\n                    label: 'Outpatient Limit',\\n                    fieldname: 'outpatient_limit',\\n                    fieldtype: 'Currency',\\n                    default: schemeItem.outpatient_limit || 10000000,\\n\\n                },\\n                 {\\n                    label: 'Outpatient Balance',\\n                    fieldname: 'outpatient_balance',\\n                    fieldtype: 'Currency',\\n                    default: schemeItem.outpatient_balance || 10000000,\\n\\n                },\\n                 {\\n                    label: 'Inpatient Balance',\\n                    fieldname: 'inpatient_balance',\\n                    fieldtype: 'Currency',\\n                    default: schemeItem.inpatient_balance || 10000000,\\n\\n                },\\n            ], (values) => {\\n                updatePatientInsuranceSchemeLimits({\\n                    docname:schemeItem.name,\\n                    scheme_name:values.scheme_name,\\n                    op_limit: parseFloat(values.outpatient_limit) > 0 ? parseFloat(values.outpatient_limit) : 0,\\n                    ip_limit: parseFloat(values.inpatient_limit) > 0 ? parseFloat(values.inpatient_limit) : 0,\\n                    op_balance: parseFloat(values.outpatient_balance) > 0 ? parseFloat(values.outpatient_balance) : 0,\\n                    ip_balance: parseFloat(values.inpatient_balance) > 0 ? parseFloat(values.inpatient_balance) : 0,\\n                }).then(r => {\\n                    parent.fetchCustomerSchemes();\\n                    frappe.show_alert({\\n                        message: `Limits Updated`,\\n                        indicator: 'green'\\n                    }, 5);\\n                });\\n                // console.log(values.outpatient_limit, values.inpatient_limit);\\n            })\\n        },\\n        addScheme() {\\n            const parent = this;\\n            let d = new frappe.ui.Dialog({\\n                title: 'Add Customer Scheme',\\n                fields: [{\\n                        label: 'Customer Group',\\n                        fieldname: 'scheme_name',\\n                        fieldtype: 'Link',\\n                        options: 'Customer Group',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Member Number',\\n                        fieldname: 'member_number',\\n                        fieldtype: 'Data',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Principal Member',\\n                        fieldname: 'principal_member',\\n                        fieldtype: 'Link',\\n                        options: 'Customer',\\n                        reqd: 1,\\n                        default: parent.customerNumber\\n                    },\\n                    {\\n                        label: 'Relationship to Principal',\\n                        fieldname: 'relationship_to_principal',\\n                        fieldtype: 'Select',\\n                        options: ['Self', 'Spouse', 'Child'],\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Inpatient Limit',\\n                        fieldname: 'inpatient_limit',\\n                        fieldtype: 'Currency',\\n                        reqd: 1,\\n                        default: 10000000,\\n\\n                    },\\n                    {\\n                        label: 'Outpatient Limit',\\n                        fieldname: 'outpatient_limit',\\n                        fieldtype: 'Currency',\\n                        reqd: 1,\\n                        default: 10000000,\\n                    }\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action(values) {\\n                    savePatientScheme({\\n                        patient_name: parent.patient_number,\\n                        scheme_name: values.scheme_name,\\n                        member_number: values.member_number,\\n                        principal_member: values.principal_member,\\n                        relationship_to_principal: values.relationship_to_principal,\\n                        inpatient_limit: values.inpatient_limit,\\n                        outpatient_limit: values.outpatient_limit\\n                    }).then(r => {\\n                        parent.fetchCustomerSchemes();\\n                        frappe.show_alert({\\n                            message: `Patient added to scheme`,\\n                            indicator: 'green'\\n                        }, 5);\\n                    })\\n                    d.hide();\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action() {\\n                    d.hide();\\n                }\\n            });\\n\\n            d.show();\\n\\n        },\\n        fetchCustomerSchemes() {\\n            getPatientInsuranceSchemes({\\n                patient_number: this.patient_number,\\n            }).then((result) => {\\n                if (result) {\\n                    this.insuranceSchemes = result;\\n                }\\n            });\\n        },\\n    },\\n    watch: {\\n        patient_number() {\\n            this.fetchCustomerSchemes();\\n        },\\n    },\\n    created() {\\n        this.fetchCustomerSchemes();\\n    },\\n    filters: {\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n}\\n</script>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (false) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    getPatientProcedues,\n    getProcedureChargess,\n    appendProcedureCharges,\n    submitProcedureCharges\n} from \"../../services/accounts/patient.js\";\n\nconst __vue_script__ = {\n    name: 'Procedures',\n    props: {\n        patient_number: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n        customerNumber: {\n            type: String,\n            default: \" \",\n            required: true,\n        },\n    },\n    data() {\n        return {\n            procedures: undefined,\n            procedureCharges: undefined,\n\n        };\n    },\n    methods: {\n        invoiceItem(procedureItem, chargeItem) {\n            let d = new frappe.ui.Dialog({\n                title: `Add Charge Item for ${chargeItem.name}`,\n                fields: [{\n                        label: 'Item',\n                        fieldname: 'item',\n                        fieldtype: 'Data',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Unit of Measure',\n                        fieldname: 'unit_of_measure',\n                        fieldtype: 'Data',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Unit Price',\n                        fieldname: 'unit_price',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Duration',\n                        fieldname: 'duration',\n                        fieldtype: 'Data',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Percentage',\n                        fieldname: 'percentage',\n                        fieldtype: 'Data',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Percentage Depends On',\n                        fieldname: 'percentage_depends_on',\n                        fieldtype: 'Data',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Amount',\n                        fieldname: 'amount',\n                        fieldtype: 'Currency',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Provider Fee',\n                        fieldname: 'provider_fee',\n                        fieldtype: 'Check',\n                        reqd: 1\n                    },\n                    {\n                        label: 'Provider',\n                        fieldname: 'provider',\n                        fieldtype: 'Link',\n                        options: 'Healthcare Practitioner',\n                        reqd: 1\n                        // default:salesOrderItem.parent,\n                        // readonly:0,\n                        // filters: { customer: parent.customerNumber,status: ['not in', ['Completed','Cancelled'] ]},\n                    },\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    appendProcedureCharges({ procedure_charge_name: chargeItem.name, payload: values }).then(r => {\n                        console.log(JSON.stringify(r));\n                    })\n                    d.hide();\n                }\n            });\n\n            d.show();\n        },\n        submitCharges(procedureItem) {\n            let parent = this;\n            frappe.confirm('Confirm Submission?',\n                () => {\n                    // \n                    getProcedureChargess({ procedure_id: procedureItem.name }).then(r => {\n                        //parent.procedureCharges = r;\n                        //console.log(JSON.stringify(parent.procedureCharges));\n                        submitProcedureCharges({procedure_charge_name:r.name}).then(r=>{});\n                    })\n                    // console.log(JSON.stringify(procedureItem));\n                }, () => {\n                    // action to perform if No is selected\n                })\n\n        },\n        checkForCharges(procedureItem) {\n            getProcedureChargess({ procedure_id: procedureItem.name }).then(r => {\n                this.procedureCharges = r;\n                console.log(JSON.stringify(r))\n                this.invoiceItem(procedureItem, r);\n            })\n        },\n        getProcedures() {\n            getPatientProcedues({ patient_number: this.patient_number }).then(r => {\n                this.procedures = r;\n            })\n        }\n    },\n    created() {\n        this.getProcedures();\n    },\n    filters: {\n        // Filter definitions\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"div\",\n              {\n                staticStyle: { display: \"flex\", \"justify-content\": \"flex-end\" }\n              },\n              [\n                _c(\n                  \"b-button-group\",\n                  {\n                    staticStyle: { \"margin-right\": \"16px\", \"margin-top\": \"4px\" }\n                  },\n                  [\n                    _c(\n                      \"b-button\",\n                      {\n                        staticStyle: { \"margin-right\": \"2px\" },\n                        attrs: { size: \"sm\", variant: \"primary\" },\n                        on: { click: _vm.getProcedures }\n                      },\n                      [_vm._v(\"Refresh \")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"table\",\n              { staticClass: \"table table table-striped table-bordered\" },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\"th\", [_vm._v(\"Date\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Serial\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Procedure\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Status\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Action\")])\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _vm._l(_vm.procedures, function(procedureItem) {\n                  return _c(\"tr\", { key: procedureItem.name }, [\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(_vm._f(\"dateFormat\")(procedureItem.creation))\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [_vm._v(_vm._s(procedureItem.name))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(_vm._s(procedureItem.procedure_template))\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(procedureItem.status))]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"td\",\n                      [\n                        procedureItem.invoiced === 0\n                          ? _c(\n                              \"b-btn\",\n                              {\n                                attrs: { variant: \"primary\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.checkForCharges(procedureItem)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Invoice\")]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        procedureItem.invoiced === 0\n                          ? _c(\n                              \"b-btn\",\n                              {\n                                attrs: { variant: \"primary\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.submitCharges(procedureItem)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Submit\")]\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ])\n                })\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-85b43874_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"Procedures.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-85b43874\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n        <!-- {{ patient_number }} {{ customerNumber }} {{ procedures }} -->\\n        <b-row>\\n            <b-col>\\n                <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                    <b-button-group style=\\\"margin-right:16px;margin-top:4px;\\\">\\n                        <b-button style=\\\"margin-right:2px;\\\" size=\\\"sm\\\" variant=\\\"primary\\\" @click=\\\"getProcedures\\\">Refresh </b-button>\\n                    </b-button-group>\\n                </div>\\n            </b-col>\\n        </b-row>\\n        <!-- {{ procedureCharges }} -->\\n        <b-row>\\n            <b-col>\\n                <table class=\\\"table table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <!-- <th>Select</th> -->\\n                            <th>Date</th>\\n                            <th>Serial</th>\\n                            <th>Procedure</th>\\n                            <th>Status</th>\\n                            <th>Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"procedureItem in procedures\\\" :key=\\\"procedureItem.name\\\">\\n                        <td><span>{{ procedureItem.creation | dateFormat }}</span> </td>\\n                        <td><span>{{ procedureItem.name }}</span> </td>\\n                        <td><span>{{ procedureItem.procedure_template }}</span> </td>\\n                        <td>{{ procedureItem.status }}</td>\\n    \\n                        <td>\\n                            <b-btn v-if=\\\"procedureItem.invoiced === 0\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"checkForCharges(procedureItem)\\\">Invoice</b-btn>\\n                            <b-btn v-if=\\\"procedureItem.invoiced === 0\\\" variant=\\\"primary\\\" size=\\\"sm\\\" @click=\\\"submitCharges(procedureItem)\\\">Submit</b-btn>\\n    \\n                        </td>\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n    </div>\\n</template>\\n\\n<script>\\nimport {\\n    getPatientProcedues,\\n    getProcedureChargess,\\n    appendProcedureCharges,\\n    submitProcedureCharges\\n} from \\\"../../services/accounts/patient.js\\\";\\n\\nexport default {\\n    name: 'Procedures',\\n    props: {\\n        patient_number: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n        customerNumber: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        },\\n    },\\n    data() {\\n        return {\\n            procedures: undefined,\\n            procedureCharges: undefined,\\n\\n        };\\n    },\\n    methods: {\\n        invoiceItem(procedureItem, chargeItem) {\\n            let d = new frappe.ui.Dialog({\\n                title: `Add Charge Item for ${chargeItem.name}`,\\n                fields: [{\\n                        label: 'Item',\\n                        fieldname: 'item',\\n                        fieldtype: 'Data',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Unit of Measure',\\n                        fieldname: 'unit_of_measure',\\n                        fieldtype: 'Data',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Unit Price',\\n                        fieldname: 'unit_price',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Duration',\\n                        fieldname: 'duration',\\n                        fieldtype: 'Data',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Percentage',\\n                        fieldname: 'percentage',\\n                        fieldtype: 'Data',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Percentage Depends On',\\n                        fieldname: 'percentage_depends_on',\\n                        fieldtype: 'Data',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Amount',\\n                        fieldname: 'amount',\\n                        fieldtype: 'Currency',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Provider Fee',\\n                        fieldname: 'provider_fee',\\n                        fieldtype: 'Check',\\n                        reqd: 1\\n                    },\\n                    {\\n                        label: 'Provider',\\n                        fieldname: 'provider',\\n                        fieldtype: 'Link',\\n                        options: 'Healthcare Practitioner',\\n                        reqd: 1\\n                        // default:salesOrderItem.parent,\\n                        // readonly:0,\\n                        // filters: { customer: parent.customerNumber,status: ['not in', ['Completed','Cancelled'] ]},\\n                    },\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action(values) {\\n                    appendProcedureCharges({ procedure_charge_name: chargeItem.name, payload: values }).then(r => {\\n                        console.log(JSON.stringify(r));\\n                    })\\n                    d.hide();\\n                }\\n            });\\n\\n            d.show();\\n        },\\n        submitCharges(procedureItem) {\\n            let parent = this;\\n            frappe.confirm('Confirm Submission?',\\n                () => {\\n                    // \\n                    getProcedureChargess({ procedure_id: procedureItem.name }).then(r => {\\n                        //parent.procedureCharges = r;\\n                        //console.log(JSON.stringify(parent.procedureCharges));\\n                        submitProcedureCharges({procedure_charge_name:r.name}).then(r=>{});\\n                    })\\n                    // console.log(JSON.stringify(procedureItem));\\n                }, () => {\\n                    // action to perform if No is selected\\n                })\\n\\n        },\\n        checkForCharges(procedureItem) {\\n            getProcedureChargess({ procedure_id: procedureItem.name }).then(r => {\\n                this.procedureCharges = r;\\n                console.log(JSON.stringify(r))\\n                this.invoiceItem(procedureItem, r);\\n            })\\n        },\\n        getProcedures() {\\n            getPatientProcedues({ patient_number: this.patient_number }).then(r => {\\n                this.procedures = r;\\n            })\\n        }\\n    },\\n    created() {\\n        this.getProcedures();\\n    },\\n    filters: {\\n        // Filter definitions\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n}\\n</script>\\n\\n<style scoped>\\n\\n</style>\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getInsuranceSalesOrders, updateSalesOrderCustomer, sendSalesOrderToDraft, approvePreAuth, transitionSalesOrderToInvoice } from '../../services/accounts/patient.js'\nconst __vue_script__ = {\n    name: 'SalesOrderAuth',\n    props: {\n        patient_number: {\n            type: String,\n            default: \" \",\n            required: true,\n        }\n    },\n    data() {\n        return {\n            salesOrderItems: undefined,\n        };\n    },\n    methods: {\n        uploadFile(salesOrderName) {\n            const me = this;\n            new frappe.ui.FileUploaderCustom({\n                title: \"test\",\n                doctype: \"Sales Order\",\n                docname: salesOrderName,\n                on_success(file_doc) {\n                    approvePreAuth(salesOrderName).then((res) => {\n                        transitionSalesOrderToInvoice({ sales_order_name: res }).then(() => {\n                            frappe.show_alert({\n                                message: `Successfully authorized`,\n                                indicator: 'green'\n                            }, 15);\n                        })\n\n                    })\n                },\n            });\n\n        },\n        assignPayer(salesOrderItem) {\n            let parent = this;\n            let dialog = new frappe.ui.Dialog({\n                title: `Change Payer for ${salesOrderItem.parent}`,\n                fields: [{\n                        label: 'Select Action',\n                        fieldname: 'action',\n                        fieldtype: 'Select',\n                        options: [\"Assign Customer\", \"Send to draft\"],\n                        default: [\"Assign Customer\", \"Send to draft\"],\n                        reqd: true,\n                    },\n                    {\n                        label: 'Payer Group',\n                        fieldname: 'customer_group_name',\n                        mandatory_depends_on: 'eval: doc.action == \"Assign Customer\"',\n                        depends_on: 'eval: doc.action == \"Assign Customer\"',\n                        fieldtype: 'Link',\n                        options: 'Customer Group',\n                    },\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    if (values.action == \"Assign Customer\") {\n                        updateSalesOrderCustomer({\n                            sales_order_name: salesOrderItem.parent,\n                            customer_group_name: values.customer_group_name\n                        }).then(m => {\n                            transitionSalesOrderToInvoice({ sales_order_name: salesOrderItem.parent }).then(() => {\n                            frappe.show_alert({\n                                message: `Successfully assigned customer`,\n                                indicator: 'green'\n                            }, 15);\n                        })\n                        });\n                    } else {\n                       sendSalesOrderToDraft({\n                            sales_order_name: salesOrderItem.parent,\n                        }).then(m => {\n                            frappe.show_alert({\n                                message: `Sales Order Sent To Draft`,\n                                indicator: 'green'\n                            }, 5);\n                        });\n                    }\n\n                    dialog.hide();\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action() {\n                    dialog.hide();\n                }\n            });\n            dialog.show();\n        },\n        fetchInsuranceSalesOrders() {\n            getInsuranceSalesOrders({ patient_name: this.patient_number }).then(r => {\n                this.salesOrderItems = r;\n            });\n        }\n    },\n    created() {\n        // this.fetchSalesOrders();\n        this.fetchInsuranceSalesOrders();\n    },\n    filters: {\n        // Filter definitions\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\"b-col\", [\n            _c(\n              \"table\",\n              { staticClass: \"table table table-striped table-bordered\" },\n              [\n                _c(\"thead\", [\n                  _c(\"tr\", [\n                    _c(\"th\", [_vm._v(\"Date\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Name\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Item\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Amount\")]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [_vm._v(\"Action\")])\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _vm._l(_vm.salesOrderItems, function(salesOrderItem) {\n                  return _c(\"tr\", { key: salesOrderItem.parent }, [\n                    _c(\"td\", [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(_vm._f(\"dateFormat\")(salesOrderItem.creation))\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [_vm._v(_vm._s(salesOrderItem.parent))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"span\", [_vm._v(_vm._s(salesOrderItem.item_code))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", { staticStyle: { \"text-align\": \"right\" } }, [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"numberWithCommas\")(\n                              salesOrderItem.amount.toFixed(2)\n                            )\n                          )\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\"div\", { staticClass: \"btn-group\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-primary dropdown-toggle\",\n                            attrs: {\n                              type: \"button\",\n                              \"data-toggle\": \"dropdown\",\n                              \"aria-haspopup\": \"true\",\n                              \"aria-expanded\": \"false\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                                    Select Actions\\n                                                  \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"dropdown-menu\" }, [\n                          _c(\n                            \"a\",\n                            {\n                              staticClass: \"dropdown-item\",\n                              attrs: { href: \"#\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.uploadFile(salesOrderItem.parent)\n                                }\n                              }\n                            },\n                            [_vm._v(\"Approve\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"a\",\n                            {\n                              staticClass: \"dropdown-item\",\n                              attrs: { href: \"#\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.assignPayer(salesOrderItem)\n                                }\n                              }\n                            },\n                            [_vm._v(\"Decline\")]\n                          )\n                        ])\n                      ])\n                    ])\n                  ])\n                })\n              ],\n              2\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = undefined\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <div>\\n        <b-row>\\n            <b-col>\\n                <table class=\\\"table table table-striped table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Date</th>\\n                            <th>Name</th>\\n                            <!-- <th>Status</th> -->\\n                            <th>Item</th>\\n                            <!-- <th>Qty</th>\\n                                            <th>Rate</th> -->\\n                            <th>Amount</th>\\n                            <th>Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tr v-for=\\\"salesOrderItem in salesOrderItems\\\" :key=\\\"salesOrderItem.parent\\\">\\n                        <td><span>{{ salesOrderItem.creation | dateFormat }}</span> </td>\\n                        <td><span>{{ salesOrderItem.parent }}</span> </td>\\n                        <!-- <td>{{ salesOrderItem.status }}</td> -->\\n                        <td><span>{{ salesOrderItem.item_code }}</span> </td>\\n                        <!-- <td><span>{{ salesOrderItem.qty }}</span> </td> -->\\n                        <!-- <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.rate.toFixed(2) | numberWithCommas }}</span> </td> -->\\n                        <td style=\\\"text-align: right;\\\"><span>{{ salesOrderItem.amount.toFixed(2) | numberWithCommas }}</span> </td>\\n                        <td>\\n                            <div class=\\\"btn-group\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                                        Select Actions\\n                                                      </button>\\n                                <div class=\\\"dropdown-menu\\\">\\n                                    <a class=\\\"dropdown-item\\\" @click=\\\"uploadFile(salesOrderItem.parent)\\\" href=\\\"#\\\">Approve</a>\\n                                    <a class=\\\"dropdown-item\\\" @click=\\\"assignPayer(salesOrderItem)\\\" href=\\\"#\\\">Decline</a>\\n                                </div>\\n    \\n                            </div>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </b-col>\\n        </b-row>\\n    </div>\\n</template>\\n\\n<script>\\nimport { getInsuranceSalesOrders, updateSalesOrderCustomer, sendSalesOrderToDraft, approvePreAuth, transitionSalesOrderToInvoice } from '../../services/accounts/patient.js'\\nexport default {\\n    name: 'SalesOrderAuth',\\n    props: {\\n        patient_number: {\\n            type: String,\\n            default: \\\" \\\",\\n            required: true,\\n        }\\n    },\\n    data() {\\n        return {\\n            salesOrderItems: undefined,\\n        };\\n    },\\n    methods: {\\n        uploadFile(salesOrderName) {\\n            const me = this;\\n            new frappe.ui.FileUploaderCustom({\\n                title: \\\"test\\\",\\n                doctype: \\\"Sales Order\\\",\\n                docname: salesOrderName,\\n                on_success(file_doc) {\\n                    approvePreAuth(salesOrderName).then((res) => {\\n                        transitionSalesOrderToInvoice({ sales_order_name: res }).then(() => {\\n                            frappe.show_alert({\\n                                message: `Successfully authorized`,\\n                                indicator: 'green'\\n                            }, 15);\\n                        })\\n\\n                    })\\n                },\\n            });\\n\\n        },\\n        assignPayer(salesOrderItem) {\\n            let parent = this;\\n            let dialog = new frappe.ui.Dialog({\\n                title: `Change Payer for ${salesOrderItem.parent}`,\\n                fields: [{\\n                        label: 'Select Action',\\n                        fieldname: 'action',\\n                        fieldtype: 'Select',\\n                        options: [\\\"Assign Customer\\\", \\\"Send to draft\\\"],\\n                        default: [\\\"Assign Customer\\\", \\\"Send to draft\\\"],\\n                        reqd: true,\\n                    },\\n                    {\\n                        label: 'Payer Group',\\n                        fieldname: 'customer_group_name',\\n                        mandatory_depends_on: 'eval: doc.action == \\\"Assign Customer\\\"',\\n                        depends_on: 'eval: doc.action == \\\"Assign Customer\\\"',\\n                        fieldtype: 'Link',\\n                        options: 'Customer Group',\\n                    },\\n                ],\\n                primary_action_label: 'Submit',\\n                primary_action(values) {\\n                    if (values.action == \\\"Assign Customer\\\") {\\n                        updateSalesOrderCustomer({\\n                            sales_order_name: salesOrderItem.parent,\\n                            customer_group_name: values.customer_group_name\\n                        }).then(m => {\\n                            transitionSalesOrderToInvoice({ sales_order_name: salesOrderItem.parent }).then(() => {\\n                            frappe.show_alert({\\n                                message: `Successfully assigned customer`,\\n                                indicator: 'green'\\n                            }, 15);\\n                        })\\n                        });\\n                    } else {\\n                       sendSalesOrderToDraft({\\n                            sales_order_name: salesOrderItem.parent,\\n                        }).then(m => {\\n                            frappe.show_alert({\\n                                message: `Sales Order Sent To Draft`,\\n                                indicator: 'green'\\n                            }, 5);\\n                        });\\n                    }\\n\\n                    dialog.hide();\\n                },\\n                secondary_action_label: 'Cancel',\\n                secondary_action() {\\n                    dialog.hide();\\n                }\\n            });\\n            dialog.show();\\n        },\\n        fetchInsuranceSalesOrders() {\\n            getInsuranceSalesOrders({ patient_name: this.patient_number }).then(r => {\\n                this.salesOrderItems = r;\\n            });\\n        }\\n    },\\n    created() {\\n        // this.fetchSalesOrders();\\n        this.fetchInsuranceSalesOrders();\\n    },\\n    filters: {\\n        // Filter definitions\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n}\\n</script>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (false) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "export const api = ({ method, args = {}, freeze = true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            freeze,\n            callback: ({ message }) => resolve(message),\n            error: reject,\n        })\n    );\n\nexport const getPatientDashboardData = ({ patient, customer}) =>\n    api({\n        method: \"billing.billing.api.customer.dashboard.get_balance_dashboard\",\n        args: {\n            patient,\n            customer\n        },\n    });\n\n", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getPatientDashboardData } from \"./../services/customer/dashboard.js\";\nconst __vue_script__ = {\n  data() {\n    return {\n      result: {},\n    };\n  },\n  props: {\n    patient: { type: String },\n    customer: {type:String},\n    collapsed: {type: Boolean},\n  },\n  methods: {\n    getPatientData(data) {\n      getPatientDashboardData(data).then((response) => {\n\n        if(!response.total_bill){\n          response.total_bill =0;\n        }\n\n        if(!response.unallocated_cash){\n          response.unallocated_cash =0;\n        }\n\n         if(!response.sales_orders){\n          response.sales_orders =[];\n        }\n\n        this.result= response;\n\n      });\n    },\n  },\n\n  mounted() {\n    if (this.patient) {\n      this.getPatientData({ patient: this.patient });\n    } else if (this.customer) {\n      this.getPatientData({ customer: this.customer });\n    } else if (window.cur_frm && window.cur_frm.doc.customer) {\n      this.getPatientData({ customer: window.cur_frm.doc.customer });\n    }else if (window.cur_frm && cur_frm.doc.patient) {\n      this.getPatientData({ patient: window.cur_frm.doc.patient });\n    }\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-card\",\n        [\n          _c(\"b-container\", [\n            _c(\n              \"div\",\n              [\n                _c(\n                  \"b-container\",\n                  {\n                    directives: [\n                      {\n                        name: \"b-toggle\",\n                        rawName: \"v-b-toggle.collapse-1\",\n                        modifiers: { \"collapse-1\": true }\n                      }\n                    ]\n                  },\n                  [\n                    _vm.result.sales_orders && _vm.result.sales_orders.length\n                      ? _c(\"b-row\", [\n                          _vm._v(\n                            \"\\n            Bill for Appointment:\\n            \"\n                          ),\n                          _vm.result.sales_orders && _vm.result.sales_orders[0]\n                            ? _c(\"b\", [\n                                _vm._v(\n                                  _vm._s(_vm.result.sales_orders[0].document_id)\n                                )\n                              ])\n                            : _c(\"b\", [_vm._v(\"0\")])\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"b-row\", [\n                      _vm._v(\n                        \"\\n           Total  Customer Unallocated payments : \"\n                      ),\n                      _c(\"b\", [\n                        _vm._v(\n                          \"KES \" + _vm._s(_vm.result.unallocated_cash || 0)\n                        )\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _vm.result.sales_orders\n                      ? _c(\"b-row\", [\n                          _vm._v(\"\\n           Total Bill Amount: \"),\n                          _c(\"b\", [\n                            _vm._v(\n                              \" KES \" +\n                                _vm._s(\n                                  _vm.result.sales_orders\n                                    .map(function(item) {\n                                      return item.total\n                                    })\n                                    .reduce(function(x, y) {\n                                      return x + y\n                                    }, 0) || 0\n                                )\n                            )\n                          ])\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.result.total_bill > _vm.result.unallocated_cash\n                      ? _c(\"b-row\", [\n                          _vm._v(\"\\n            Amount pending payment:\"),\n                          _c(\"b\", { staticStyle: { color: \"red\" } }, [\n                            _vm._v(\n                              \"\\n              KES \" +\n                                _vm._s(\n                                  _vm.result.sales_orders\n                                    .filter(function(item) {\n                                      return item.workflow_state == \"Posted\"\n                                    })\n                                    .map(function(item) {\n                                      return item.total\n                                    })\n                                    .reduce(function(x, y) {\n                                      return x + y\n                                    }, 0)\n                                )\n                            )\n                          ])\n                        ])\n                      : _c(\"b-row\", [\n                          _vm._v(\n                            \"\\n            Over Payment by:\\n            \"\n                          ),\n                          _c(\"b\", { staticStyle: { color: \"green\" } }, [\n                            _vm._v(\n                              \"\\n              KES \" +\n                                _vm._s(\n                                  _vm.result.unallocated_cash -\n                                    _vm.result.total_bill\n                                )\n                            )\n                          ])\n                        ]),\n                    _vm._v(\" \"),\n                    _vm.result.sales_orders && _vm.result.sales_orders.length\n                      ? _c(\"b-row\", [\n                          _vm._v(\"\\n            Items:\\n            \"),\n                          _c(\"b\", [\n                            _vm._v(_vm._s(_vm.result.sales_orders.length))\n                          ])\n                        ])\n                      : _vm._e()\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"b-collapse\",\n                  {\n                    staticClass: \"mt-2\",\n                    attrs: { visible: _vm.collapsed, id: \"collapse-1\" }\n                  },\n                  [\n                    _c(\n                      \"b-row\",\n                      [_c(\"b-col\"), _vm._v(\" \"), _c(\"h4\", [_vm._v(\"Paid\")])],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"hr\"),\n                    _vm._v(\" \"),\n                    _vm.result.sales_orders && _vm.result.sales_orders.length\n                      ? _c(\n                          \"b-row\",\n                          [\n                            _c(\"b-table\", {\n                              staticStyle: { width: \"100% !important\" },\n                              attrs: {\n                                items: _vm.result.sales_orders.filter(function(\n                                  item\n                                ) {\n                                  return item.workflow_state == \"Completed\"\n                                }),\n                                striped: \"\",\n                                outlined: \"\",\n                                bordered: \"\",\n                                \"head-row-variant\": \"secondary\",\n                                \"sticky-header\": \"400px\",\n                                responsive: \"sm\",\n                                \"empty-text\": \"No items have been paid\",\n                                \"empty-filtered-text\":\n                                  \"No items have been paid\",\n                                \"show-empty\": true,\n                                hover: \"\"\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"cell(index)\",\n                                    fn: function(data) {\n                                      return [\n                                        _vm._v(\n                                          \"\\n              \" +\n                                            _vm._s(data.index + 1) +\n                                            \"\\n            \"\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                false,\n                                300415311\n                              )\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-row\",\n                      [\n                        _c(\"b-col\"),\n                        _vm._v(\" \"),\n                        _vm.result.sales_orders\n                          ? _c(\"h4\", [\n                              _vm._v(\n                                \"Total \" +\n                                  _vm._s(\n                                    _vm.result.sales_orders\n                                      .filter(function(item) {\n                                        return (\n                                          item.workflow_state == \"Completed\"\n                                        )\n                                      })\n                                      .map(function(item) {\n                                        return item.total\n                                      })\n                                      .reduce(function(x, y) {\n                                        return x + y\n                                      }, 0) || 0\n                                  )\n                              )\n                            ])\n                          : _vm._e()\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"hr\"),\n                    _vm._v(\" \"),\n                    _c(\"br\"),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-row\",\n                      [_c(\"b-col\"), _vm._v(\" \"), _c(\"h4\", [_vm._v(\"Unpaid\")])],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"hr\"),\n                    _vm._v(\" \"),\n                    _vm.result.sales_orders && _vm.result.sales_orders.length\n                      ? _c(\n                          \"b-row\",\n                          [\n                            _c(\"b-table\", {\n                              staticStyle: { width: \"100% !important\" },\n                              attrs: {\n                                items: _vm.result.sales_orders.filter(function(\n                                  item\n                                ) {\n                                  return item.workflow_state == \"Posted\"\n                                }),\n                                hover: \"\",\n                                striped: \"\",\n                                outlined: \"\",\n                                bordered: \"\",\n                                \"head-row-variant\": \"secondary\",\n                                \"sticky-header\": \"400px\",\n                                responsive: \"sm\",\n                                \"empty-text\": \"No items pending payments\",\n                                \"empty-filtered-text\": \"No pending payments\",\n                                \"show-empty\": true\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"cell(index)\",\n                                    fn: function(data) {\n                                      return [\n                                        _vm._v(\n                                          \"\\n              \" +\n                                            _vm._s(data.index + 1) +\n                                            \"\\n            \"\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                false,\n                                300415311\n                              )\n                            })\n                          ],\n                          1\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-row\",\n                      [\n                        _c(\"b-col\"),\n                        _vm._v(\" \"),\n                        _c(\"h4\", [\n                          _vm._v(\n                            \"Total \" +\n                              _vm._s(\n                                _vm.result.sales_orders\n                                  .filter(function(item) {\n                                    return item.workflow_state == \"Posted\"\n                                  })\n                                  .map(function(item) {\n                                    return item.total\n                                  })\n                                  .reduce(function(x, y) {\n                                    return x + y\n                                  }, 0) || 0\n                              )\n                          )\n                        ])\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"hr\"),\n                    _vm._v(\" \"),\n                    _c(\"br\")\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-a70ddbd0_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"Main.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n    <b-card>\\n      <b-container>\\n        <div>\\n          <b-container v-b-toggle.collapse-1>\\n            <b-row v-if=\\\"result.sales_orders && result.sales_orders.length\\\">\\n              Bill for Appointment:\\n              <b v-if=\\\"result.sales_orders && result.sales_orders[0]\\\">{{ result.sales_orders[0].document_id }}</b>\\n               <b v-else>0</b>\\n            </b-row>\\n            <b-row>\\n             Total  Customer Unallocated payments : <b>KES {{ result.unallocated_cash  || 0}}</b>\\n            </b-row>\\n            <b-row v-if=\\\"result.sales_orders\\\">\\n             Total Bill Amount: <b> KES {{ result.sales_orders.map(item=> item.total).reduce((x,y)=> x+y,0)|| 0 }}</b>\\n            </b-row>\\n\\n            <b-row v-if=\\\"result.total_bill > result.unallocated_cash\\\">\\n              Amount pending payment:<b style=\\\"color: red\\\">\\n                KES {{ result.sales_orders.filter(item=> item.workflow_state == \\\"Posted\\\").map(item=> item.total).reduce((x,y)=> x+y,0)}}</b\\n              >\\n            </b-row>\\n            <b-row v-else>\\n              Over Payment by:\\n              <b style=\\\"color: green\\\">\\n                KES {{ result.unallocated_cash - result.total_bill }}</b\\n              >\\n            </b-row>\\n\\n             <b-row v-if=\\\"result.sales_orders && result.sales_orders.length\\\">\\n              Items:\\n              <b>{{ result.sales_orders.length }}</b>\\n            </b-row>\\n          </b-container>\\n          <b-collapse :visible=\\\"collapsed\\\" id=\\\"collapse-1\\\" class=\\\"mt-2\\\">\\n            <b-row>\\n              <b-col></b-col>\\n              <h4>Paid</h4>\\n            </b-row>\\n            <hr/>\\n            <b-row v-if=\\\"result.sales_orders && result.sales_orders.length\\\">\\n              <b-table\\n               style=\\\"width:100% !important\\\"\\n              :items=\\\"result.sales_orders.filter(item=> item.workflow_state == 'Completed')\\\"\\n                striped\\n            outlined\\n            bordered\\n            head-row-variant=\\\"secondary\\\"\\n            :sticky-header=\\\"'400px'\\\"\\n            responsive=\\\"sm\\\"\\n            :empty-text=\\\"`No items have been paid`\\\"\\n            :empty-filtered-text=\\\"`No items have been paid`\\\"\\n            :show-empty=\\\"true\\\"\\n            hover\\n              >\\n                 <template #cell(index)=\\\"data\\\">\\n                {{ data.index + 1 }}\\n              </template>\\n              </b-table>\\n            </b-row>\\n            <b-row>\\n              <b-col></b-col>\\n              <h4 v-if=\\\"result.sales_orders\\\">Total {{ result.sales_orders.filter(item=> item.workflow_state == \\\"Completed\\\").map(item=> item.total).reduce((x,y)=> x+y,0) ||0 }}</h4>\\n            </b-row>\\n            <hr/>\\n            <br/>\\n             <b-row>\\n              <b-col></b-col>\\n              <h4>Unpaid</h4>\\n            </b-row>\\n            <hr/>\\n\\n            <b-row v-if=\\\"result.sales_orders && result.sales_orders.length\\\">\\n              <b-table \\n               style=\\\"width:100% !important\\\"\\n               :items=\\\"result.sales_orders.filter(item=> item.workflow_state == 'Posted')\\\"\\n               hover\\n            striped\\n            outlined\\n            bordered\\n            head-row-variant=\\\"secondary\\\"\\n            :sticky-header=\\\"'400px'\\\"\\n            responsive=\\\"sm\\\"\\n            :empty-text=\\\"`No items pending payments`\\\"\\n            :empty-filtered-text=\\\"`No pending payments`\\\"\\n            :show-empty=\\\"true\\\"\\n               \\n               >\\n                 <template #cell(index)=\\\"data\\\">\\n                {{ data.index + 1 }}\\n              </template>\\n              </b-table>\\n            </b-row>\\n\\n              <b-row>\\n              <b-col></b-col>\\n              <h4>Total {{ result.sales_orders.filter(item=> item.workflow_state == \\\"Posted\\\").map(item=> item.total).reduce((x,y)=> x+y,0) ||0 }}</h4>\\n            </b-row>\\n            <hr/>\\n            <br/>\\n          </b-collapse>\\n        </div>\\n      </b-container>\\n    </b-card>\\n  </div>\\n</template>\\n\\n<script>\\nimport { getPatientDashboardData } from \\\"./../services/customer/dashboard.js\\\";\\nexport default {\\n  data() {\\n    return {\\n      result: {},\\n    };\\n  },\\n  props: {\\n    patient: { type: String },\\n    customer: {type:String},\\n    collapsed: {type: Boolean},\\n  },\\n  methods: {\\n    getPatientData(data) {\\n      getPatientDashboardData(data).then((response) => {\\n\\n        if(!response.total_bill){\\n          response.total_bill =0;\\n        }\\n\\n        if(!response.unallocated_cash){\\n          response.unallocated_cash =0;\\n        }\\n\\n         if(!response.sales_orders){\\n          response.sales_orders =[];\\n        }\\n\\n        this.result= response;\\n\\n      });\\n    },\\n  },\\n\\n  mounted() {\\n    if (this.patient) {\\n      this.getPatientData({ patient: this.patient });\\n    } else if (this.customer) {\\n      this.getPatientData({ customer: this.customer });\\n    } else if (window.cur_frm && window.cur_frm.doc.customer) {\\n      this.getPatientData({ customer: window.cur_frm.doc.customer });\\n    }else if (window.cur_frm && cur_frm.doc.patient) {\\n      this.getPatientData({ patient: window.cur_frm.doc.patient });\\n    }\\n  },\\n};\\n</script>\\n\\n<style>\\n</style>\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n\nimport Main from './../../customer_dash/Main.vue'\nconst __vue_script__ = {\n    components:{\n        Main,\n    },\n    props:{\n        patient:{type:String,}, \n        customer: {type:String}\n    }\n\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.patient || _vm.customer\n    ? _c(\n        \"div\",\n        [\n          _c(\"Main\", {\n            staticClass: \"mt-4 mb-6\",\n            attrs: {\n              patient: _vm.patient,\n              customer: _vm.customer,\n              collapsed: true\n            }\n          })\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-58512420_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"Dashboard.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n<div v-if=\\\"patient || customer\\\">\\n    <Main class=\\\"mt-4 mb-6\\\" :patient=\\\"patient\\\" :customer=\\\"customer\\\" :collapsed=\\\"true\\\"></main>\\n</div>\\n  \\n</template>\\n\\n<script>\\nimport Main from './../../customer_dash/Main.vue'\\nexport default {\\n    components:{\\n        Main,\\n    },\\n    props:{\\n        patient:{type:String,}, \\n        customer: {type:String}\\n    }\\n\\n}\\n</script>\\n\\n<style>\\n\\n</style>\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "export const api = ({ method, args = {}, freeze=true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            freeze,\n            callback: ({ message }) => resolve(message),\n            error: reject,\n        })\n    );\n\nexport const apiPlain = ({ method, args = {} }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            callback: (message) => resolve(message),\n            error: reject,\n        })\n    );\n\nexport const apix = ({ method, args = {} }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            callback: ({ results }) => resolve(results),\n            error: reject,\n        })\n    );\n\nexport const getDoctypeWithMeta = (payload) =>\n    api({\n        method: \"clinical.api.doctype.meta.get_doctype_with_meta\",\n        args: { payload },\n    });\n\nexport const getDoctypeWithMetaSlim = (payload) =>\n    api({\n        method: \"clinical.api.doctype.meta.get_doctype_with_meta_slim\",\n        args: { payload },\n    });\n\nexport const getDoctypeRenderSettings = (payload) =>\n    api({\n        method: \"mtrh_dev.mtrh_dev.doctype.renderer_settings.renderer_settings.get_render_settings\",\n        args: { payload },\n    });\n\nexport const updateDoctype = (payload) =>\n    api({\n        method: \"frappe.desk.form.save.savedocs\",\n        args: { doc: payload, action: \"Update\" },\n    });\n\nexport const addPatientToQueue = (appointment) =>\n    api({\n        method: \"billing.billing.api.patient.patient_balance.add_emergency_patient_to_queue\",\n        args: { appointment },\n    });\n\n\nexport const cancelDoctype = (doctype, name) =>\n    api({\n        method: \"frappe.desk.form.save.cancel\",\n        args: { doctype, name },\n    });\n\nexport const getDoctype = (doctype, name) =>\n    apiPlain({\n        method: \"frappe.desk.form.load.getdoc\",\n        args: { doctype, name },\n    });\n\nexport const searchDoctype = (payload) =>\n    apix({\n        method: \"frappe.desk.search.search_link\",\n        args: { payload },\n    });", "const getUserInfo = () => {\n    let userInfo = {};\n\n    return userInfo;\n};\n\nconst state = {\n    AppActiveUser: getUserInfo(),\n    tableData: []\n};\n\nexport default state;", "const getters = {\n    getUser: (state) => {\n        return state.AppActiveUser;\n    },\n    getTableData: (state) => {\n        return state.AppActiveUser;\n    },\n};\n\nexport default getters;", "const mutations = {\n    UPDATE_USER_INFO(state, payload) {\n        state.AppActiveUser = payload;\n    },\n    UPDATE_TABLE_DATA(state, payload) {\n        state.tableData = payload;\n    },\n}\n\nexport default mutations", "const actions = {\n    updateUserInfo({ commit }, payload) {\n        commit(\"UPDATE_USER_INFO\", payload);\n    },\n    updateTable({ commit }, payload) {\n        commit(\"UPDATE_TABLE_DATA\", payload);\n    },\n};\n\nexport default actions;", "import state from \"./state\";\nimport getters from \"./getters\";\nimport mutations from \"./mutations\";\nimport actions from \"./actions\"\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getDoctypeWithMetaSlim,\n  getDoctypeWithMeta,\n} from \"./../../services/doctype/meta\";\nimport renderModule from \"../../state/render/module.js\";\nconst __vue_script__ = {\n  name: \"ChildTable\",\n  props: {\n    doctype: { type: String },\n    readOnly: { type: Boolean, default: true },\n    tableData: { type: Array, default: [] },\n    fields: { type: Array, default: [] },\n    doc: { type: String, default: \"\" },\n    tableMeta: null,\n    selectedDoctype: null,\n    selectedReference: null,\n    parentName:null,\n  },\n  data() {\n    return {\n      meta: {},\n      actualTableData: [],\n      inputFields: [],\n      allFields: [],\n      selectMode: \"multi\",\n      selected: [],\n      allowFields: [],\n    };\n  },\n  computed: {\n    storedTableData() {\n      return this.$store.getters[\"render/getTableData\"];\n    },\n  },\n  watch: {\n    actualTableData: {\n      deep:true,\n      handler(val){\n        if (!this.readOnly) {\n        this.$emit(\"childUpdated\", val);\n      }\n      }\n\n      \n    },\n  },\n  methods: {\n    addItem() {\n      let fields = this.inputFields;\n      const me = this;\n\n      let d = new frappe.ui.Dialog({\n        title: \"Create\",\n        fields: fields,\n        primary_action_label: \"Add\",\n        primary_action(values) {\n          console.log(values);\n          me.loadAddItemToTable(values);\n          d.hide();\n        },\n      });\n\n      d.show();\n    },\n    onRowSelected(items) {\n      this.selected = items;\n    },\n    loadAddItemToTable(values) {\n      this.actualTableData.push(values);\n      const val = this.actualTableData;\n      this.setTableData(val);\n      this.$set(this, \"actualTableData\", val);\n      console.log(this.actualTableData);\n    },\n    removeItem() {\n      this.actualTableData =this.actualTableData.filter(item=>{\n        return  !(this.selected.filter(x=> x ==item).length > 0);\n      })\n    },\n    setTableData(data) {\n      this.$store.dispatch(\"render/updateTable\", data);\n    },\n    selectAllRows() {\n      this.$refs.selectableTable.selectAllRows();\n    },\n    clearSelected() {\n      this.$refs.selectableTable.clearSelected();\n    },\n    loadMetaData() {\n      const payload = { doctype: this.doctype };\n      getDoctypeWithMetaSlim(payload).then((data) => {\n        this.meta = data.meta;\n        this.allFields = data.meta.fields;\n        if (data.allowed_fields && data.allowed_fields.allowed_fields) {\n          this.allowedFields = data.allowed_fields.allowed_fields;\n        }\n        let checkList = [];\n        if (this.allowedFields) {\n          checkList = this.allowedFields\n            .filter((x) => x.active)\n            .map((v) => v.field_name);\n        }\n\n        let tempFields = this.allFields\n          .filter((field) => field.in_list_view === 1 || field.reqd === 1)\n          .map((field) => {\n            field.key = field.fieldname;\n            field.read_only = 0;\n            return field;\n          });\n\n        let indexList = [];\n        tempFields.forEach((field, index, arr) => {\n          indexList.push({ pos: index + 1 });\n        });\n\n        this.fields = [...[\"_\"], indexList, ...tempFields];\n\n        this.inputFields = this.allFields.filter(\n          (field) => field.in_list_view === 1 || field.reqd === 1\n        );\n\n        if (this.checkList.length) {\n          this.fields = this.fields.filter(\n            (item) => checkList.indexOf(item.fieldname) > -1\n          );\n\n          this.inputFields = this.inputFields.filter(\n            (item) => checkList.indexOf(item.fieldname) > -1\n          );\n        }\n      });\n    },\n    updateRow(doctype, name) {\n      const payload = { doctype, name };\n      getDoctypeWithMeta(payload).then((data) => {\n        actualTableData.push(data.data);\n      });\n    },\n    getDataType(key) {\n      return (\n        (this.fields || []).find((element) => element.fieldname === key) || {}\n      );\n    },\n    setCurrentDoctype(doctype, reference) {\n      this.selectedDoctype = doctype;\n      this.selectedReference = reference;\n      this.$router.push({ name: \"viewer\", params: { doctype, reference } });\n      // this.$refs[\"my-modal-1993\"].show();\n    },\n  },\n  created() {\n    this.$store.registerModule(\"render\", renderModule);\n    this.actualTableData = this.tableData;\n    this.loadMetaData();\n  },\n  mounted() {},\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _vm.selectedDoctype\n            ? _c(\"doctype-render\", {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  fields: [],\n                  doctypeInput: _vm.selectedDoctype,\n                  doc_ref: _vm.selectedReference\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"b-table\", {\n        ref: \"selectableTable\",\n        attrs: {\n          small: \"\",\n          items: _vm.actualTableData,\n          fields: _vm.fields,\n          \"select-mode\": _vm.selectMode,\n          responsive: \"sm\",\n          selectable: \"\",\n          bordered: \"\",\n          stacked: false,\n          \"stacked-heading\": _vm.doctype,\n          striped: \"\"\n        },\n        on: { \"row-selected\": _vm.onRowSelected },\n        scopedSlots: _vm._u([\n          {\n            key: \"cell(_)\",\n            fn: function(ref) {\n              var rowSelected = ref.rowSelected\n              return [\n                rowSelected\n                  ? [\n                      _c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"sr-only\" }, [\n                        _vm._v(\"Selected\")\n                      ])\n                    ]\n                  : [\n                      _c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"sr-only\" }, [\n                        _vm._v(\"Not selected\")\n                      ])\n                    ]\n              ]\n            }\n          },\n          {\n            key: \"cell(pos)\",\n            fn: function(data) {\n              return [_vm._v(\"\\n      \" + _vm._s(data.value) + \"\\n    \")]\n            }\n          },\n          {\n            key: \"cell()\",\n            fn: function(data) {\n              return [\n                _vm.getDataType(data.field.key).fieldtype === \"Link\"\n                  ? _c(\n                      \"div\",\n                      { staticStyle: { width: \"100%\" } },\n                      [\n                        _c(\n                          \"b-input-group\",\n                          { staticClass: \"mb-2\" },\n                          [\n                            _c(\"b-form-input\", {\n                              staticClass: \"table-input\",\n                              attrs: { type: \"text\" },\n                              model: {\n                                value: data.value,\n                                callback: function($$v) {\n                                  _vm.$set(data, \"value\", $$v)\n                                },\n                                expression: \"data.value\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-input-group-prepend\",\n                              {\n                                attrs: { \"is-text\": \"\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.setCurrentDoctype(\n                                      _vm.getDataType(data.field.key).options,\n                                      data.value\n                                    )\n                                  }\n                                }\n                              },\n                              [_c(\"b-icon\", { attrs: { icon: \"link45deg\" } })],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm.getDataType(data.field.key).fieldtype === \"Text Editor\"\n                  ? _c(\n                      \"div\",\n                      { staticStyle: { width: \"100%\" } },\n                      [\n                        !data.value\n                          ? _c(\n                              \"b-input-group\",\n                              { staticClass: \"mb-2\" },\n                              [\n                                _c(\"b-form-input\", {\n                                  attrs: { type: \"text\" },\n                                  model: {\n                                    value: data.value,\n                                    callback: function($$v) {\n                                      _vm.$set(data, \"value\", $$v)\n                                    },\n                                    expression: \"data.value\"\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"b-input-group-prepend\",\n                                  {\n                                    attrs: { \"is-text\": \"\" },\n                                    on: {\n                                      click: function($event) {\n                                        _vm.setCurrentDoctype(\n                                          _vm.getDataType(data.field.key)\n                                            .options,\n                                          data.value\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\"b-icon\", {\n                                      attrs: { icon: \"link45deg\" }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          : _c(\"span\", {\n                              domProps: { innerHTML: _vm._s(data.value) }\n                            })\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"div\",\n                      { staticStyle: { width: \"100%\" } },\n                      [\n                        _c(\"b-form-input\", {\n                          attrs: { type: \"text\", readonly: _vm.readOnly },\n                          model: {\n                            value:\n                              _vm.actualTableData[data.index][data.field.key],\n                            callback: function($$v) {\n                              _vm.$set(\n                                _vm.actualTableData[data.index],\n                                data.field.key,\n                                $$v\n                              )\n                            },\n                            expression:\n                              \"actualTableData[data.index][data.field.key]\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n              ]\n            }\n          }\n        ]),\n        model: {\n          value: _vm.actualTableData,\n          callback: function($$v) {\n            _vm.actualTableData = $$v\n          },\n          expression: \"actualTableData\"\n        }\n      }),\n      _vm._v(\" \"),\n      !_vm.readOnly\n        ? _c(\n            \"b-row\",\n            { staticClass: \"mt-2\" },\n            [\n              _c(\n                \"b-col\",\n                { attrs: { cols: \"12\" } },\n                [\n                  _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"pull-left mr-2\",\n                      attrs: { variant: \"outline-secondary\", size: \"sm\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.addItem()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"b-icon\", {\n                        attrs: {\n                          icon: \"plus-circle-fill\",\n                          \"aria-hidden\": \"true\"\n                        }\n                      }),\n                      _vm._v(\" Add\\n      \")\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"pull-left\",\n                      attrs: { variant: \"outline-danger\", size: \"sm\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.removeItem()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"b-icon\", {\n                        attrs: { icon: \"trash\", \"aria-hidden\": \"true\" }\n                      }),\n                      _vm._v(\" Remove\\n      \")\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-1c330300_0\", { source: \"\\n.ql-editor[data-v-1c330300] {\\n  background: white;\\n  border-radius: 9px;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n}\\ninput[data-v-1c330300] {\\n  background: transparent !important;\\n  border: 1px  solid grey;\\n  /* border-top: 0px;\\n  border-bottom: 0px;\\n  border-radius: 0px; */\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/html/doctype/ChildTable.vue\"],\"names\":[],\"mappings\":\";AA6RA;EACA,iBAAA;EACA,kBAAA;EACA,iBAAA;EACA,oBAAA;AACA;AACA;EACA,kCAAA;EACA,uBAAA;EACA;;uBAEA;AACA\",\"file\":\"ChildTable.vue\",\"sourcesContent\":[\"<template>\\n  <div>\\n   \\n    <b-row>\\n      <doctype-render\\n        v-if=\\\"selectedDoctype\\\"\\n        style=\\\"width: 100%\\\"\\n        :fields=\\\"[]\\\"\\n        :doctypeInput=\\\"selectedDoctype\\\"\\n        :doc_ref=\\\"selectedReference\\\"\\n      />\\n    </b-row>\\n    <b-table\\n      small\\n      :items=\\\"actualTableData\\\"\\n      v-model=\\\"actualTableData\\\"\\n      :fields=\\\"fields\\\"\\n      :select-mode=\\\"selectMode\\\"\\n      responsive=\\\"sm\\\"\\n      ref=\\\"selectableTable\\\"\\n      selectable\\n      @row-selected=\\\"onRowSelected\\\"\\n      bordered\\n      :stacked=\\\"false\\\"\\n      :stacked-heading=\\\"doctype\\\"\\n      striped\\n    >\\n      <template #cell(_)=\\\"{ rowSelected }\\\">\\n        <template v-if=\\\"rowSelected\\\">\\n          <span aria-hidden=\\\"true\\\">\\n           \\n          </span>\\n          <span class=\\\"sr-only\\\">Selected</span>\\n        </template>\\n        <template v-else>\\n          <span aria-hidden=\\\"true\\\">\\n            \\n          </span>\\n          <span class=\\\"sr-only\\\">Not selected</span>\\n        </template>\\n      </template>\\n      <template #cell(pos)=\\\"data\\\">\\n        {{ data.value }}\\n      </template>\\n      <template #cell()=\\\"data\\\">\\n        <div\\n          style=\\\"width: 100%\\\"\\n          v-if=\\\"getDataType(data.field.key).fieldtype === 'Link'\\\"\\n        >\\n          <b-input-group class=\\\"mb-2\\\">\\n            <b-form-input\\n              type=\\\"text\\\"\\n              v-model=\\\"data.value\\\"\\n             \\n              class=\\\"table-input\\\"\\n            ></b-form-input>\\n            <b-input-group-prepend\\n              is-text\\n              @click=\\\"\\n                setCurrentDoctype(\\n                  getDataType(data.field.key).options,\\n                  data.value\\n                )\\n              \\\"\\n            >\\n              <b-icon icon=\\\"link45deg\\\"></b-icon>\\n            </b-input-group-prepend>\\n          </b-input-group>\\n        </div>\\n        <div\\n          style=\\\"width: 100%\\\"\\n          v-else-if=\\\"getDataType(data.field.key).fieldtype === 'Text Editor'\\\"\\n        >\\n          <b-input-group class=\\\"mb-2\\\" v-if=\\\"!data.value\\\">\\n            <b-form-input\\n              type=\\\"text\\\"\\n              v-model=\\\"data.value\\\"\\n            \\n            ></b-form-input>\\n            <b-input-group-prepend\\n              is-text\\n              @click=\\\"\\n                setCurrentDoctype(\\n                  getDataType(data.field.key).options,\\n                  data.value\\n                )\\n              \\\"\\n            >\\n              <b-icon icon=\\\"link45deg\\\"></b-icon>\\n            </b-input-group-prepend>\\n          </b-input-group>\\n          <span v-else v-html=\\\"data.value\\\" />\\n        </div>\\n        <div style=\\\"width: 100%\\\" v-else>\\n          <!-- <p>{{data}}</p> -->\\n          <b-form-input :type=\\\"'text'\\\" v-model=\\\"actualTableData[data.index][data.field.key]\\\" :readonly=\\\"readOnly\\\" />\\n        </div>\\n      </template>\\n    </b-table>\\n\\n    <b-row class=\\\"mt-2\\\" v-if=\\\"!readOnly\\\">\\n      <b-col cols=\\\"12\\\">\\n        <b-button\\n          variant=\\\"outline-secondary\\\"\\n          class=\\\"pull-left mr-2\\\"\\n          size=\\\"sm\\\"\\n          @click=\\\"addItem()\\\"\\n        >\\n          <b-icon icon=\\\"plus-circle-fill\\\" aria-hidden=\\\"true\\\"></b-icon> Add\\n        </b-button>\\n        <b-button\\n          variant=\\\"outline-danger\\\"\\n          class=\\\"pull-left\\\"\\n          size=\\\"sm\\\"\\n          @click=\\\"removeItem()\\\"\\n        >\\n          <b-icon icon=\\\"trash\\\" aria-hidden=\\\"true\\\"></b-icon> Remove\\n        </b-button>\\n      </b-col>\\n    </b-row>\\n  </div>\\n</template>\\n\\n<script>\\nimport {\\n  getDoctypeWithMetaSlim,\\n  getDoctypeWithMeta,\\n} from \\\"./../../services/doctype/meta\\\";\\nimport renderModule from \\\"../../state/render/module.js\\\";\\nexport default {\\n  name: \\\"ChildTable\\\",\\n  props: {\\n    doctype: { type: String },\\n    readOnly: { type: Boolean, default: true },\\n    tableData: { type: Array, default: [] },\\n    fields: { type: Array, default: [] },\\n    doc: { type: String, default: \\\"\\\" },\\n    tableMeta: null,\\n    selectedDoctype: null,\\n    selectedReference: null,\\n    parentName:null,\\n  },\\n  data() {\\n    return {\\n      meta: {},\\n      actualTableData: [],\\n      inputFields: [],\\n      allFields: [],\\n      selectMode: \\\"multi\\\",\\n      selected: [],\\n      allowFields: [],\\n    };\\n  },\\n  computed: {\\n    storedTableData() {\\n      return this.$store.getters[\\\"render/getTableData\\\"];\\n    },\\n  },\\n  watch: {\\n    actualTableData: {\\n      deep:true,\\n      handler(val){\\n        if (!this.readOnly) {\\n        this.$emit(\\\"childUpdated\\\", val);\\n      }\\n      }\\n\\n      \\n    },\\n  },\\n  methods: {\\n    addItem() {\\n      let fields = this.inputFields;\\n      const me = this;\\n\\n      let d = new frappe.ui.Dialog({\\n        title: \\\"Create\\\",\\n        fields: fields,\\n        primary_action_label: \\\"Add\\\",\\n        primary_action(values) {\\n          console.log(values);\\n          me.loadAddItemToTable(values);\\n          d.hide();\\n        },\\n      });\\n\\n      d.show();\\n    },\\n    onRowSelected(items) {\\n      this.selected = items;\\n    },\\n    loadAddItemToTable(values) {\\n      this.actualTableData.push(values);\\n      const val = this.actualTableData;\\n      this.setTableData(val);\\n      this.$set(this, \\\"actualTableData\\\", val);\\n      console.log(this.actualTableData);\\n    },\\n    removeItem() {\\n      this.actualTableData =this.actualTableData.filter(item=>{\\n        return  !(this.selected.filter(x=> x ==item).length > 0);\\n      })\\n    },\\n    setTableData(data) {\\n      this.$store.dispatch(\\\"render/updateTable\\\", data);\\n    },\\n    selectAllRows() {\\n      this.$refs.selectableTable.selectAllRows();\\n    },\\n    clearSelected() {\\n      this.$refs.selectableTable.clearSelected();\\n    },\\n    loadMetaData() {\\n      const payload = { doctype: this.doctype };\\n      getDoctypeWithMetaSlim(payload).then((data) => {\\n        this.meta = data.meta;\\n        this.allFields = data.meta.fields;\\n        if (data.allowed_fields && data.allowed_fields.allowed_fields) {\\n          this.allowedFields = data.allowed_fields.allowed_fields;\\n        }\\n        let checkList = [];\\n        if (this.allowedFields) {\\n          checkList = this.allowedFields\\n            .filter((x) => x.active)\\n            .map((v) => v.field_name);\\n        }\\n\\n        let tempFields = this.allFields\\n          .filter((field) => field.in_list_view === 1 || field.reqd === 1)\\n          .map((field) => {\\n            field.key = field.fieldname;\\n            field.read_only = 0;\\n            return field;\\n          });\\n\\n        let indexList = [];\\n        tempFields.forEach((field, index, arr) => {\\n          indexList.push({ pos: index + 1 });\\n        });\\n\\n        this.fields = [...[\\\"_\\\"], indexList, ...tempFields];\\n\\n        this.inputFields = this.allFields.filter(\\n          (field) => field.in_list_view === 1 || field.reqd === 1\\n        );\\n\\n        if (this.checkList.length) {\\n          this.fields = this.fields.filter(\\n            (item) => checkList.indexOf(item.fieldname) > -1\\n          );\\n\\n          this.inputFields = this.inputFields.filter(\\n            (item) => checkList.indexOf(item.fieldname) > -1\\n          );\\n        }\\n      });\\n    },\\n    updateRow(doctype, name) {\\n      const payload = { doctype, name };\\n      getDoctypeWithMeta(payload).then((data) => {\\n        actualTableData.push(data.data);\\n      });\\n    },\\n    getDataType(key) {\\n      return (\\n        (this.fields || []).find((element) => element.fieldname === key) || {}\\n      );\\n    },\\n    setCurrentDoctype(doctype, reference) {\\n      this.selectedDoctype = doctype;\\n      this.selectedReference = reference;\\n      this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n      // this.$refs[\\\"my-modal-1993\\\"].show();\\n    },\\n  },\\n  created() {\\n    this.$store.registerModule(\\\"render\\\", renderModule);\\n    this.actualTableData = this.tableData;\\n    this.loadMetaData();\\n  },\\n  mounted() {},\\n};\\n</script>\\n\\n<style scoped>\\n.ql-editor {\\n  background: white;\\n  border-radius: 9px;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n}\\ninput {\\n  background: transparent !important;\\n  border: 1px  solid grey;\\n  /* border-top: 0px;\\n  border-bottom: 0px;\\n  border-radius: 0px; */\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-1c330300\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n   \\n    <b-row>\\n      <doctype-render\\n        v-if=\\\"selectedDoctype\\\"\\n        style=\\\"width: 100%\\\"\\n        :fields=\\\"[]\\\"\\n        :doctypeInput=\\\"selectedDoctype\\\"\\n        :doc_ref=\\\"selectedReference\\\"\\n      />\\n    </b-row>\\n    <b-table\\n      small\\n      :items=\\\"actualTableData\\\"\\n      v-model=\\\"actualTableData\\\"\\n      :fields=\\\"fields\\\"\\n      :select-mode=\\\"selectMode\\\"\\n      responsive=\\\"sm\\\"\\n      ref=\\\"selectableTable\\\"\\n      selectable\\n      @row-selected=\\\"onRowSelected\\\"\\n      bordered\\n      :stacked=\\\"false\\\"\\n      :stacked-heading=\\\"doctype\\\"\\n      striped\\n    >\\n      <template #cell(_)=\\\"{ rowSelected }\\\">\\n        <template v-if=\\\"rowSelected\\\">\\n          <span aria-hidden=\\\"true\\\">\\n           \\n          </span>\\n          <span class=\\\"sr-only\\\">Selected</span>\\n        </template>\\n        <template v-else>\\n          <span aria-hidden=\\\"true\\\">\\n            \\n          </span>\\n          <span class=\\\"sr-only\\\">Not selected</span>\\n        </template>\\n      </template>\\n      <template #cell(pos)=\\\"data\\\">\\n        {{ data.value }}\\n      </template>\\n      <template #cell()=\\\"data\\\">\\n        <div\\n          style=\\\"width: 100%\\\"\\n          v-if=\\\"getDataType(data.field.key).fieldtype === 'Link'\\\"\\n        >\\n          <b-input-group class=\\\"mb-2\\\">\\n            <b-form-input\\n              type=\\\"text\\\"\\n              v-model=\\\"data.value\\\"\\n             \\n              class=\\\"table-input\\\"\\n            ></b-form-input>\\n            <b-input-group-prepend\\n              is-text\\n              @click=\\\"\\n                setCurrentDoctype(\\n                  getDataType(data.field.key).options,\\n                  data.value\\n                )\\n              \\\"\\n            >\\n              <b-icon icon=\\\"link45deg\\\"></b-icon>\\n            </b-input-group-prepend>\\n          </b-input-group>\\n        </div>\\n        <div\\n          style=\\\"width: 100%\\\"\\n          v-else-if=\\\"getDataType(data.field.key).fieldtype === 'Text Editor'\\\"\\n        >\\n          <b-input-group class=\\\"mb-2\\\" v-if=\\\"!data.value\\\">\\n            <b-form-input\\n              type=\\\"text\\\"\\n              v-model=\\\"data.value\\\"\\n            \\n            ></b-form-input>\\n            <b-input-group-prepend\\n              is-text\\n              @click=\\\"\\n                setCurrentDoctype(\\n                  getDataType(data.field.key).options,\\n                  data.value\\n                )\\n              \\\"\\n            >\\n              <b-icon icon=\\\"link45deg\\\"></b-icon>\\n            </b-input-group-prepend>\\n          </b-input-group>\\n          <span v-else v-html=\\\"data.value\\\" />\\n        </div>\\n        <div style=\\\"width: 100%\\\" v-else>\\n          <!-- <p>{{data}}</p> -->\\n          <b-form-input :type=\\\"'text'\\\" v-model=\\\"actualTableData[data.index][data.field.key]\\\" :readonly=\\\"readOnly\\\" />\\n        </div>\\n      </template>\\n    </b-table>\\n\\n    <b-row class=\\\"mt-2\\\" v-if=\\\"!readOnly\\\">\\n      <b-col cols=\\\"12\\\">\\n        <b-button\\n          variant=\\\"outline-secondary\\\"\\n          class=\\\"pull-left mr-2\\\"\\n          size=\\\"sm\\\"\\n          @click=\\\"addItem()\\\"\\n        >\\n          <b-icon icon=\\\"plus-circle-fill\\\" aria-hidden=\\\"true\\\"></b-icon> Add\\n        </b-button>\\n        <b-button\\n          variant=\\\"outline-danger\\\"\\n          class=\\\"pull-left\\\"\\n          size=\\\"sm\\\"\\n          @click=\\\"removeItem()\\\"\\n        >\\n          <b-icon icon=\\\"trash\\\" aria-hidden=\\\"true\\\"></b-icon> Remove\\n        </b-button>\\n      </b-col>\\n    </b-row>\\n  </div>\\n</template>\\n\\n<script>\\nimport {\\n  getDoctypeWithMetaSlim,\\n  getDoctypeWithMeta,\\n} from \\\"./../../services/doctype/meta\\\";\\nimport renderModule from \\\"../../state/render/module.js\\\";\\nexport default {\\n  name: \\\"ChildTable\\\",\\n  props: {\\n    doctype: { type: String },\\n    readOnly: { type: Boolean, default: true },\\n    tableData: { type: Array, default: [] },\\n    fields: { type: Array, default: [] },\\n    doc: { type: String, default: \\\"\\\" },\\n    tableMeta: null,\\n    selectedDoctype: null,\\n    selectedReference: null,\\n    parentName:null,\\n  },\\n  data() {\\n    return {\\n      meta: {},\\n      actualTableData: [],\\n      inputFields: [],\\n      allFields: [],\\n      selectMode: \\\"multi\\\",\\n      selected: [],\\n      allowFields: [],\\n    };\\n  },\\n  computed: {\\n    storedTableData() {\\n      return this.$store.getters[\\\"render/getTableData\\\"];\\n    },\\n  },\\n  watch: {\\n    actualTableData: {\\n      deep:true,\\n      handler(val){\\n        if (!this.readOnly) {\\n        this.$emit(\\\"childUpdated\\\", val);\\n      }\\n      }\\n\\n      \\n    },\\n  },\\n  methods: {\\n    addItem() {\\n      let fields = this.inputFields;\\n      const me = this;\\n\\n      let d = new frappe.ui.Dialog({\\n        title: \\\"Create\\\",\\n        fields: fields,\\n        primary_action_label: \\\"Add\\\",\\n        primary_action(values) {\\n          console.log(values);\\n          me.loadAddItemToTable(values);\\n          d.hide();\\n        },\\n      });\\n\\n      d.show();\\n    },\\n    onRowSelected(items) {\\n      this.selected = items;\\n    },\\n    loadAddItemToTable(values) {\\n      this.actualTableData.push(values);\\n      const val = this.actualTableData;\\n      this.setTableData(val);\\n      this.$set(this, \\\"actualTableData\\\", val);\\n      console.log(this.actualTableData);\\n    },\\n    removeItem() {\\n      this.actualTableData =this.actualTableData.filter(item=>{\\n        return  !(this.selected.filter(x=> x ==item).length > 0);\\n      })\\n    },\\n    setTableData(data) {\\n      this.$store.dispatch(\\\"render/updateTable\\\", data);\\n    },\\n    selectAllRows() {\\n      this.$refs.selectableTable.selectAllRows();\\n    },\\n    clearSelected() {\\n      this.$refs.selectableTable.clearSelected();\\n    },\\n    loadMetaData() {\\n      const payload = { doctype: this.doctype };\\n      getDoctypeWithMetaSlim(payload).then((data) => {\\n        this.meta = data.meta;\\n        this.allFields = data.meta.fields;\\n        if (data.allowed_fields && data.allowed_fields.allowed_fields) {\\n          this.allowedFields = data.allowed_fields.allowed_fields;\\n        }\\n        let checkList = [];\\n        if (this.allowedFields) {\\n          checkList = this.allowedFields\\n            .filter((x) => x.active)\\n            .map((v) => v.field_name);\\n        }\\n\\n        let tempFields = this.allFields\\n          .filter((field) => field.in_list_view === 1 || field.reqd === 1)\\n          .map((field) => {\\n            field.key = field.fieldname;\\n            field.read_only = 0;\\n            return field;\\n          });\\n\\n        let indexList = [];\\n        tempFields.forEach((field, index, arr) => {\\n          indexList.push({ pos: index + 1 });\\n        });\\n\\n        this.fields = [...[\\\"_\\\"], indexList, ...tempFields];\\n\\n        this.inputFields = this.allFields.filter(\\n          (field) => field.in_list_view === 1 || field.reqd === 1\\n        );\\n\\n        if (this.checkList.length) {\\n          this.fields = this.fields.filter(\\n            (item) => checkList.indexOf(item.fieldname) > -1\\n          );\\n\\n          this.inputFields = this.inputFields.filter(\\n            (item) => checkList.indexOf(item.fieldname) > -1\\n          );\\n        }\\n      });\\n    },\\n    updateRow(doctype, name) {\\n      const payload = { doctype, name };\\n      getDoctypeWithMeta(payload).then((data) => {\\n        actualTableData.push(data.data);\\n      });\\n    },\\n    getDataType(key) {\\n      return (\\n        (this.fields || []).find((element) => element.fieldname === key) || {}\\n      );\\n    },\\n    setCurrentDoctype(doctype, reference) {\\n      this.selectedDoctype = doctype;\\n      this.selectedReference = reference;\\n      this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n      // this.$refs[\\\"my-modal-1993\\\"].show();\\n    },\\n  },\\n  created() {\\n    this.$store.registerModule(\\\"render\\\", renderModule);\\n    this.actualTableData = this.tableData;\\n    this.loadMetaData();\\n  },\\n  mounted() {},\\n};\\n</script>\\n\\n<style scoped>\\n.ql-editor {\\n  background: white;\\n  border-radius: 9px;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n}\\ninput {\\n  background: transparent !important;\\n  border: 1px  solid grey;\\n  /* border-top: 0px;\\n  border-bottom: 0px;\\n  border-radius: 0px; */\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "import { api } from \"./meta.js\";\nexport const getList = (payload) =>\n    api({\n        method: \"mtrh_dev.api.supplier-portal.base.base.get_list\",\n        args: { payload },\n    });\n\nexport const getDoctypeByName = (payload) =>\n    api({\n        method: \"clinical.api.forms.form_builder.get_doctype_by_name\",\n        args: { payload },\n    });\n\nexport const getSupplier = (username) =>\n    api({\n        method: \"mtrh_dev.mtrh_dev.get_linked_supplier\",\n        args: { username },\n    });\n\nexport const createDoctype = (payload) =>\n    api({\n        method: \"mtrh_dev.api.supplier-portal.base.base.save_form_data\",\n        args: { payload },\n    });\n// USER THIS API TO GET A LIST", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ChildTable from \"./ChildTable.vue\";\nimport { searchDoctype } from \"./../../services/doctype/meta.js\";\nconst __vue_script__ = {\n  components: { ChildTable },\n  name: \"DocField\",\n  props: {\n    docField: { type: Object, default: {} },\n    doc: { type: Object, default: {} },\n    readOnly: { type: Boolean, default: true },\n  },\n  data() {\n    return {\n      selected: null,\n      items: [],\n      loading: false,\n      timeoutId: null,\n      noData: false,\n    };\n  },\n  mounted() {\n    if (this.docField.fieldtype === \"Link\") {\n      this.makeSelectDoctypeControl();\n    } else if (this.docField.fieldtype === \"Dynamic Link\") {\n      this.makeDynamicDoctypeControl();\n    }\n  },\n  watch: {\n    doc: {\n      handler(val1, val2) {\n        console.log(this.docField.fieldtype);\n        if (this.docField.fieldtype === \"Dynamic Link\") {\n          this.makeDynamicDoctypeControl();\n          // if (val1[this.docField.options] !== val2[this.docField.options]) {\n\n          // }\n        }\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    removeUnwanted(items) {\n   \n      if (!items || items.length === 0) {\n        return [];\n      }\n      const unWanted = [\n        \"name\",\n        \"owner\",\n        \"creation\",\n        \"modified\",\n        \"parent\",\n        \"parentfield\",\n        \"modified_by\",\n        \"parenttype\",\n        \"doctype\",\n        \"docstatus\",\n        \"idx\",\n      ];\n      let result = items.map((item) => {\n        unWanted.forEach((key) => {\n          delete item[key];\n        });\n\n        return item;\n      });\n    \n      return result;\n    },\n    onSearch(search) {\n      const lettersLimit = 2;\n      this.noData = false;\n      if (search.length < lettersLimit) {\n        this.items = [];\n        this.loading = false;\n        return;\n      }\n      this.loading = true;\n\n      clearTimeout(this.timeoutId);\n      this.timeoutId = setTimeout(async () => {\n        var args = {\n          txt: search,\n          doctype: this.docField.dt,\n          reference_doctype: \"\",\n        };\n        searchDoctype(args).then((result) => {\n          this.items = result.map((item) => item.value);\n          this.loading = false;\n          if (!this.items.length) {\n            this.noData = true;\n          }\n\n          console.log(this.items);\n        });\n      }, 500);\n    },\n    change(val) {\n      const data = this.docField.fieldname;\n      this.$set(this.doc, data, val);\n    },\n    makeSelectDoctypeControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference\"),\n          fieldtype: \"Link\",\n          fieldname: \"reference\",\n          options: me.docField.options,\n          placeholder: __(\"\"),\n          onchange: function () {\n            if (this.value) {\n              me.change(this.value);\n            }\n          },\n        },\n        parent: this.$refs[\"doctype\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n      customer_field.$input.val(me.doc[me.docField.fieldname]);\n      $(\"#modal-body\").find(\".input-max-width\").removeClass(\"input-max-width\");\n    },\n    makeDynamicDoctypeControl() {\n      $(`#${this.docField.fieldname}`).html(\"\");\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference\"),\n          fieldtype: \"Link\",\n          fieldname: \"reference\",\n          options: me.doc[me.docField.options],\n          placeholder: __(\"\"),\n          onchange: function () {\n            if (this.value) {\n              me.doc[me.docField.fieldname] = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"doctype\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n      customer_field.$input.val(me.doc[me.docField.fieldname]);\n      $(\"#modal-body\").find(\".input-max-width\").removeClass(\"input-max-width\");\n    },\n    uploadFile() {\n      const me = this;\n      new frappe.ui.FileUploader({\n        doctype: \"Internal Memo\",\n        docname: me.parentId,\n        on_success(file_doc) {\n          const { file_url, filename } = file_doc;\n          me.doc[me.docField.fieldname] = file_url;\n        },\n      });\n    },\n    setCurrentDoctype(doctype, reference) {\n      this.selectedDoctype = doctype;\n      this.selectedReference = reference;\n      if (reference && doctype) {\n        this.$router.push({ name: \"viewer\", params: { doctype, reference } });\n      }\n\n      // this.$refs[\"my-modal-1993\"].show();\n    },\n    processOptions(options) {\n      if (!options) {\n        return [];\n      }\n      let optionList = options.split(\"\\n\");\n      return optionList;\n    },\n    childUpdated(val) {\n      this.$emit(\"childUpdated\", { val, fieldname: this.docField.fieldname });\n    },\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"mt-1\", staticStyle: { width: \"100%\" } }, [\n    _vm.docField.fieldname.startsWith(\"column_break\")\n      ? _c(\"br\", { staticStyle: { width: \"100%\" } })\n      : _vm.docField.fieldtype === \"Link\"\n      ? _c(\"div\", { staticStyle: { width: \"100%\" } }, [\n          _c(\n            \"label\",\n            { attrs: { for: \"input-live\" } },\n            [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _c(\n                \"b-icon\",\n                { attrs: { icon: \"link45deg\", \"font-scale\": \"2\" } },\n                [\n                  _vm.docField.reqd\n                    ? _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"align\",\n                              rawName: \"v-align\",\n                              value: _vm.center,\n                              expression: \"center\"\n                            }\n                          ],\n                          staticClass: \"required\"\n                        },\n                        [_vm._v(\"*\")]\n                      )\n                    : _vm._e()\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", {\n            ref: \"doctype\",\n            staticClass: \"ref-field-input\",\n            staticStyle: { width: \"100%\" }\n          })\n        ])\n      : _vm.docField.fieldtype === \"Dynamic Link\"\n      ? _c(\"div\", { staticStyle: { width: \"100%\" } }, [\n          _c(\n            \"label\",\n            { attrs: { for: \"input-live\" } },\n            [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _c(\n                \"b-icon\",\n                { attrs: { icon: \"link45deg\", \"font-scale\": \"2\" } },\n                [\n                  _vm.docField.reqd\n                    ? _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"align\",\n                              rawName: \"v-align\",\n                              value: _vm.center,\n                              expression: \"center\"\n                            }\n                          ],\n                          staticClass: \"required\"\n                        },\n                        [_vm._v(\"*\")]\n                      )\n                    : _vm._e()\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", {\n            ref: \"doctype\",\n            staticClass: \"ref-field-input\",\n            staticStyle: { width: \"100%\" },\n            attrs: { id: \"\" + _vm.docField.fieldname }\n          })\n        ])\n      : _vm.docField.fieldtype === \"Table\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"child-table\", {\n              staticStyle: { width: \"100%\" },\n              attrs: {\n                tableData: _vm.doc[_vm.docField.fieldname],\n                readOnly: _vm.readOnly,\n                doc: _vm.docField.fieldname,\n                doctype: _vm.docField.options\n              },\n              on: { childUpdated: _vm.childUpdated }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Text\"\n      ? _c(\n          \"div\",\n          { staticClass: \"mb-2\", staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-textarea\", {\n              attrs: {\n                rows: \"10\",\n                type: \"text\",\n                \"max-rows\": \"50\",\n                readonly: _vm.readOnly\n              },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Select\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-select\", {\n              attrs: {\n                readonly: _vm.readOnly,\n                options: _vm.processOptions(_vm.docField.options)\n              },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Float\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-input\", {\n              attrs: { type: \"number\", readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Currency\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-input\", {\n              attrs: { type: \"number\", readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Int\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-input\", {\n              attrs: { type: \"number\", readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Button\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\n              \"b-button\",\n              {\n                directives: [\n                  {\n                    name: \"align\",\n                    rawName: \"v-align\",\n                    value: _vm.center,\n                    expression: \"center\"\n                  }\n                ],\n                attrs: { variant: \"light\" }\n              },\n              [_vm._v(\"\\n      \" + _vm._s(_vm.docField.label))]\n            )\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Check\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\n              \"b-form-checkbox\",\n              {\n                staticClass: \"pt-4\",\n                attrs: {\n                  readonly: _vm.readOnly,\n                  value: \"1\",\n                  \"unchecked-value\": \"0\",\n                  variant: \"primary\"\n                },\n                model: {\n                  value: _vm.doc[_vm.docField.fieldname],\n                  callback: function($$v) {\n                    _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                  },\n                  expression: \"doc[docField.fieldname]\"\n                }\n              },\n              [_vm._v(\"\\n      \" + _vm._s(_vm.docField.label) + \"\\n    \")]\n            )\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Text Editor\"\n      ? _c(\n          \"div\",\n          { staticClass: \"mb-2\", staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label)),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-textarea\", {\n              attrs: {\n                rows: \"10\",\n                type: \"text\",\n                \"max-rows\": \"50\",\n                readonly: _vm.readOnly\n              },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Date\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label)),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-datepicker\", {\n              staticClass: \"mb-2\",\n              attrs: { readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Time\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label)),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-timepicker\", {\n              staticClass: \"mb-2\",\n              attrs: { readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Datetime\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label)),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-datepicker\", {\n              staticClass: \"mb-2\",\n              attrs: { readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Image\"\n      ? _c(\"div\", { staticStyle: { width: \"100%\" } }, [\n          _c(\"label\", { attrs: { for: \"input-live\" } }, [\n            _vm._v(_vm._s(_vm.docField.label)),\n            _vm.docField.reqd\n              ? _c(\n                  \"span\",\n                  {\n                    directives: [\n                      {\n                        name: \"align\",\n                        rawName: \"v-align\",\n                        value: _vm.center,\n                        expression: \"center\"\n                      }\n                    ],\n                    staticClass: \"required\"\n                  },\n                  [_vm._v(\"*\")]\n                )\n              : _vm._e()\n          ]),\n          _vm._v(\" \"),\n          _c(\"img\", { staticStyle: { width: \"10px\", height: \"10px\" } })\n        ])\n      : _vm.docField.fieldtype === \"Data\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-input\", {\n              attrs: { type: \"text\", readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Attach Image\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"b-button\",\n              {\n                staticClass: \"mb-2 mt-2\",\n                attrs: { size: \"sm\" },\n                on: { click: _vm.uploadFile }\n              },\n              [\n                _c(\"b-icon\", {\n                  attrs: { icon: \"paperclip\", \"aria-hidden\": \"true\" }\n                }),\n                _vm._v(\" Attach Image\\n    \")\n              ],\n              1\n            )\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Small Text\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label) + \"\\n      \"),\n              _vm.docField.reqd\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"align\",\n                          rawName: \"v-align\",\n                          value: _vm.center,\n                          expression: \"center\"\n                        }\n                      ],\n                      staticClass: \"required\"\n                    },\n                    [_vm._v(\"*\")]\n                  )\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\"b-form-input\", {\n              attrs: { type: \"text\", readonly: _vm.readOnly },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"HTML\"\n      ? _c(\"div\", [\n          _c(\"span\", {\n            domProps: { innerHTML: _vm._s(_vm.doc[_vm.docField.fieldname]) }\n          })\n        ])\n      : _c(\"div\", { staticStyle: { width: \"100%\" } }, [\n          _c(\"label\", { attrs: { for: \"input-live\" } }, [\n            _vm._v(_vm._s(_vm.docField.label)),\n            _vm.docField.reqd\n              ? _c(\n                  \"span\",\n                  {\n                    directives: [\n                      {\n                        name: \"align\",\n                        rawName: \"v-align\",\n                        value: _vm.center,\n                        expression: \"center\"\n                      }\n                    ],\n                    staticClass: \"required\"\n                  },\n                  [_vm._v(\"*\")]\n                )\n              : _vm._e()\n          ]),\n          _vm._v(\"\\n    \" + _vm._s(_vm.docField.fieldtype) + \"\\n  \")\n        ])\n  ])\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-f42a2350_0\", { source: \"\\n.required[data-v-f42a2350] {\\n  color: red;\\n  font-size: 14px;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/html/doctype/DocField.vue\"],\"names\":[],\"mappings\":\";AAwcA;EACA,UAAA;EACA,eAAA;AACA\",\"file\":\"DocField.vue\",\"sourcesContent\":[\"<template>\\n  <div style=\\\"width: 100%\\\" class=\\\"mt-1\\\">\\n    <br\\n      style=\\\"width: 100%\\\"\\n      v-if=\\\"docField.fieldname.startsWith('column_break')\\\"\\n    />\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Link'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <b-icon icon=\\\"link45deg\\\" font-scale=\\\"2\\\">\\n          <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n            >*</span\\n          ></b-icon\\n        ></label\\n      >\\n      <div style=\\\"width: 100%\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\"></div>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Dynamic Link'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <b-icon icon=\\\"link45deg\\\" font-scale=\\\"2\\\">\\n          <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n            >*</span\\n          ></b-icon\\n        ></label\\n      >\\n      <div\\n        style=\\\"width: 100%\\\"\\n        ref=\\\"doctype\\\"\\n        class=\\\"ref-field-input\\\"\\n        :id=\\\"`${docField.fieldname}`\\\"\\n      ></div>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Table'\\\">\\n      \\n      <child-table\\n        style=\\\"width: 100%\\\"\\n        :tableData=\\\"doc[docField.fieldname]\\\"\\n        :readOnly=\\\"readOnly\\\"\\n        :doc=\\\"docField.fieldname\\\"\\n         @childUpdated=\\\"childUpdated\\\"\\n        :doctype=\\\"docField.options\\\"\\n      >\\n      </child-table>\\n    </div>\\n\\n    <div\\n      style=\\\"width: 100%\\\"\\n      class=\\\"mb-2\\\"\\n      v-else-if=\\\"docField.fieldtype === 'Text'\\\"\\n    >\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-textarea\\n        rows=\\\"10\\\"\\n        :type=\\\"'text'\\\"\\n        max-rows=\\\"50\\\"\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Select'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-select\\n        :readonly=\\\"readOnly\\\"\\n        :options=\\\"processOptions(docField.options)\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Float'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-input\\n        :type=\\\"'number'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Currency'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-input\\n        :type=\\\"'number'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Int'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\">*</span>\\n      </label>\\n      <b-form-input\\n        :type=\\\"'number'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Button'\\\">\\n      <b-button variant=\\\"light\\\" v-align=\\\"center\\\">\\n        {{ docField.label }}</b-button\\n      >\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Check'\\\">\\n      <b-form-checkbox\\n        class=\\\"pt-4\\\"\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        value=\\\"1\\\"\\n        unchecked-value=\\\"0\\\"\\n        variant=\\\"primary\\\"\\n      >\\n        {{ docField.label }}\\n      </b-form-checkbox>\\n    </div>\\n\\n    <div\\n      style=\\\"width: 100%\\\"\\n      class=\\\"mb-2\\\"\\n      v-else-if=\\\"docField.fieldtype === 'Text Editor'\\\"\\n    >\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n\\n      <b-form-textarea\\n        rows=\\\"10\\\"\\n        :type=\\\"'text'\\\"\\n        max-rows=\\\"50\\\"\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Date'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-datepicker\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        class=\\\"mb-2\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Time'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-timepicker\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        class=\\\"mb-2\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Datetime'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-datepicker\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        class=\\\"mb-2\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Image'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <img style=\\\"width: 10px; height: 10px\\\" />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Data'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-input\\n        :type=\\\"'text'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Attach Image'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-button size=\\\"sm\\\" class=\\\"mb-2 mt-2\\\" @click=\\\"uploadFile\\\">\\n        <b-icon icon=\\\"paperclip\\\" aria-hidden=\\\"true\\\"></b-icon> Attach Image\\n      </b-button>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Small Text'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <br />\\n      <b-form-input\\n        :type=\\\"'text'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div v-else-if=\\\"docField.fieldtype === 'HTML'\\\">\\n      <span v-html=\\\"doc[docField.fieldname]\\\"></span>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else>\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      {{ docField.fieldtype }}\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport ChildTable from \\\"./ChildTable.vue\\\";\\nimport { searchDoctype } from \\\"./../../services/doctype/meta.js\\\";\\nexport default {\\n  components: { ChildTable },\\n  name: \\\"DocField\\\",\\n  props: {\\n    docField: { type: Object, default: {} },\\n    doc: { type: Object, default: {} },\\n    readOnly: { type: Boolean, default: true },\\n  },\\n  data() {\\n    return {\\n      selected: null,\\n      items: [],\\n      loading: false,\\n      timeoutId: null,\\n      noData: false,\\n    };\\n  },\\n  mounted() {\\n    if (this.docField.fieldtype === \\\"Link\\\") {\\n      this.makeSelectDoctypeControl();\\n    } else if (this.docField.fieldtype === \\\"Dynamic Link\\\") {\\n      this.makeDynamicDoctypeControl();\\n    }\\n  },\\n  watch: {\\n    doc: {\\n      handler(val1, val2) {\\n        console.log(this.docField.fieldtype);\\n        if (this.docField.fieldtype === \\\"Dynamic Link\\\") {\\n          this.makeDynamicDoctypeControl();\\n          // if (val1[this.docField.options] !== val2[this.docField.options]) {\\n\\n          // }\\n        }\\n      },\\n      deep: true,\\n    },\\n  },\\n  methods: {\\n    removeUnwanted(items) {\\n   \\n      if (!items || items.length === 0) {\\n        return [];\\n      }\\n      const unWanted = [\\n        \\\"name\\\",\\n        \\\"owner\\\",\\n        \\\"creation\\\",\\n        \\\"modified\\\",\\n        \\\"parent\\\",\\n        \\\"parentfield\\\",\\n        \\\"modified_by\\\",\\n        \\\"parenttype\\\",\\n        \\\"doctype\\\",\\n        \\\"docstatus\\\",\\n        \\\"idx\\\",\\n      ];\\n      let result = items.map((item) => {\\n        unWanted.forEach((key) => {\\n          delete item[key];\\n        });\\n\\n        return item;\\n      });\\n    \\n      return result;\\n    },\\n    onSearch(search) {\\n      const lettersLimit = 2;\\n      this.noData = false;\\n      if (search.length < lettersLimit) {\\n        this.items = [];\\n        this.loading = false;\\n        return;\\n      }\\n      this.loading = true;\\n\\n      clearTimeout(this.timeoutId);\\n      this.timeoutId = setTimeout(async () => {\\n        var args = {\\n          txt: search,\\n          doctype: this.docField.dt,\\n          reference_doctype: \\\"\\\",\\n        };\\n        searchDoctype(args).then((result) => {\\n          this.items = result.map((item) => item.value);\\n          this.loading = false;\\n          if (!this.items.length) {\\n            this.noData = true;\\n          }\\n\\n          console.log(this.items);\\n        });\\n      }, 500);\\n    },\\n    change(val) {\\n      const data = this.docField.fieldname;\\n      this.$set(this.doc, data, val);\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: me.docField.options,\\n          placeholder: __(\\\"\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.change(this.value);\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      customer_field.$input.val(me.doc[me.docField.fieldname]);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    makeDynamicDoctypeControl() {\\n      $(`#${this.docField.fieldname}`).html(\\\"\\\");\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: me.doc[me.docField.options],\\n          placeholder: __(\\\"\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.doc[me.docField.fieldname] = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      customer_field.$input.val(me.doc[me.docField.fieldname]);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    uploadFile() {\\n      const me = this;\\n      new frappe.ui.FileUploader({\\n        doctype: \\\"Internal Memo\\\",\\n        docname: me.parentId,\\n        on_success(file_doc) {\\n          const { file_url, filename } = file_doc;\\n          me.doc[me.docField.fieldname] = file_url;\\n        },\\n      });\\n    },\\n    setCurrentDoctype(doctype, reference) {\\n      this.selectedDoctype = doctype;\\n      this.selectedReference = reference;\\n      if (reference && doctype) {\\n        this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n      }\\n\\n      // this.$refs[\\\"my-modal-1993\\\"].show();\\n    },\\n    processOptions(options) {\\n      if (!options) {\\n        return [];\\n      }\\n      let optionList = options.split(\\\"\\\\n\\\");\\n      return optionList;\\n    },\\n    childUpdated(val) {\\n      this.$emit(\\\"childUpdated\\\", { val, fieldname: this.docField.fieldname });\\n    },\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.required {\\n  color: red;\\n  font-size: 14px;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-f42a2350\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div style=\\\"width: 100%\\\" class=\\\"mt-1\\\">\\n    <br\\n      style=\\\"width: 100%\\\"\\n      v-if=\\\"docField.fieldname.startsWith('column_break')\\\"\\n    />\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Link'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <b-icon icon=\\\"link45deg\\\" font-scale=\\\"2\\\">\\n          <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n            >*</span\\n          ></b-icon\\n        ></label\\n      >\\n      <div style=\\\"width: 100%\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\"></div>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Dynamic Link'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <b-icon icon=\\\"link45deg\\\" font-scale=\\\"2\\\">\\n          <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n            >*</span\\n          ></b-icon\\n        ></label\\n      >\\n      <div\\n        style=\\\"width: 100%\\\"\\n        ref=\\\"doctype\\\"\\n        class=\\\"ref-field-input\\\"\\n        :id=\\\"`${docField.fieldname}`\\\"\\n      ></div>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Table'\\\">\\n      \\n      <child-table\\n        style=\\\"width: 100%\\\"\\n        :tableData=\\\"doc[docField.fieldname]\\\"\\n        :readOnly=\\\"readOnly\\\"\\n        :doc=\\\"docField.fieldname\\\"\\n         @childUpdated=\\\"childUpdated\\\"\\n        :doctype=\\\"docField.options\\\"\\n      >\\n      </child-table>\\n    </div>\\n\\n    <div\\n      style=\\\"width: 100%\\\"\\n      class=\\\"mb-2\\\"\\n      v-else-if=\\\"docField.fieldtype === 'Text'\\\"\\n    >\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-textarea\\n        rows=\\\"10\\\"\\n        :type=\\\"'text'\\\"\\n        max-rows=\\\"50\\\"\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Select'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-select\\n        :readonly=\\\"readOnly\\\"\\n        :options=\\\"processOptions(docField.options)\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Float'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-input\\n        :type=\\\"'number'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Currency'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-input\\n        :type=\\\"'number'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Int'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\">*</span>\\n      </label>\\n      <b-form-input\\n        :type=\\\"'number'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Button'\\\">\\n      <b-button variant=\\\"light\\\" v-align=\\\"center\\\">\\n        {{ docField.label }}</b-button\\n      >\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Check'\\\">\\n      <b-form-checkbox\\n        class=\\\"pt-4\\\"\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        value=\\\"1\\\"\\n        unchecked-value=\\\"0\\\"\\n        variant=\\\"primary\\\"\\n      >\\n        {{ docField.label }}\\n      </b-form-checkbox>\\n    </div>\\n\\n    <div\\n      style=\\\"width: 100%\\\"\\n      class=\\\"mb-2\\\"\\n      v-else-if=\\\"docField.fieldtype === 'Text Editor'\\\"\\n    >\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n\\n      <b-form-textarea\\n        rows=\\\"10\\\"\\n        :type=\\\"'text'\\\"\\n        max-rows=\\\"50\\\"\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Date'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-datepicker\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        class=\\\"mb-2\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Time'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-timepicker\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        class=\\\"mb-2\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Datetime'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-datepicker\\n        :readonly=\\\"readOnly\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        class=\\\"mb-2\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Image'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <img style=\\\"width: 10px; height: 10px\\\" />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Data'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-form-input\\n        :type=\\\"'text'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Attach Image'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <b-button size=\\\"sm\\\" class=\\\"mb-2 mt-2\\\" @click=\\\"uploadFile\\\">\\n        <b-icon icon=\\\"paperclip\\\" aria-hidden=\\\"true\\\"></b-icon> Attach Image\\n      </b-button>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Small Text'\\\">\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label }}\\n        <span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      <br />\\n      <b-form-input\\n        :type=\\\"'text'\\\"\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n        :readonly=\\\"readOnly\\\"\\n      />\\n    </div>\\n\\n    <div v-else-if=\\\"docField.fieldtype === 'HTML'\\\">\\n      <span v-html=\\\"doc[docField.fieldname]\\\"></span>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else>\\n      <label for=\\\"input-live\\\"\\n        >{{ docField.label\\n        }}<span v-if=\\\"docField.reqd\\\" v-align=\\\"center\\\" class=\\\"required\\\"\\n          >*</span\\n        ></label\\n      >\\n      {{ docField.fieldtype }}\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport ChildTable from \\\"./ChildTable.vue\\\";\\nimport { searchDoctype } from \\\"./../../services/doctype/meta.js\\\";\\nexport default {\\n  components: { ChildTable },\\n  name: \\\"DocField\\\",\\n  props: {\\n    docField: { type: Object, default: {} },\\n    doc: { type: Object, default: {} },\\n    readOnly: { type: Boolean, default: true },\\n  },\\n  data() {\\n    return {\\n      selected: null,\\n      items: [],\\n      loading: false,\\n      timeoutId: null,\\n      noData: false,\\n    };\\n  },\\n  mounted() {\\n    if (this.docField.fieldtype === \\\"Link\\\") {\\n      this.makeSelectDoctypeControl();\\n    } else if (this.docField.fieldtype === \\\"Dynamic Link\\\") {\\n      this.makeDynamicDoctypeControl();\\n    }\\n  },\\n  watch: {\\n    doc: {\\n      handler(val1, val2) {\\n        console.log(this.docField.fieldtype);\\n        if (this.docField.fieldtype === \\\"Dynamic Link\\\") {\\n          this.makeDynamicDoctypeControl();\\n          // if (val1[this.docField.options] !== val2[this.docField.options]) {\\n\\n          // }\\n        }\\n      },\\n      deep: true,\\n    },\\n  },\\n  methods: {\\n    removeUnwanted(items) {\\n   \\n      if (!items || items.length === 0) {\\n        return [];\\n      }\\n      const unWanted = [\\n        \\\"name\\\",\\n        \\\"owner\\\",\\n        \\\"creation\\\",\\n        \\\"modified\\\",\\n        \\\"parent\\\",\\n        \\\"parentfield\\\",\\n        \\\"modified_by\\\",\\n        \\\"parenttype\\\",\\n        \\\"doctype\\\",\\n        \\\"docstatus\\\",\\n        \\\"idx\\\",\\n      ];\\n      let result = items.map((item) => {\\n        unWanted.forEach((key) => {\\n          delete item[key];\\n        });\\n\\n        return item;\\n      });\\n    \\n      return result;\\n    },\\n    onSearch(search) {\\n      const lettersLimit = 2;\\n      this.noData = false;\\n      if (search.length < lettersLimit) {\\n        this.items = [];\\n        this.loading = false;\\n        return;\\n      }\\n      this.loading = true;\\n\\n      clearTimeout(this.timeoutId);\\n      this.timeoutId = setTimeout(async () => {\\n        var args = {\\n          txt: search,\\n          doctype: this.docField.dt,\\n          reference_doctype: \\\"\\\",\\n        };\\n        searchDoctype(args).then((result) => {\\n          this.items = result.map((item) => item.value);\\n          this.loading = false;\\n          if (!this.items.length) {\\n            this.noData = true;\\n          }\\n\\n          console.log(this.items);\\n        });\\n      }, 500);\\n    },\\n    change(val) {\\n      const data = this.docField.fieldname;\\n      this.$set(this.doc, data, val);\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: me.docField.options,\\n          placeholder: __(\\\"\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.change(this.value);\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      customer_field.$input.val(me.doc[me.docField.fieldname]);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    makeDynamicDoctypeControl() {\\n      $(`#${this.docField.fieldname}`).html(\\\"\\\");\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: me.doc[me.docField.options],\\n          placeholder: __(\\\"\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              me.doc[me.docField.fieldname] = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      customer_field.$input.val(me.doc[me.docField.fieldname]);\\n      $(\\\"#modal-body\\\").find(\\\".input-max-width\\\").removeClass(\\\"input-max-width\\\");\\n    },\\n    uploadFile() {\\n      const me = this;\\n      new frappe.ui.FileUploader({\\n        doctype: \\\"Internal Memo\\\",\\n        docname: me.parentId,\\n        on_success(file_doc) {\\n          const { file_url, filename } = file_doc;\\n          me.doc[me.docField.fieldname] = file_url;\\n        },\\n      });\\n    },\\n    setCurrentDoctype(doctype, reference) {\\n      this.selectedDoctype = doctype;\\n      this.selectedReference = reference;\\n      if (reference && doctype) {\\n        this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n      }\\n\\n      // this.$refs[\\\"my-modal-1993\\\"].show();\\n    },\\n    processOptions(options) {\\n      if (!options) {\\n        return [];\\n      }\\n      let optionList = options.split(\\\"\\\\n\\\");\\n      return optionList;\\n    },\\n    childUpdated(val) {\\n      this.$emit(\\\"childUpdated\\\", { val, fieldname: this.docField.fieldname });\\n    },\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.required {\\n  color: red;\\n  font-size: 14px;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getDoctypeWithMeta } from \"./../../services/doctype/meta.js\";\nimport { createDoctype } from \"./../../services/doctype/list.js\";\nimport DocField from \"./DocField.vue\";\nconst __vue_script__ = {\n  name: \"DoctypeRender\",\n  data() {\n    return {\n      doctypeData: {},\n      doctype: {},\n      filterEmpty: false,\n      sections: [],\n      readOnly: false,\n      iconUp: \"fa-angle-up\",\n      iconDown: \"fa-angle-down\",\n      collapsed: false,\n      allowedFields: [],\n    };\n  },\n  components: { DocField },\n  mounted() {\n    this.$root.$on(\"bv::modal::shown\", (bvEvent, modalId) => {\n      this.loadDoctype();\n    });\n    this.loadDoctype();\n  },\n  created() {\n    this.isReadonly = this.readOnly;\n  },\n  props: {\n    doctypeInput: { type: String, default: \"\" },\n    doc_ref: { type: String, default: null },\n    fields: { type: Array, default: [] },\n    refresh: { type: String, required: false },\n  },\n  methods: {\n    loadDoctype() {\n      //  frappe.show_alert(\"loading form..\", 5);\n      if (window.currentDoctype) {\n        this.doctypeInput = window.currentDoctype;\n      }\n      if (window.currentDoctypeReference) {\n        this.doc_ref = window.currentDoctypeReference;\n      }\n\n      if (this.doc_ref) {\n        this.readOnly = true;\n      }\n      const payload = { doctype: this.doctypeInput, name: this.doc_ref };\n      getDoctypeWithMeta(payload).then((data) => {\n        this.doctypeData = data;\n        this.fields = data.meta.fields;\n        if (data.allowedFields && data.allowed_fields.allowed_fields) {\n          this.allowedFields = data.allowed_fields.allowed_fields;\n        }\n\n        this.doctype = data.data;\n        if (window.currentDoctype) {\n          this.doctype.doctype = window.currentDoctype;\n        }\n\n        this.getSections(this.fields);\n      });\n    },\n    getSections(fields) {\n      this.sections = [];\n      let currentSection = { fields: [], name: \"\" };\n      let checkList = this.allowedFields\n        .filter((x) => x.active)\n        .map((v) => v.field_name);\n      fields.forEach((item) => {\n        if (item.fieldtype !== \"Section Break\") {\n          if (\n            item.fieldname !== \"workflow_state\" &&\n            item.fieldname !== \"naming_series\" &&\n            item.fieldtype !== \"Button\" &&\n            item.fieldtype !== \"Html\"\n          ) {\n            if (\n              checkList.indexOf(item.fieldname) > -1 ||\n              checkList.length == 0\n            ) {\n              currentSection.fields.push(item);\n            }\n          }\n        } else {\n          this.sections.push(currentSection);\n          currentSection = { fields: [], name: \"\" };\n          currentSection.name = this.noSnake(item.fieldname);\n          currentSection.collapsed = false;\n          currentSection.collapsible = item.collapsible;\n        }\n      });\n\n      if (this.sections.length === 0) {\n        currentSection = { fields: [], name: \"\" };\n        currentSection.collapsed = false;\n        currentSection.collapsible = false;\n\n        fields.forEach((item) => {\n          if (\n            item.fieldname !== \"workflow_state\" &&\n            item.fieldname !== \"naming_series\" &&\n            item.fieldtype !== \"Button\" &&\n            item.fieldtype !== \"Html\"\n          ) {\n            if (checkList.indexOf(item.fieldname) > -1) {\n              currentSection.fields.push(item);\n            }\n          }\n        });\n\n        this.sections.push(currentSection);\n      }\n    },\n    noSnake(stringItem) {\n      if (!stringItem) {\n        return \"\";\n      }\n\n      if (stringItem.startsWith(\"section_break\")) {\n        return null;\n      }\n\n      if (stringItem.startsWith(\"sb_\")) {\n        stringItem = stringItem.replace(\"_sb\", \"\");\n      }\n\n      stringItem = stringItem.replaceAll(\"section_break\", \"section\");\n      let noSnakeString = stringItem.replaceAll(\"_\", \" \");\n      return noSnakeString.charAt(0).toUpperCase() + noSnakeString.slice(1);\n    },\n\n    getWidth(field) {\n      if (field) {\n        if (field.fieldname.startsWith(\"column_break\")) {\n          return \"12\";\n        }\n        if (field.fieldtype === \"Table\") {\n          return \"12\";\n        }\n\n        if (field.fieldtype === \"Text\") {\n          return \"12\";\n        }\n\n        if (field.fieldtype === \"Text Editor\") {\n          return \"12\";\n        }\n      }\n      return \"6\";\n    },\n    childUpdated(val) {\n      if (this.doctype[val.fieldname] !== val.val) {\n        this.$set(this.doctype, val.fieldname, val.val);\n      }\n    },\n    create() {\n      createDoctype(this.doctype).then((data) => {});\n    },\n  },\n  watch: {\n    $route(to, from) {\n      this.loadDoctype();\n    },\n    refreshed(val) {\n      this.loadDoctype();\n    },\n    doc_ref(vale){\n      this.loadDoctype();\n    }\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"mx-auto\" },\n    [\n      _c(\n        \"b-row\",\n        _vm._l(_vm.sections, function(section) {\n          return _c(\n            \"b-col\",\n            { key: section, staticClass: \"mb-3\", attrs: { cols: \"12\" } },\n            [\n              section.fields.length > 0 && !section.collapsible\n                ? _c(\n                    \"b-card\",\n                    { attrs: { title: section.name } },\n                    [\n                      _c(\n                        \"b-card-text\",\n                        [\n                          _c(\n                            \"b-row\",\n                            { staticClass: \"mt-2\" },\n                            _vm._l(section.fields, function(field) {\n                              return _c(\n                                \"b-col\",\n                                {\n                                  key: field,\n                                  attrs: { cols: _vm.getWidth(field) }\n                                },\n                                [\n                                  _c(\"doc-field\", {\n                                    attrs: {\n                                      docField: field,\n                                      doc: _vm.doctype,\n                                      readOnly: _vm.readOnly\n                                    },\n                                    on: { childUpdated: _vm.childUpdated }\n                                  })\n                                ],\n                                1\n                              )\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : section.fields.length > 0 && section.collapsible\n                ? _c(\n                    \"b-card\",\n                    { staticClass: \"mb-2\" },\n                    [\n                      _c(\n                        \"b-card-header\",\n                        {\n                          staticClass: \"p-1 header\",\n                          attrs: { \"header-tag\": \"header\", role: \"tab\" }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            {\n                              staticClass: \"head-toggle\",\n                              on: {\n                                click: function($event) {\n                                  section.collapsed = !section.collapsed\n                                }\n                              }\n                            },\n                            [\n                              _c(\n                                \"b-row\",\n                                [\n                                  _c(\"b-col\", { attrs: { cols: \"10\" } }, [\n                                    _c(\"h5\", { staticStyle: { margin: \"0\" } }, [\n                                      _vm._v(_vm._s(section.name))\n                                    ])\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"b-col\", { attrs: { cols: \"2\" } }, [\n                                    _c(\"span\", [\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"toggler pull-right ml-4 fa\",\n                                        class: section.collapsed\n                                          ? _vm.iconUp\n                                          : _vm.iconDown,\n                                        attrs: { \"aria-hidden\": \"true\" }\n                                      })\n                                    ])\n                                  ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-collapse\",\n                        {\n                          attrs: { id: \"accordion-1\", role: \"tabpanel\" },\n                          model: {\n                            value: section.collapsed,\n                            callback: function($$v) {\n                              _vm.$set(section, \"collapsed\", $$v)\n                            },\n                            expression: \"section.collapsed\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"b-card-body\",\n                            [\n                              _c(\n                                \"b-row\",\n                                { staticClass: \"mt-2\" },\n                                _vm._l(section.fields, function(field) {\n                                  return _c(\n                                    \"b-col\",\n                                    {\n                                      key: field,\n                                      attrs: { cols: _vm.getWidth(field) }\n                                    },\n                                    [\n                                      _c(\"doc-field\", {\n                                        attrs: {\n                                          docField: field,\n                                          doc: _vm.doctype,\n                                          readOnly: _vm.readOnly\n                                        },\n                                        on: { childUpdated: _vm.childUpdated }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                }),\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          !_vm.readOnly\n            ? _c(\n                \"b-button\",\n                {\n                  attrs: { variant: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.create()\n                    }\n                  }\n                },\n                [_vm._v(\"\\n      create\")]\n              )\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-88b8b55c_0\", { source: \"\\n.card[data-v-88b8b55c] {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n.head-toggle[data-v-88b8b55c] {\\n  outline: 0;\\n}\\n.header[data-v-88b8b55c] {\\n  background: transparent;\\n}\\n.card-header[data-v-88b8b55c] {\\n  /* padding: .5rem 1.25rem;\\n    margin-bottom: 0;\\n    background-color: rgba(0,0,0,.03); */\\n  border-bottom: 0px solid rgba(0, 0, 0, 0.125);\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/html/doctype/DoctypeRender.vue\"],\"names\":[],\"mappings\":\";AAoQA;EACA,4CAAA;EACA,0CAAA;EACA,gBAAA;AACA;AAEA;EACA,UAAA;AACA;AACA;EACA,uBAAA;AACA;AACA;EACA;;wCAEA;EACA,6CAAA;AACA\",\"file\":\"DoctypeRender.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"mx-auto\\\">\\n    <b-row>\\n      <b-col cols=\\\"12\\\" v-for=\\\"section in sections\\\" :key=\\\"section\\\" class=\\\"mb-3\\\">\\n        <b-card\\n          :title=\\\"section.name\\\"\\n          v-if=\\\"section.fields.length > 0 && !section.collapsible\\\"\\n        >\\n          <b-card-text>\\n            <b-row class=\\\"mt-2\\\">\\n              <b-col\\n                :cols=\\\"getWidth(field)\\\"\\n                v-for=\\\"field in section.fields\\\"\\n                :key=\\\"field\\\"\\n              >\\n                <doc-field\\n                  :docField=\\\"field\\\"\\n                  @childUpdated=\\\"childUpdated\\\"\\n                  :doc=\\\"doctype\\\"\\n                  :readOnly=\\\"readOnly\\\"\\n                />\\n              </b-col>\\n            </b-row>\\n          </b-card-text>\\n        </b-card>\\n\\n        <b-card\\n          v-else-if=\\\"section.fields.length > 0 && section.collapsible\\\"\\n          class=\\\"mb-2\\\"\\n        >\\n          <b-card-header header-tag=\\\"header\\\" class=\\\"p-1 header\\\" role=\\\"tab\\\">\\n            <div\\n              class=\\\"head-toggle\\\"\\n              @click=\\\"section.collapsed = !section.collapsed\\\"\\n            >\\n              <b-row>\\n                <b-col cols=\\\"10\\\">\\n                  <h5 style=\\\"margin: 0\\\">{{ section.name }}</h5>\\n                </b-col>\\n                <b-col cols=\\\"2\\\">\\n                  <span\\n                    ><i\\n                      class=\\\"toggler pull-right ml-4 fa\\\"\\n                      v-bind:class=\\\"section.collapsed ? iconUp : iconDown\\\"\\n                      aria-hidden=\\\"true\\\"\\n                    ></i>\\n                  </span>\\n                </b-col>\\n              </b-row>\\n            </div>\\n          </b-card-header>\\n          <b-collapse\\n            v-model=\\\"section.collapsed\\\"\\n            id=\\\"accordion-1\\\"\\n            role=\\\"tabpanel\\\"\\n          >\\n            <b-card-body>\\n              <b-row class=\\\"mt-2\\\">\\n                <b-col\\n                  :cols=\\\"getWidth(field)\\\"\\n                  v-for=\\\"field in section.fields\\\"\\n                  :key=\\\"field\\\"\\n                >\\n                  <doc-field\\n                    :docField=\\\"field\\\"\\n                    :doc=\\\"doctype\\\"\\n                    @childUpdated=\\\"childUpdated\\\"\\n                    :readOnly=\\\"readOnly\\\"\\n                  />\\n                </b-col>\\n              </b-row>\\n            </b-card-body>\\n          </b-collapse>\\n        </b-card>\\n      </b-col>\\n    </b-row>\\n    <b-row>\\n      <b-button v-if=\\\"!readOnly\\\" variant=\\\"primary\\\" @click=\\\"create()\\\">\\n        create</b-button\\n      >\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport { getDoctypeWithMeta } from \\\"./../../services/doctype/meta.js\\\";\\nimport { createDoctype } from \\\"./../../services/doctype/list.js\\\";\\nimport DocField from \\\"./DocField.vue\\\";\\nexport default {\\n  name: \\\"DoctypeRender\\\",\\n  data() {\\n    return {\\n      doctypeData: {},\\n      doctype: {},\\n      filterEmpty: false,\\n      sections: [],\\n      readOnly: false,\\n      iconUp: \\\"fa-angle-up\\\",\\n      iconDown: \\\"fa-angle-down\\\",\\n      collapsed: false,\\n      allowedFields: [],\\n    };\\n  },\\n  components: { DocField },\\n  mounted() {\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.loadDoctype();\\n    });\\n    this.loadDoctype();\\n  },\\n  created() {\\n    this.isReadonly = this.readOnly;\\n  },\\n  props: {\\n    doctypeInput: { type: String, default: \\\"\\\" },\\n    doc_ref: { type: String, default: null },\\n    fields: { type: Array, default: [] },\\n    refresh: { type: String, required: false },\\n  },\\n  methods: {\\n    loadDoctype() {\\n      //  frappe.show_alert(\\\"loading form..\\\", 5);\\n      if (window.currentDoctype) {\\n        this.doctypeInput = window.currentDoctype;\\n      }\\n      if (window.currentDoctypeReference) {\\n        this.doc_ref = window.currentDoctypeReference;\\n      }\\n\\n      if (this.doc_ref) {\\n        this.readOnly = true;\\n      }\\n      const payload = { doctype: this.doctypeInput, name: this.doc_ref };\\n      getDoctypeWithMeta(payload).then((data) => {\\n        this.doctypeData = data;\\n        this.fields = data.meta.fields;\\n        if (data.allowedFields && data.allowed_fields.allowed_fields) {\\n          this.allowedFields = data.allowed_fields.allowed_fields;\\n        }\\n\\n        this.doctype = data.data;\\n        if (window.currentDoctype) {\\n          this.doctype.doctype = window.currentDoctype;\\n        }\\n\\n        this.getSections(this.fields);\\n      });\\n    },\\n    getSections(fields) {\\n      this.sections = [];\\n      let currentSection = { fields: [], name: \\\"\\\" };\\n      let checkList = this.allowedFields\\n        .filter((x) => x.active)\\n        .map((v) => v.field_name);\\n      fields.forEach((item) => {\\n        if (item.fieldtype !== \\\"Section Break\\\") {\\n          if (\\n            item.fieldname !== \\\"workflow_state\\\" &&\\n            item.fieldname !== \\\"naming_series\\\" &&\\n            item.fieldtype !== \\\"Button\\\" &&\\n            item.fieldtype !== \\\"Html\\\"\\n          ) {\\n            if (\\n              checkList.indexOf(item.fieldname) > -1 ||\\n              checkList.length == 0\\n            ) {\\n              currentSection.fields.push(item);\\n            }\\n          }\\n        } else {\\n          this.sections.push(currentSection);\\n          currentSection = { fields: [], name: \\\"\\\" };\\n          currentSection.name = this.noSnake(item.fieldname);\\n          currentSection.collapsed = false;\\n          currentSection.collapsible = item.collapsible;\\n        }\\n      });\\n\\n      if (this.sections.length === 0) {\\n        currentSection = { fields: [], name: \\\"\\\" };\\n        currentSection.collapsed = false;\\n        currentSection.collapsible = false;\\n\\n        fields.forEach((item) => {\\n          if (\\n            item.fieldname !== \\\"workflow_state\\\" &&\\n            item.fieldname !== \\\"naming_series\\\" &&\\n            item.fieldtype !== \\\"Button\\\" &&\\n            item.fieldtype !== \\\"Html\\\"\\n          ) {\\n            if (checkList.indexOf(item.fieldname) > -1) {\\n              currentSection.fields.push(item);\\n            }\\n          }\\n        });\\n\\n        this.sections.push(currentSection);\\n      }\\n    },\\n    noSnake(stringItem) {\\n      if (!stringItem) {\\n        return \\\"\\\";\\n      }\\n\\n      if (stringItem.startsWith(\\\"section_break\\\")) {\\n        return null;\\n      }\\n\\n      if (stringItem.startsWith(\\\"sb_\\\")) {\\n        stringItem = stringItem.replace(\\\"_sb\\\", \\\"\\\");\\n      }\\n\\n      stringItem = stringItem.replaceAll(\\\"section_break\\\", \\\"section\\\");\\n      let noSnakeString = stringItem.replaceAll(\\\"_\\\", \\\" \\\");\\n      return noSnakeString.charAt(0).toUpperCase() + noSnakeString.slice(1);\\n    },\\n\\n    getWidth(field) {\\n      if (field) {\\n        if (field.fieldname.startsWith(\\\"column_break\\\")) {\\n          return \\\"12\\\";\\n        }\\n        if (field.fieldtype === \\\"Table\\\") {\\n          return \\\"12\\\";\\n        }\\n\\n        if (field.fieldtype === \\\"Text\\\") {\\n          return \\\"12\\\";\\n        }\\n\\n        if (field.fieldtype === \\\"Text Editor\\\") {\\n          return \\\"12\\\";\\n        }\\n      }\\n      return \\\"6\\\";\\n    },\\n    childUpdated(val) {\\n      if (this.doctype[val.fieldname] !== val.val) {\\n        this.$set(this.doctype, val.fieldname, val.val);\\n      }\\n    },\\n    create() {\\n      createDoctype(this.doctype).then((data) => {});\\n    },\\n  },\\n  watch: {\\n    $route(to, from) {\\n      this.loadDoctype();\\n    },\\n    refreshed(val) {\\n      this.loadDoctype();\\n    },\\n    doc_ref(vale){\\n      this.loadDoctype();\\n    }\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n.head-toggle {\\n  outline: 0;\\n}\\n.header {\\n  background: transparent;\\n}\\n.card-header {\\n  /* padding: .5rem 1.25rem;\\n    margin-bottom: 0;\\n    background-color: rgba(0,0,0,.03); */\\n  border-bottom: 0px solid rgba(0, 0, 0, 0.125);\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-88b8b55c\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"mx-auto\\\">\\n    <b-row>\\n      <b-col cols=\\\"12\\\" v-for=\\\"section in sections\\\" :key=\\\"section\\\" class=\\\"mb-3\\\">\\n        <b-card\\n          :title=\\\"section.name\\\"\\n          v-if=\\\"section.fields.length > 0 && !section.collapsible\\\"\\n        >\\n          <b-card-text>\\n            <b-row class=\\\"mt-2\\\">\\n              <b-col\\n                :cols=\\\"getWidth(field)\\\"\\n                v-for=\\\"field in section.fields\\\"\\n                :key=\\\"field\\\"\\n              >\\n                <doc-field\\n                  :docField=\\\"field\\\"\\n                  @childUpdated=\\\"childUpdated\\\"\\n                  :doc=\\\"doctype\\\"\\n                  :readOnly=\\\"readOnly\\\"\\n                />\\n              </b-col>\\n            </b-row>\\n          </b-card-text>\\n        </b-card>\\n\\n        <b-card\\n          v-else-if=\\\"section.fields.length > 0 && section.collapsible\\\"\\n          class=\\\"mb-2\\\"\\n        >\\n          <b-card-header header-tag=\\\"header\\\" class=\\\"p-1 header\\\" role=\\\"tab\\\">\\n            <div\\n              class=\\\"head-toggle\\\"\\n              @click=\\\"section.collapsed = !section.collapsed\\\"\\n            >\\n              <b-row>\\n                <b-col cols=\\\"10\\\">\\n                  <h5 style=\\\"margin: 0\\\">{{ section.name }}</h5>\\n                </b-col>\\n                <b-col cols=\\\"2\\\">\\n                  <span\\n                    ><i\\n                      class=\\\"toggler pull-right ml-4 fa\\\"\\n                      v-bind:class=\\\"section.collapsed ? iconUp : iconDown\\\"\\n                      aria-hidden=\\\"true\\\"\\n                    ></i>\\n                  </span>\\n                </b-col>\\n              </b-row>\\n            </div>\\n          </b-card-header>\\n          <b-collapse\\n            v-model=\\\"section.collapsed\\\"\\n            id=\\\"accordion-1\\\"\\n            role=\\\"tabpanel\\\"\\n          >\\n            <b-card-body>\\n              <b-row class=\\\"mt-2\\\">\\n                <b-col\\n                  :cols=\\\"getWidth(field)\\\"\\n                  v-for=\\\"field in section.fields\\\"\\n                  :key=\\\"field\\\"\\n                >\\n                  <doc-field\\n                    :docField=\\\"field\\\"\\n                    :doc=\\\"doctype\\\"\\n                    @childUpdated=\\\"childUpdated\\\"\\n                    :readOnly=\\\"readOnly\\\"\\n                  />\\n                </b-col>\\n              </b-row>\\n            </b-card-body>\\n          </b-collapse>\\n        </b-card>\\n      </b-col>\\n    </b-row>\\n    <b-row>\\n      <b-button v-if=\\\"!readOnly\\\" variant=\\\"primary\\\" @click=\\\"create()\\\">\\n        create</b-button\\n      >\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport { getDoctypeWithMeta } from \\\"./../../services/doctype/meta.js\\\";\\nimport { createDoctype } from \\\"./../../services/doctype/list.js\\\";\\nimport DocField from \\\"./DocField.vue\\\";\\nexport default {\\n  name: \\\"DoctypeRender\\\",\\n  data() {\\n    return {\\n      doctypeData: {},\\n      doctype: {},\\n      filterEmpty: false,\\n      sections: [],\\n      readOnly: false,\\n      iconUp: \\\"fa-angle-up\\\",\\n      iconDown: \\\"fa-angle-down\\\",\\n      collapsed: false,\\n      allowedFields: [],\\n    };\\n  },\\n  components: { DocField },\\n  mounted() {\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.loadDoctype();\\n    });\\n    this.loadDoctype();\\n  },\\n  created() {\\n    this.isReadonly = this.readOnly;\\n  },\\n  props: {\\n    doctypeInput: { type: String, default: \\\"\\\" },\\n    doc_ref: { type: String, default: null },\\n    fields: { type: Array, default: [] },\\n    refresh: { type: String, required: false },\\n  },\\n  methods: {\\n    loadDoctype() {\\n      //  frappe.show_alert(\\\"loading form..\\\", 5);\\n      if (window.currentDoctype) {\\n        this.doctypeInput = window.currentDoctype;\\n      }\\n      if (window.currentDoctypeReference) {\\n        this.doc_ref = window.currentDoctypeReference;\\n      }\\n\\n      if (this.doc_ref) {\\n        this.readOnly = true;\\n      }\\n      const payload = { doctype: this.doctypeInput, name: this.doc_ref };\\n      getDoctypeWithMeta(payload).then((data) => {\\n        this.doctypeData = data;\\n        this.fields = data.meta.fields;\\n        if (data.allowedFields && data.allowed_fields.allowed_fields) {\\n          this.allowedFields = data.allowed_fields.allowed_fields;\\n        }\\n\\n        this.doctype = data.data;\\n        if (window.currentDoctype) {\\n          this.doctype.doctype = window.currentDoctype;\\n        }\\n\\n        this.getSections(this.fields);\\n      });\\n    },\\n    getSections(fields) {\\n      this.sections = [];\\n      let currentSection = { fields: [], name: \\\"\\\" };\\n      let checkList = this.allowedFields\\n        .filter((x) => x.active)\\n        .map((v) => v.field_name);\\n      fields.forEach((item) => {\\n        if (item.fieldtype !== \\\"Section Break\\\") {\\n          if (\\n            item.fieldname !== \\\"workflow_state\\\" &&\\n            item.fieldname !== \\\"naming_series\\\" &&\\n            item.fieldtype !== \\\"Button\\\" &&\\n            item.fieldtype !== \\\"Html\\\"\\n          ) {\\n            if (\\n              checkList.indexOf(item.fieldname) > -1 ||\\n              checkList.length == 0\\n            ) {\\n              currentSection.fields.push(item);\\n            }\\n          }\\n        } else {\\n          this.sections.push(currentSection);\\n          currentSection = { fields: [], name: \\\"\\\" };\\n          currentSection.name = this.noSnake(item.fieldname);\\n          currentSection.collapsed = false;\\n          currentSection.collapsible = item.collapsible;\\n        }\\n      });\\n\\n      if (this.sections.length === 0) {\\n        currentSection = { fields: [], name: \\\"\\\" };\\n        currentSection.collapsed = false;\\n        currentSection.collapsible = false;\\n\\n        fields.forEach((item) => {\\n          if (\\n            item.fieldname !== \\\"workflow_state\\\" &&\\n            item.fieldname !== \\\"naming_series\\\" &&\\n            item.fieldtype !== \\\"Button\\\" &&\\n            item.fieldtype !== \\\"Html\\\"\\n          ) {\\n            if (checkList.indexOf(item.fieldname) > -1) {\\n              currentSection.fields.push(item);\\n            }\\n          }\\n        });\\n\\n        this.sections.push(currentSection);\\n      }\\n    },\\n    noSnake(stringItem) {\\n      if (!stringItem) {\\n        return \\\"\\\";\\n      }\\n\\n      if (stringItem.startsWith(\\\"section_break\\\")) {\\n        return null;\\n      }\\n\\n      if (stringItem.startsWith(\\\"sb_\\\")) {\\n        stringItem = stringItem.replace(\\\"_sb\\\", \\\"\\\");\\n      }\\n\\n      stringItem = stringItem.replaceAll(\\\"section_break\\\", \\\"section\\\");\\n      let noSnakeString = stringItem.replaceAll(\\\"_\\\", \\\" \\\");\\n      return noSnakeString.charAt(0).toUpperCase() + noSnakeString.slice(1);\\n    },\\n\\n    getWidth(field) {\\n      if (field) {\\n        if (field.fieldname.startsWith(\\\"column_break\\\")) {\\n          return \\\"12\\\";\\n        }\\n        if (field.fieldtype === \\\"Table\\\") {\\n          return \\\"12\\\";\\n        }\\n\\n        if (field.fieldtype === \\\"Text\\\") {\\n          return \\\"12\\\";\\n        }\\n\\n        if (field.fieldtype === \\\"Text Editor\\\") {\\n          return \\\"12\\\";\\n        }\\n      }\\n      return \\\"6\\\";\\n    },\\n    childUpdated(val) {\\n      if (this.doctype[val.fieldname] !== val.val) {\\n        this.$set(this.doctype, val.fieldname, val.val);\\n      }\\n    },\\n    create() {\\n      createDoctype(this.doctype).then((data) => {});\\n    },\\n  },\\n  watch: {\\n    $route(to, from) {\\n      this.loadDoctype();\\n    },\\n    refreshed(val) {\\n      this.loadDoctype();\\n    },\\n    doc_ref(vale){\\n      this.loadDoctype();\\n    }\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n.head-toggle {\\n  outline: 0;\\n}\\n.header {\\n  background: transparent;\\n}\\n.card-header {\\n  /* padding: .5rem 1.25rem;\\n    margin-bottom: 0;\\n    background-color: rgba(0,0,0,.03); */\\n  border-bottom: 0px solid rgba(0, 0, 0, 0.125);\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n\nconst __vue_script__ = {\n  name: \"DoctypeLink\",\n  props: {\n    doctype: { type: String },\n    label: { type: String },\n    fieldname: { type: String },\n    placeholder:{type: String},\n  },\n  mounted() {\n   this.makeControl();\n  },\n  methods: {\n    sendData(data){\n       this.$emit(\"data\", data);\n    },\n    makeControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: me.label,\n          fieldtype: \"Link\",\n          fieldname: me.fieldname,\n          options: me.doctype,\n          placeholder:me.placeholder,\n          onchange: function () {\n            if (this.value) {\n              const mime = this;\n                me.sendData(this.value)\n             \n            }\n          },\n        },\n        parent: this.$refs[\"comment-input\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n    },\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [_c(\"div\", { ref: \"comment-input\" })])\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-66d7d10e_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"DoctypeLink.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n<div>\\n  <div ref=\\\"comment-input\\\"></div>\\n</div>\\n\\n</template>\\n\\n<script>\\nexport default {\\n  name: \\\"DoctypeLink\\\",\\n  props: {\\n    doctype: { type: String },\\n    label: { type: String },\\n    fieldname: { type: String },\\n    placeholder:{type: String},\\n  },\\n  mounted() {\\n   this.makeControl();\\n  },\\n  methods: {\\n    sendData(data){\\n       this.$emit(\\\"data\\\", data);\\n    },\\n    makeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: me.label,\\n          fieldtype: \\\"Link\\\",\\n          fieldname: me.fieldname,\\n          options: me.doctype,\\n          placeholder:me.placeholder,\\n          onchange: function () {\\n            if (this.value) {\\n              const mime = this;\\n                me.sendData(this.value)\\n             \\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"comment-input\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n    },\\n  },\\n};\\n</script>\\n\\n<style>\\n</style>\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ChildTable from \"./../../html/doctype/ChildTable.vue\";\nimport DoctypeRender from \"./../../html/doctype/DoctypeRender.vue\";\nimport DoctypeLink from \"./DoctypeLink.vue\";\nimport { getDoctypeWithMeta } from \"./../..//services/doctype/meta.js\";\nimport { fetchConditionalItemPrice,  createCustomSalesOrder, getUserWarehouses} from \"../../services/accounts/patient.js\";\nconst __vue_script__ = {\n  components: {\n    ChildTable,\n    DoctypeLink,\n    DoctypeRender,\n  },\n  props: {\n    customerNumber: {\n      type: String,\n      default: \" \",\n      required: true,\n    },\n      patient_number: {\n      type: String,\n      default: \" \",\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectedDoctypeReference: null,\n      fields: [\"items\"],\n      result: [],\n      warehouses: [],\n      tableData: {},\n      currentWarehouse:null,\n      condition :true,\n      isBilling:false,\n      total:100,\n      currentProgress:10,\n\n    };\n  },\n  created() {\n     getUserWarehouses().then(r => {\n            r.map(warehouse => {\n                this.warehouses.push(warehouse['for_value'])\n                console.log(this.warehouses);\n            });\n            if(this.warehouses.length){\n              this.currentWarehouse =this.warehouses[0]\n            }\n        });\n\n  },\n  methods: {\n    setWarehouse(unit){\n      this.currentWarehouse = unit;\n    },\n    processData(data) {\n      this.selectedDoctypeReference = data;\n      this.getData(this.selectedDoctypeReference);\n    },\n    getData(ref) {\n      const payload = { doctype: \"Billing Template\", name: ref };\n      getDoctypeWithMeta(payload).then((result) => {\n        this.result = result.data.items;\n      });\n    },\n    populatePrices() {\n      this.tableData.forEach((element, index) => {\n        let quantity = parseInt(element.qty);\n        if (element.rate == 0) {\n          fetchConditionalItemPrice({\n            item_code: element.item,\n            customer: this.customerNumber,\n          }).then((res) => {\n            if (res.type === \"Patient\") {\n              let price = res.price;\n              let amount = Math.ceil(price * quantity);\n              element.rate = price;\n              element.amount = amount;\n              if (res.is_nhif === true && notify === true) {\n                frappe.msgprint({\n                  title: __(\"Note\"),\n                  message: __(\n                    \"Patient will be charged for this item due to insufficient insurance balance\"\n                  ),\n                  primary_action: {},\n                });\n              }\n            } else if (res.type === \"Copay\") {\n              let price = res.price;\n              let amount = Math.ceil(\n                price * (res.remaining_quantity * quantity)\n              );\n              element.rate = price;\n              element.amount = amount;\n            } else if (res.type === \"Insurance\") {\n              let price = res.price;\n              let amount = Math.ceil(price * quantity);\n              element.rate = price;\n              element.amount = \"0\";\n              value.payer = \"Insurance: \" + \"(\" + amount + \")\";\n            } else if (res.type === \"Pre-auth Insurance\") {\n              let price = res.price;\n              let amount = Math.ceil(price * quantity);\n              element.rate = price;\n              element.amount = \"0\";\n            } else if (res.type === \"Pre-auth Copay\") {\n              let price = res.price;\n              let amount = Math.ceil(\n                price * (res.remaining_quantity * quantity)\n              );\n              element.rate = price;\n              element.amount = amount;\n            }\n\n            this.table[index] = element;\n          });\n        }\n      });\n      this.result = this.tableData;\n    },\n    reset(){\n        this.selectedDoctypeReference=null;\n        this.tableData = [];\n        this.result = [];\n\n    },\n\n    confirmBilling() {\n        this.boxOne = ''\n        var parent = this;\n        var values = [];\n        this.$bvModal.msgBoxConfirm(`Are you want to save this bill of KES ${this.result.map(item=>item.amount).reduce((partialSum, a) => partialSum + a, 0).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}?`)\n          .then(value => {\n              if(value){     \n                parent.isBilling = true;           \n                parent.result.forEach(item =>{\n                    \n                   createCustomSalesOrder({\n                    item_name: item.item,\n                    qty: item.qty,\n                    warehouse: parent.currentWarehouse ||  \"\",\n                    customer_name: parent.customerNumber,\n                    patient: parent.patient_number,\n                  }).then((r) => {\n                      values.push(item);\n                      let total = parent.result.length;\n                      let currentProgress = values.length;\n                    console.log(JSON.stringify(r));                \n                      parent.total = total\n                    parent.currentProgress = currentProgress;\n                      if(currentProgress == total){\n                       parent.reset();\n                       parent.isBilling =false;\n                    }\n                   \n     \n                  }).catch(e =>{\n                      alert(`Error ${e}`);\n                  });\n                })\n              }\n            this.boxOne = value\n          })\n          .catch(err => {\n            // An error occurred\n          })\n      },\n\n    childUpdated(data) {\n      this.result = data;\n      this.tableData = data;\n      this.tableData = this.tableData.map((item) => {\n        if (item.rate) {\n          item.amount = parseInt(item.qty) * item.rate;\n        }\n\n        return item;\n      });\n    },\n    \n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"p-5 mb-12\", staticStyle: { width: \"100%\" } },\n    [\n      _c(\n        \"b-row\",\n        { staticClass: \"pl-3 pr-3\" },\n        [\n          _c(\"b-col\"),\n          _vm._v(\" \"),\n          _c(\n            \"b-dropdown\",\n            {\n              staticClass: \"m-2\",\n              attrs: {\n                id: \"dropdown-dropup\",\n                dropup: \"\",\n                text: _vm.currentWarehouse || \"Select service unit\",\n                split: \"\",\n                \"split-variant\": \"outline-primary\",\n                variant: \"primary\"\n              }\n            },\n            _vm._l(_vm.warehouses, function(warehouse) {\n              return _c(\n                \"b-dropdown-item\",\n                {\n                  key: warehouse,\n                  attrs: { href: \"#\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.setWarehouse(warehouse)\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(warehouse))]\n              )\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        { staticClass: \"p-4 pl-3\" },\n        [\n          _c(\"h4\", [_vm._v(\"Search for billing template\")]),\n          _vm._v(\" \"),\n          _c(\"b-col\"),\n          _vm._v(\" \"),\n          _c(\n            \"b-button-group\",\n            [\n              _vm.result.length\n                ? _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.populatePrices()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Populate Missing prices\")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"div\", { staticStyle: { width: \"5px\", color: \"white\" } }),\n              _vm._v(\" \"),\n              _vm.result.length\n                ? _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.confirmBilling()\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\"\\n        Bill Patient  \"),\n                      _c(\"b-badge\", { attrs: { variant: \"light\" } }, [\n                        _vm._v(\n                          \" KES \" +\n                            _vm._s(\n                              _vm.result\n                                .map(function(item) {\n                                  return item.amount\n                                })\n                                .reduce(function(partialSum, a) {\n                                  return partialSum + a\n                                }, 0)\n                                .toFixed(2)\n                                .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")\n                            )\n                        )\n                      ])\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      !_vm.isBilling\n        ? _c(\"doctype-link\", {\n            staticStyle: { width: \"100%\" },\n            attrs: {\n              doctype: \"Billing Template\",\n              label: \"Billing Template\",\n              fieldname: \"template\"\n            },\n            on: { data: _vm.processData }\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.isBilling\n        ? _c(\n            \"b-row\",\n            [\n              _c(\"h5\", [_vm._v(\"Billing progress\")]),\n              _vm._v(\" \"),\n              _c(\"b-progress\", {\n                staticClass: \"mb-3\",\n                attrs: { value: _vm.currentProgress, max: _vm.total }\n              })\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.result.length\n        ? _c(\"b-row\", { staticStyle: { width: \"100% ml-2\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"card\", staticStyle: { width: \"100%\" } },\n              [\n                _c(\"child-table\", {\n                  staticClass: \"p-4\",\n                  staticStyle: { width: \"100%\" },\n                  attrs: {\n                    doctype: \"Billing Template Item\",\n                    tableData: _vm.result,\n                    readOnly: false\n                  },\n                  on: { childUpdated: _vm.childUpdated }\n                })\n              ],\n              1\n            )\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-cd4cef0c_0\", { source: \"\\n.card[data-v-cd4cef0c] {\\n  box-shadow: 0 0px 0px 0 rgb(0 0 0 / 20%);\\n  transition: 0.3s;\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: border-box;\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n  border-radius: 0.75rem;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/accounts/accounts/TemplateBilling.vue\"],\"names\":[],\"mappings\":\";AAsPA;EACA,wCAAA;EACA,gBAAA;EACA,kBAAA;EACA,aAAA;EACA,sBAAA;EACA,YAAA;EACA,qBAAA;EACA,sBAAA;EACA,2BAAA;EACA,sCAAA;EACA,sBAAA;AACA\",\"file\":\"TemplateBilling.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"p-5 mb-12\\\" style=\\\"width: 100%\\\">\\n    <b-row class=\\\"pl-3 pr-3\\\">\\n      <b-col></b-col>\\n         <b-dropdown id=\\\"dropdown-dropup\\\" dropup :text=\\\"currentWarehouse||'Select service unit'\\\"  split\\n    split-variant=\\\"outline-primary\\\"\\n    variant=\\\"primary\\\" class=\\\"m-2\\\">\\n        <b-dropdown-item v-for=\\\" warehouse in warehouses \\\" :key=\\\"warehouse\\\" href=\\\"#\\\" @click=\\\"setWarehouse(warehouse)\\\">{{warehouse}}</b-dropdown-item>\\n        </b-dropdown>\\n    </b-row>\\n    <b-row class=\\\"p-4 pl-3\\\">\\n      <h4>Search for billing template</h4>\\n      <b-col></b-col>\\n   \\n\\n      <b-button-group>\\n        \\n        <b-button\\n          variant=\\\"primary\\\"\\n          v-if=\\\"result.length\\\"\\n          @click=\\\"populatePrices()\\\"\\n        >\\n          Populate Missing prices</b-button>\\n         <div style=\\\"width:5px;color:white\\\"></div>\\n        <b-button variant=\\\"primary\\\" v-if=\\\"result.length\\\" @click=\\\"confirmBilling()\\\">\\n          Bill Patient  <b-badge variant=\\\"light\\\"> KES {{result.map(item=>item.amount).reduce((partialSum, a) => partialSum + a, 0).toFixed(2).replace(/\\\\d(?=(\\\\d{3})+\\\\.)/g, '$&,') }}</b-badge></b-button\\n        >\\n      </b-button-group>\\n    </b-row>\\n\\n    <doctype-link\\n     v-if=\\\"!isBilling\\\"\\n      :doctype=\\\"'Billing Template'\\\"\\n      :label=\\\"'Billing Template'\\\"\\n      :fieldname=\\\"'template'\\\"\\n      @data=\\\"processData\\\"\\n      style=\\\"width: 100%\\\"\\n    ></doctype-link>\\n\\n    <b-row v-if=\\\"isBilling\\\">\\n    <h5>Billing progress</h5>\\n    <b-progress :value=\\\"currentProgress\\\" :max=\\\"total\\\" class=\\\"mb-3\\\"></b-progress>\\n  \\n    </b-row>\\n\\n    <b-row style=\\\"width: 100% ml-2\\\" v-if=\\\"result.length\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 100%\\\">\\n        <child-table\\n          class=\\\"p-4\\\"\\n          style=\\\"width: 100%\\\"\\n          :doctype=\\\"'Billing Template Item'\\\"\\n          :tableData=\\\"result\\\"\\n          :readOnly=\\\"false\\\"\\n          @childUpdated=\\\"childUpdated\\\"\\n        ></child-table>\\n      </div>\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n\\n<script>\\nimport ChildTable from \\\"./../../html/doctype/ChildTable.vue\\\";\\nimport DoctypeRender from \\\"./../../html/doctype/DoctypeRender.vue\\\";\\nimport DoctypeLink from \\\"./DoctypeLink.vue\\\";\\nimport { getDoctypeWithMeta } from \\\"./../..//services/doctype/meta.js\\\";\\nimport { fetchConditionalItemPrice,  createCustomSalesOrder, getUserWarehouses} from \\\"../../services/accounts/patient.js\\\";\\nexport default {\\n  components: {\\n    ChildTable,\\n    DoctypeLink,\\n    DoctypeRender,\\n  },\\n  props: {\\n    customerNumber: {\\n      type: String,\\n      default: \\\" \\\",\\n      required: true,\\n    },\\n      patient_number: {\\n      type: String,\\n      default: \\\" \\\",\\n      required: true,\\n    },\\n  },\\n  data() {\\n    return {\\n      selectedDoctypeReference: null,\\n      fields: [\\\"items\\\"],\\n      result: [],\\n      warehouses: [],\\n      tableData: {},\\n      currentWarehouse:null,\\n      condition :true,\\n      isBilling:false,\\n      total:100,\\n      currentProgress:10,\\n\\n    };\\n  },\\n  created() {\\n     getUserWarehouses().then(r => {\\n            r.map(warehouse => {\\n                this.warehouses.push(warehouse['for_value'])\\n                console.log(this.warehouses);\\n            });\\n            if(this.warehouses.length){\\n              this.currentWarehouse =this.warehouses[0]\\n            }\\n        });\\n\\n  },\\n  methods: {\\n    setWarehouse(unit){\\n      this.currentWarehouse = unit;\\n    },\\n    processData(data) {\\n      this.selectedDoctypeReference = data;\\n      this.getData(this.selectedDoctypeReference);\\n    },\\n    getData(ref) {\\n      const payload = { doctype: \\\"Billing Template\\\", name: ref };\\n      getDoctypeWithMeta(payload).then((result) => {\\n        this.result = result.data.items;\\n      });\\n    },\\n    populatePrices() {\\n      this.tableData.forEach((element, index) => {\\n        let quantity = parseInt(element.qty);\\n        if (element.rate == 0) {\\n          fetchConditionalItemPrice({\\n            item_code: element.item,\\n            customer: this.customerNumber,\\n          }).then((res) => {\\n            if (res.type === \\\"Patient\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(price * quantity);\\n              element.rate = price;\\n              element.amount = amount;\\n              if (res.is_nhif === true && notify === true) {\\n                frappe.msgprint({\\n                  title: __(\\\"Note\\\"),\\n                  message: __(\\n                    \\\"Patient will be charged for this item due to insufficient insurance balance\\\"\\n                  ),\\n                  primary_action: {},\\n                });\\n              }\\n            } else if (res.type === \\\"Copay\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(\\n                price * (res.remaining_quantity * quantity)\\n              );\\n              element.rate = price;\\n              element.amount = amount;\\n            } else if (res.type === \\\"Insurance\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(price * quantity);\\n              element.rate = price;\\n              element.amount = \\\"0\\\";\\n              value.payer = \\\"Insurance: \\\" + \\\"(\\\" + amount + \\\")\\\";\\n            } else if (res.type === \\\"Pre-auth Insurance\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(price * quantity);\\n              element.rate = price;\\n              element.amount = \\\"0\\\";\\n            } else if (res.type === \\\"Pre-auth Copay\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(\\n                price * (res.remaining_quantity * quantity)\\n              );\\n              element.rate = price;\\n              element.amount = amount;\\n            }\\n\\n            this.table[index] = element;\\n          });\\n        }\\n      });\\n      this.result = this.tableData;\\n    },\\n    reset(){\\n        this.selectedDoctypeReference=null;\\n        this.tableData = [];\\n        this.result = [];\\n\\n    },\\n\\n    confirmBilling() {\\n        this.boxOne = ''\\n        var parent = this;\\n        var values = [];\\n        this.$bvModal.msgBoxConfirm(`Are you want to save this bill of KES ${this.result.map(item=>item.amount).reduce((partialSum, a) => partialSum + a, 0).toFixed(2).replace(/\\\\d(?=(\\\\d{3})+\\\\.)/g, '$&,')}?`)\\n          .then(value => {\\n              if(value){     \\n                parent.isBilling = true;           \\n                parent.result.forEach(item =>{\\n                    \\n                   createCustomSalesOrder({\\n                    item_name: item.item,\\n                    qty: item.qty,\\n                    warehouse: parent.currentWarehouse ||  \\\"\\\",\\n                    customer_name: parent.customerNumber,\\n                    patient: parent.patient_number,\\n                  }).then((r) => {\\n                      values.push(item);\\n                      let total = parent.result.length;\\n                      let currentProgress = values.length;\\n                    console.log(JSON.stringify(r));                \\n                      parent.total = total\\n                    parent.currentProgress = currentProgress;\\n                      if(currentProgress == total){\\n                       parent.reset();\\n                       parent.isBilling =false;\\n                    }\\n                   \\n     \\n                  }).catch(e =>{\\n                      alert(`Error ${e}`);\\n                  });\\n                })\\n              }\\n            this.boxOne = value\\n          })\\n          .catch(err => {\\n            // An error occurred\\n          })\\n      },\\n\\n    childUpdated(data) {\\n      this.result = data;\\n      this.tableData = data;\\n      this.tableData = this.tableData.map((item) => {\\n        if (item.rate) {\\n          item.amount = parseInt(item.qty) * item.rate;\\n        }\\n\\n        return item;\\n      });\\n    },\\n    \\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.card {\\n  box-shadow: 0 0px 0px 0 rgb(0 0 0 / 20%);\\n  transition: 0.3s;\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: border-box;\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n  border-radius: 0.75rem;\\n}\\n</style>\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-cd4cef0c\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"p-5 mb-12\\\" style=\\\"width: 100%\\\">\\n    <b-row class=\\\"pl-3 pr-3\\\">\\n      <b-col></b-col>\\n         <b-dropdown id=\\\"dropdown-dropup\\\" dropup :text=\\\"currentWarehouse||'Select service unit'\\\"  split\\n    split-variant=\\\"outline-primary\\\"\\n    variant=\\\"primary\\\" class=\\\"m-2\\\">\\n        <b-dropdown-item v-for=\\\" warehouse in warehouses \\\" :key=\\\"warehouse\\\" href=\\\"#\\\" @click=\\\"setWarehouse(warehouse)\\\">{{warehouse}}</b-dropdown-item>\\n        </b-dropdown>\\n    </b-row>\\n    <b-row class=\\\"p-4 pl-3\\\">\\n      <h4>Search for billing template</h4>\\n      <b-col></b-col>\\n   \\n\\n      <b-button-group>\\n        \\n        <b-button\\n          variant=\\\"primary\\\"\\n          v-if=\\\"result.length\\\"\\n          @click=\\\"populatePrices()\\\"\\n        >\\n          Populate Missing prices</b-button>\\n         <div style=\\\"width:5px;color:white\\\"></div>\\n        <b-button variant=\\\"primary\\\" v-if=\\\"result.length\\\" @click=\\\"confirmBilling()\\\">\\n          Bill Patient  <b-badge variant=\\\"light\\\"> KES {{result.map(item=>item.amount).reduce((partialSum, a) => partialSum + a, 0).toFixed(2).replace(/\\\\d(?=(\\\\d{3})+\\\\.)/g, '$&,') }}</b-badge></b-button\\n        >\\n      </b-button-group>\\n    </b-row>\\n\\n    <doctype-link\\n     v-if=\\\"!isBilling\\\"\\n      :doctype=\\\"'Billing Template'\\\"\\n      :label=\\\"'Billing Template'\\\"\\n      :fieldname=\\\"'template'\\\"\\n      @data=\\\"processData\\\"\\n      style=\\\"width: 100%\\\"\\n    ></doctype-link>\\n\\n    <b-row v-if=\\\"isBilling\\\">\\n    <h5>Billing progress</h5>\\n    <b-progress :value=\\\"currentProgress\\\" :max=\\\"total\\\" class=\\\"mb-3\\\"></b-progress>\\n  \\n    </b-row>\\n\\n    <b-row style=\\\"width: 100% ml-2\\\" v-if=\\\"result.length\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 100%\\\">\\n        <child-table\\n          class=\\\"p-4\\\"\\n          style=\\\"width: 100%\\\"\\n          :doctype=\\\"'Billing Template Item'\\\"\\n          :tableData=\\\"result\\\"\\n          :readOnly=\\\"false\\\"\\n          @childUpdated=\\\"childUpdated\\\"\\n        ></child-table>\\n      </div>\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n\\n<script>\\nimport ChildTable from \\\"./../../html/doctype/ChildTable.vue\\\";\\nimport DoctypeRender from \\\"./../../html/doctype/DoctypeRender.vue\\\";\\nimport DoctypeLink from \\\"./DoctypeLink.vue\\\";\\nimport { getDoctypeWithMeta } from \\\"./../..//services/doctype/meta.js\\\";\\nimport { fetchConditionalItemPrice,  createCustomSalesOrder, getUserWarehouses} from \\\"../../services/accounts/patient.js\\\";\\nexport default {\\n  components: {\\n    ChildTable,\\n    DoctypeLink,\\n    DoctypeRender,\\n  },\\n  props: {\\n    customerNumber: {\\n      type: String,\\n      default: \\\" \\\",\\n      required: true,\\n    },\\n      patient_number: {\\n      type: String,\\n      default: \\\" \\\",\\n      required: true,\\n    },\\n  },\\n  data() {\\n    return {\\n      selectedDoctypeReference: null,\\n      fields: [\\\"items\\\"],\\n      result: [],\\n      warehouses: [],\\n      tableData: {},\\n      currentWarehouse:null,\\n      condition :true,\\n      isBilling:false,\\n      total:100,\\n      currentProgress:10,\\n\\n    };\\n  },\\n  created() {\\n     getUserWarehouses().then(r => {\\n            r.map(warehouse => {\\n                this.warehouses.push(warehouse['for_value'])\\n                console.log(this.warehouses);\\n            });\\n            if(this.warehouses.length){\\n              this.currentWarehouse =this.warehouses[0]\\n            }\\n        });\\n\\n  },\\n  methods: {\\n    setWarehouse(unit){\\n      this.currentWarehouse = unit;\\n    },\\n    processData(data) {\\n      this.selectedDoctypeReference = data;\\n      this.getData(this.selectedDoctypeReference);\\n    },\\n    getData(ref) {\\n      const payload = { doctype: \\\"Billing Template\\\", name: ref };\\n      getDoctypeWithMeta(payload).then((result) => {\\n        this.result = result.data.items;\\n      });\\n    },\\n    populatePrices() {\\n      this.tableData.forEach((element, index) => {\\n        let quantity = parseInt(element.qty);\\n        if (element.rate == 0) {\\n          fetchConditionalItemPrice({\\n            item_code: element.item,\\n            customer: this.customerNumber,\\n          }).then((res) => {\\n            if (res.type === \\\"Patient\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(price * quantity);\\n              element.rate = price;\\n              element.amount = amount;\\n              if (res.is_nhif === true && notify === true) {\\n                frappe.msgprint({\\n                  title: __(\\\"Note\\\"),\\n                  message: __(\\n                    \\\"Patient will be charged for this item due to insufficient insurance balance\\\"\\n                  ),\\n                  primary_action: {},\\n                });\\n              }\\n            } else if (res.type === \\\"Copay\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(\\n                price * (res.remaining_quantity * quantity)\\n              );\\n              element.rate = price;\\n              element.amount = amount;\\n            } else if (res.type === \\\"Insurance\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(price * quantity);\\n              element.rate = price;\\n              element.amount = \\\"0\\\";\\n              value.payer = \\\"Insurance: \\\" + \\\"(\\\" + amount + \\\")\\\";\\n            } else if (res.type === \\\"Pre-auth Insurance\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(price * quantity);\\n              element.rate = price;\\n              element.amount = \\\"0\\\";\\n            } else if (res.type === \\\"Pre-auth Copay\\\") {\\n              let price = res.price;\\n              let amount = Math.ceil(\\n                price * (res.remaining_quantity * quantity)\\n              );\\n              element.rate = price;\\n              element.amount = amount;\\n            }\\n\\n            this.table[index] = element;\\n          });\\n        }\\n      });\\n      this.result = this.tableData;\\n    },\\n    reset(){\\n        this.selectedDoctypeReference=null;\\n        this.tableData = [];\\n        this.result = [];\\n\\n    },\\n\\n    confirmBilling() {\\n        this.boxOne = ''\\n        var parent = this;\\n        var values = [];\\n        this.$bvModal.msgBoxConfirm(`Are you want to save this bill of KES ${this.result.map(item=>item.amount).reduce((partialSum, a) => partialSum + a, 0).toFixed(2).replace(/\\\\d(?=(\\\\d{3})+\\\\.)/g, '$&,')}?`)\\n          .then(value => {\\n              if(value){     \\n                parent.isBilling = true;           \\n                parent.result.forEach(item =>{\\n                    \\n                   createCustomSalesOrder({\\n                    item_name: item.item,\\n                    qty: item.qty,\\n                    warehouse: parent.currentWarehouse ||  \\\"\\\",\\n                    customer_name: parent.customerNumber,\\n                    patient: parent.patient_number,\\n                  }).then((r) => {\\n                      values.push(item);\\n                      let total = parent.result.length;\\n                      let currentProgress = values.length;\\n                    console.log(JSON.stringify(r));                \\n                      parent.total = total\\n                    parent.currentProgress = currentProgress;\\n                      if(currentProgress == total){\\n                       parent.reset();\\n                       parent.isBilling =false;\\n                    }\\n                   \\n     \\n                  }).catch(e =>{\\n                      alert(`Error ${e}`);\\n                  });\\n                })\\n              }\\n            this.boxOne = value\\n          })\\n          .catch(err => {\\n            // An error occurred\\n          })\\n      },\\n\\n    childUpdated(data) {\\n      this.result = data;\\n      this.tableData = data;\\n      this.tableData = this.tableData.map((item) => {\\n        if (item.rate) {\\n          item.amount = parseInt(item.qty) * item.rate;\\n        }\\n\\n        return item;\\n      });\\n    },\\n    \\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.card {\\n  box-shadow: 0 0px 0px 0 rgb(0 0 0 / 20%);\\n  transition: 0.3s;\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: border-box;\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n  border-radius: 0.75rem;\\n}\\n</style>\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "export const api = ({ method, args = {}, freeze=true  }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, callback: resolve, freeze })\n    );\n\n\n    export const getItemPrice  = (payload) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.item_price.get_price\",\n        args:{payload},\n    }).then(({ message }) => message);\n\n\n    export const createChargeSheet = (payload) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.create_charge_sheet.execute\",\n        args:{payload},\n    }).then(({ message }) => message);\n\n    export const chargeSheetAddItem = (payload) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.create_charge_sheet.add_to_charge_sheet\",\n        args:{payload},\n        freeze:false,\n    }).then(({ message }) => message);\n\n\n    export const chargeSheetRemoveItem = (name) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.create_charge_sheet.remove_item_from_charge_sheet\",\n        args:{name},\n    }).then(({ message }) => message);\n\n    export const checkChargeSheet = (patient) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.create_charge_sheet.check_if_exits\",\n        args:{patient},\n    }).then(({ message }) => message);\n\n    export const chargeSheetSubmit = (name) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.create_charge_sheet.submit_chargesheet\",\n        args:{name},\n        freeze:false,\n    }).then(({ message }) => message);\n\n\n    export const chargeSheetDelete = (name) =>\n    api({\n        method: \"billing.billing.api.charge_sheet.actions.create_charge_sheet.delete_chargesheet\",\n        args:{name},\n        freeze:false,\n    }).then(({ message }) => message);", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getUserWarehouses } from './../../../services/accounts/patient.js'\nconst __vue_script__ = {\n    name:\"UserWarehouses\",\n    data() {\n        return {\n            warehouses:[],\n            selectedItem: \"Select Warehouse\"\n        }\n    },\n    created() {\n        this.getWarehouses();\n    },\n    watch(){\n \n\n    },\n   \n    methods: {\n         emitWarehouse(warehouse){    \n             this.selectedItem = warehouse   \n             this.$emit('warehouse', warehouse)  \n    },\n        getWarehouses(){\n            getUserWarehouses().then(response => {\n                this.warehouses = response.map(item=> item.for_value)\n                if(this.warehouses.length){\n                    let first = this.warehouses[0];\n                    this.emitWarehouse(first);\n                    this.selectedItem = first\n                }\n            })\n        }   \n    },\n    \n\n}\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-container\",\n        [\n          _c(\n            \"b-row\",\n            [\n              _c(\n                \"b-dropdown\",\n                {\n                  staticClass: \"m-2\",\n                  attrs: {\n                    split: \"\",\n                    \"split-variant\": \"outline-primary\",\n                    variant: \"primary\",\n                    text: _vm.selectedItem\n                  }\n                },\n                _vm._l(_vm.warehouses, function(item) {\n                  return _c(\n                    \"b-dropdown-item\",\n                    {\n                      key: item,\n                      on: {\n                        click: function($event) {\n                          return _vm.emitWarehouse(item)\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(item))]\n                  )\n                }),\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-7b3cae19_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"UserWarehouse.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n      <b-container>\\n        <b-row>\\n            <b-dropdown\\n    split\\n    split-variant=\\\"outline-primary\\\"\\n    variant=\\\"primary\\\"\\n    :text=\\\"selectedItem\\\"\\n    class=\\\"m-2\\\"\\n  >\\n    <b-dropdown-item  v-for=\\\"item in warehouses\\\"  :key=\\\"item\\\" @click=\\\"emitWarehouse(item)\\\">{{item}}</b-dropdown-item>\\n\\n  </b-dropdown>\\n        </b-row>\\n      </b-container>\\n  </div>\\n</template>\\n\\n<script>\\nimport { getUserWarehouses } from './../../../services/accounts/patient.js'\\nexport default {\\n    name:\\\"UserWarehouses\\\",\\n    data() {\\n        return {\\n            warehouses:[],\\n            selectedItem: \\\"Select Warehouse\\\"\\n        }\\n    },\\n    created() {\\n        this.getWarehouses();\\n    },\\n    watch(){\\n \\n\\n    },\\n   \\n    methods: {\\n         emitWarehouse(warehouse){    \\n             this.selectedItem = warehouse   \\n             this.$emit('warehouse', warehouse)  \\n    },\\n        getWarehouses(){\\n            getUserWarehouses().then(response => {\\n                this.warehouses = response.map(item=> item.for_value)\\n                if(this.warehouses.length){\\n                    let first = this.warehouses[0];\\n                    this.emitWarehouse(first);\\n                    this.selectedItem = first\\n                }\\n            })\\n        }   \\n    },\\n    \\n\\n}\\n</script>\\n\\n<style>\\n\\n</style>\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getItemPrice,\n  createChargeSheet,\n  chargeSheetSubmit,\n  chargeSheetAddItem,\n  chargeSheetRemoveItem,\n  checkChargeSheet,\n  chargeSheetDelete\n} from \"./../../../services/patient_chart/charge_sheet.js\";\nimport UserWarehouse from \"./UserWarehouse.vue\";\nconst __vue_script__ = {\n  name: \"Charge Sheet\",\n  props: {\n    patient: {\n      default: \"\",\n      type: String,\n      required: true,\n    },\n    encounter: {\n      type: Object,\n      default: {},\n      required: true,\n    },\n    serviceUnit: {\n      type: String,\n      default: \"\",\n      required: true,\n    },\n    walkin: {\n      type: Number,\n      default: 0,\n      required: false,\n    },\n    approval: {\n      type: Number,\n      default: 0,\n      required: false,\n    },\n  },\n  components: {\n    UserWarehouse,\n  },\n  data() {\n    return {\n      values: [],\n      warehouse: \"\",\n      fields:[\"item_code\",\"qty\",\"price\", \"amount\", \"in_stock\", \"actions\"],\n      needsApproval:false,\n      chargeSheetName:null,\n    };\n  },\n  methods: {\n    checkIfChargeSheetExits(){\n        checkChargeSheet(this.patient).then(response=>{\n \n          if(response){\n             this.chargeSheetName = response.name;\n             this.needsApproval = response.needs_approval? true:false;\n            this.warehouse= response.warehouse;\n          \n            response.items.forEach(item=>{\n                this.values.push({item_code: item.item_code, qty: item.qty,status: \"Saved\", id: item.name});\n                this.getPrice(item.item_code,false, item.name);\n            })        \n          }\n        })\n    },\n    submitChargeSheet(){\n      chargeSheetSubmit({name:this.chargeSheetName}).then(response=>{\n        this.values = [];\n      })\n    },\n    removeItem(data) {\n      data = data.item;\n    if(data){\n         chargeSheetRemoveItem(data.id).then(response=>{\n        this.values = this.values.filter(\n              (item) => item.id != data.id\n            );\n      })\n    } \n    },\n    setWarehouse(wh) {\n      this.warehouse = wh;\n    },\n    showAddChargeDialog() {\n      let context = this;\n      let x = new frappe.ui.Dialog({\n        title: \"Add Charge\",\n        fields: [\n          {\n            label: \"Item\",\n            fieldname: \"item_code\",\n            fieldtype: \"Link\",\n            options: \"Item\",\n            reqd: true,\n            filters: { is_stock_item: 1, disabled: 0, has_variants: \"No\" },\n          },\n          {\n            label: \"Quantity\",\n            fieldname: \"qty\",\n            fieldtype: \"Float\",\n            reqd: true,\n          },\n        ],\n        primary_action_label: \"Add Item\",\n        primary_action: (values) => {\n          const available = this.values.filter(item => item.item_code == values.item_code).length\n        \n          if(available){ this.makeToast(variant='danger', message=\"Item already in the list\", title=\"Error\")\n            \n      \n          }else {\n              context.values.push(values);\n          context.getPrice(values.item_code,true);\n          x.hide();  \n          this.showAddChargeDialog();\n          }\n        },\n        secondary_action_label: \"Cancel\",\n        secondary_action: (values) => {\n          x.hide();\n        },\n      });\n      x.show();\n    },    \n    callCreateSheetApi() {\n      const needs_approval = this.needsApproval ? 1 : 0;\n      let chargeSheet = {\n        patient: this.patient,\n        encounter: this.encounter ? this.encounter.name : \"\",\n        warehouse: this.warehouse,\n        doctype: \"Charge Sheet\",\n        needs_approval: needs_approval\n      };\n      createChargeSheet(chargeSheet).then((response) => {\n        this.chargeSheetName = response;\n        this.makeToast();\n        this.values = [];\n        this.chargeSheetName = response;\n      });\n    },\n    makeToast(variant = 'success') {\n      this.$bvToast.toast(\"Bill recorded\", {\n        title: `Success`,\n        variant: variant,\n        solid: true,\n      });\n    },\n    createSheet() {\n      this.boxOne = \"\";\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure?\")\n        .then((value) => {\n          if (value) {\n            this.callCreateSheetApi();\n          }\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n\n     submitSheet() {\n      this.boxOne = \"\";\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure?\")\n        .then((value) => {\n          if (value) {\n           chargeSheetSubmit(this.chargeSheetName).then(response=>{\n             this.chargeSheetName= null;\n             this.values=[]\n           });\n          }\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n\n     deleteSheet() {\n      this.boxOne = \"\";\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure?\")\n        .then((value) => {\n          if (value) {\n           chargeSheetDelete(this.chargeSheetName).then(response=>{\n             this.chargeSheetName= null;\n             this.values=[]\n           });\n          }\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n    getPrice(item_code, notPreloaded, item_id) {\n      let items = [];\n      getItemPrice({\n        item_code,\n        patient: this.patient,\n        warehouse: this.warehouse,\n      }).then((response) => {\n        this.values.forEach((element, index) => {\n          if (element.item_code == item_code) {\n\n            items.push({\n              item_code: item_code,\n              qty: element.qty,\n              price: response.price,\n              amount: element.qty * response.price,\n              in_stock: response.available,\n              status: notPreloaded?\"Not saved\" :\"Saved\", \n              id: item_id,\n            });\n            if(notPreloaded){\n\nif(element.qty> response.available){\nfrappe.msgprint(item_code + \" Insufficient stocks\")\nreturn;\n}\n              this.addItem({item_code: element.item_code, qty: element.qty, charge_sheet: this.chargeSheetName})\n            }\n            \n          } else {\n            items.push(element);\n          }\n        });\n\n        this.values = items;\n      });\n    },\n    addItem(payload){\n      chargeSheetAddItem(payload).then( res =>{\n        this.makeToast(\"success\",\"Item added\" );\n         let items = [];\n         this.values.forEach((element, index) => {\n          if (payload.item_code == element.item_code) {\n  \n            items.push({\n              item_code: element.item_code,\n              qty: element.qty,\n              price: element.price,\n              amount: element.amount,\n              in_stock: element.in_stock,\n              status: \"Saved\",\n              id: res,\n            });\n\n          } else {\n            items.push(element);\n          }\n        });\n\n        this.values = items;\n\n      });\n    }\n  },\n  mounted() {\n    \n     this.needsApproval = this.approval == 1;\n     this.checkIfChargeSheetExits();\n  },\n  created() {\n    \n \n  },\n  created() {\n    this.needsApproval = this.approval==1;\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-container\",\n        [\n          _c(\n            \"b-row\",\n            [\n              _vm._v(\n                \"\\n\\n     Charge Sheet \" +\n                  _vm._s(_vm.chargeSheetName) +\n                  \"\\n      \"\n              ),\n              _c(\"b-col\"),\n              _vm._v(\" \"),\n              _vm.chargeSheetName\n                ? _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"mr-2\",\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.showAddChargeDialog()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Add\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.chargeSheetName\n                ? _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"ml-2\",\n                      attrs: { variant: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.deleteSheet()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Delete\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.chargeSheetName || this.values.length\n                ? _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"ml-2\",\n                      attrs: { variant: \"success\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.submitSheet()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Submit\\n      \")]\n                  )\n                : _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.callCreateSheetApi()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Create \\n      \")]\n                  )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-row\",\n            [\n              _c(\"user-warehouse\", {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: !_vm.chargeSheetName,\n                    expression: \"!chargeSheetName\"\n                  }\n                ],\n                on: { warehouse: _vm.setWarehouse }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"h4\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.chargeSheetName,\n                      expression: \"chargeSheetName\"\n                    }\n                  ]\n                },\n                [_vm._v(\"[ \" + _vm._s(_vm.warehouse) + \" ]\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"b-col\"),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                [\n                  false\n                    ? _c(\n                        \"b-form-checkbox\",\n                        {\n                          model: {\n                            value: _vm.needsApproval,\n                            callback: function($$v) {\n                              _vm.needsApproval = $$v\n                            },\n                            expression: \"needsApproval\"\n                          }\n                        },\n                        [_vm._v(\"\\n     Needs Supplies Approval\\n  \")]\n                      )\n                    : _vm._e()\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-row\",\n            { staticStyle: { width: \"100%\" } },\n            [\n              _c(\"b-table\", {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  responsive: \"sm\",\n                  bordered: \"\",\n                  striped: \"\",\n                  fields: _vm.fields,\n                  items: _vm.values,\n                  \"empty-text\": \"No items \",\n                  \"empty-filtered-text\": \"No items\",\n                  \"head-row-variant\": \"secondary\",\n                  \"show-empty\": true\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"cell(actions)\",\n                    fn: function(data) {\n                      return [\n                        _c(\n                          \"b-button\",\n                          {\n                            attrs: { variant: \"danger\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.removeItem(data)\n                              }\n                            }\n                          },\n                          [_vm._v(\"\\n            Remove\\n          \")]\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"cell(status)\",\n                    fn: function(data) {\n                      return [\n                        data.item && data.item.id\n                          ? _c(\"b-icon\", {\n                              attrs: {\n                                disabled: \"\",\n                                icon: \"check-square\",\n                                scale: \"2\",\n                                variant: \"success\"\n                              }\n                            })\n                          : _c(\n                              \"b-button\",\n                              { attrs: { variant: \"primary\" } },\n                              [\n                                _c(\"b-spinner\", {\n                                  attrs: { small: \"\", type: \"grow\" }\n                                }),\n                                _vm._v(\"\\n          Saving...\\n        \")\n                              ],\n                              1\n                            )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-row\",\n            [\n              _c(\"b-col\"),\n              _vm._v(\" \"),\n              _c(\"div\", [\n                _c(\"h5\", [\n                  _vm._v(\n                    \"\\n          Total:Ksh\\n          \" +\n                      _vm._s(\n                        _vm.values\n                          .map(function(item) {\n                            return item.amount || 0\n                          })\n                          .reduce(function(a, b) {\n                            return a + b\n                          }, 0)\n                      ) +\n                      \"\\n        \"\n                  )\n                ])\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-cef5adfe_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"ChargeSheet.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n    <b-container>\\n      <b-row>\\n  \\n       Charge Sheet {{chargeSheetName}}\\n        <b-col></b-col>\\n        <b-button variant=\\\"primary\\\" class=\\\"mr-2\\\" v-if=\\\"chargeSheetName\\\" @click=\\\"showAddChargeDialog()\\\">\\n          Add\\n        </b-button>\\n        \\n\\n        <b-button  v-if=\\\"chargeSheetName\\\" @click=\\\"deleteSheet()\\\"\\n         class=\\\"ml-2\\\"\\n          variant=\\\"danger\\\"     \\n        >\\n          Delete\\n        </b-button>\\n        <b-button  v-if=\\\"chargeSheetName || this.values.length\\\" @click=\\\"submitSheet()\\\"\\n         class=\\\"ml-2\\\"\\n          variant=\\\"success\\\"     \\n        >\\n          Submit\\n        </b-button>\\n\\n         <b-button v-else  variant=\\\"primary\\\"  @click=\\\"callCreateSheetApi()\\\">\\n          Create \\n        </b-button>\\n\\n\\n      \\n      </b-row>\\n      <b-row>\\n        <user-warehouse v-show=\\\"!chargeSheetName\\\" @warehouse=\\\"setWarehouse\\\"></user-warehouse>\\n          <h4 v-show=\\\"chargeSheetName\\\" >[ {{ warehouse}} ]</h4>\\n        <b-col></b-col>\\n        <div>\\n          <b-form-checkbox v-if=\\\"false\\\"\\n        v-model=\\\"needsApproval\\\"\\n        \\n      >\\n       Needs Supplies Approval\\n    </b-form-checkbox></div>\\n      </b-row>\\n\\n      <b-row style=\\\"width: 100%\\\">\\n        <b-table\\n          style=\\\"width: 100%\\\"\\n          responsive=\\\"sm\\\"\\n          bordered\\n          striped\\n          :fields=\\\"fields\\\"\\n          :items=\\\"values\\\"\\n          :empty-text=\\\"`No items `\\\"\\n          :empty-filtered-text=\\\"`No items`\\\"\\n          head-row-variant=\\\"secondary\\\"\\n          :show-empty=\\\"true\\\"\\n        >\\n          <template #cell(actions)=\\\"data\\\">\\n            <b-button variant=\\\"danger\\\" @click=\\\"removeItem(data)\\\">\\n              Remove\\n            </b-button>\\n          </template>\\n\\n            <template #cell(status)=\\\"data\\\">   \\n            <b-icon disabled v-if=\\\"data.item && data.item.id\\\" icon=\\\"check-square\\\" scale=\\\"2\\\" variant=\\\"success\\\"></b-icon>\\n             <b-button v-else variant=\\\"primary\\\" >\\n            <b-spinner   small type=\\\"grow\\\"></b-spinner>\\n            Saving...\\n          </b-button >\\n          </template>\\n        </b-table>\\n      </b-row>\\n      <b-row>\\n        <b-col></b-col>\\n        <div>\\n          <h5>\\n            Total:Ksh\\n            {{\\n              values\\n                .map((item) => {\\n                  return item.amount || 0;\\n                })\\n                .reduce((a, b) => a + b, 0)\\n            }}\\n          </h5>\\n        </div>\\n      </b-row>\\n    </b-container>\\n  </div>\\n</template>\\n\\n<script>\\nimport {\\n  getItemPrice,\\n  createChargeSheet,\\n  chargeSheetSubmit,\\n  chargeSheetAddItem,\\n  chargeSheetRemoveItem,\\n  checkChargeSheet,\\n  chargeSheetDelete\\n} from \\\"./../../../services/patient_chart/charge_sheet.js\\\";\\nimport UserWarehouse from \\\"./UserWarehouse.vue\\\";\\nexport default {\\n  name: \\\"Charge Sheet\\\",\\n  props: {\\n    patient: {\\n      default: \\\"\\\",\\n      type: String,\\n      required: true,\\n    },\\n    encounter: {\\n      type: Object,\\n      default: {},\\n      required: true,\\n    },\\n    serviceUnit: {\\n      type: String,\\n      default: \\\"\\\",\\n      required: true,\\n    },\\n    walkin: {\\n      type: Number,\\n      default: 0,\\n      required: false,\\n    },\\n    approval: {\\n      type: Number,\\n      default: 0,\\n      required: false,\\n    },\\n  },\\n  components: {\\n    UserWarehouse,\\n  },\\n  data() {\\n    return {\\n      values: [],\\n      warehouse: \\\"\\\",\\n      fields:[\\\"item_code\\\",\\\"qty\\\",\\\"price\\\", \\\"amount\\\", \\\"in_stock\\\", \\\"actions\\\"],\\n      needsApproval:false,\\n      chargeSheetName:null,\\n    };\\n  },\\n  methods: {\\n    checkIfChargeSheetExits(){\\n        checkChargeSheet(this.patient).then(response=>{\\n \\n          if(response){\\n             this.chargeSheetName = response.name;\\n             this.needsApproval = response.needs_approval? true:false;\\n            this.warehouse= response.warehouse;\\n          \\n            response.items.forEach(item=>{\\n                this.values.push({item_code: item.item_code, qty: item.qty,status: \\\"Saved\\\", id: item.name});\\n                this.getPrice(item.item_code,false, item.name);\\n            })        \\n          }\\n        })\\n    },\\n    submitChargeSheet(){\\n      chargeSheetSubmit({name:this.chargeSheetName}).then(response=>{\\n        this.values = [];\\n      })\\n    },\\n    removeItem(data) {\\n      data = data.item;\\n    if(data){\\n         chargeSheetRemoveItem(data.id).then(response=>{\\n        this.values = this.values.filter(\\n              (item) => item.id != data.id\\n            );\\n      })\\n    } \\n    },\\n    setWarehouse(wh) {\\n      this.warehouse = wh;\\n    },\\n    showAddChargeDialog() {\\n      let context = this;\\n      let x = new frappe.ui.Dialog({\\n        title: \\\"Add Charge\\\",\\n        fields: [\\n          {\\n            label: \\\"Item\\\",\\n            fieldname: \\\"item_code\\\",\\n            fieldtype: \\\"Link\\\",\\n            options: \\\"Item\\\",\\n            reqd: true,\\n            filters: { is_stock_item: 1, disabled: 0, has_variants: \\\"No\\\" },\\n          },\\n          {\\n            label: \\\"Quantity\\\",\\n            fieldname: \\\"qty\\\",\\n            fieldtype: \\\"Float\\\",\\n            reqd: true,\\n          },\\n        ],\\n        primary_action_label: \\\"Add Item\\\",\\n        primary_action: (values) => {\\n          const available = this.values.filter(item => item.item_code == values.item_code).length\\n        \\n          if(available){ this.makeToast(variant='danger', message=\\\"Item already in the list\\\", title=\\\"Error\\\")\\n            \\n      \\n          }else {\\n              context.values.push(values);\\n          context.getPrice(values.item_code,true);\\n          x.hide();  \\n          this.showAddChargeDialog();\\n          }\\n        },\\n        secondary_action_label: \\\"Cancel\\\",\\n        secondary_action: (values) => {\\n          x.hide();\\n        },\\n      });\\n      x.show();\\n    },    \\n    callCreateSheetApi() {\\n      const needs_approval = this.needsApproval ? 1 : 0;\\n      let chargeSheet = {\\n        patient: this.patient,\\n        encounter: this.encounter ? this.encounter.name : \\\"\\\",\\n        warehouse: this.warehouse,\\n        doctype: \\\"Charge Sheet\\\",\\n        needs_approval: needs_approval\\n      };\\n      createChargeSheet(chargeSheet).then((response) => {\\n        this.chargeSheetName = response;\\n        this.makeToast();\\n        this.values = [];\\n        this.chargeSheetName = response;\\n      });\\n    },\\n    makeToast(variant = 'success') {\\n      this.$bvToast.toast(\\\"Bill recorded\\\", {\\n        title: `Success`,\\n        variant: variant,\\n        solid: true,\\n      });\\n    },\\n    createSheet() {\\n      this.boxOne = \\\"\\\";\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure?\\\")\\n        .then((value) => {\\n          if (value) {\\n            this.callCreateSheetApi();\\n          }\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n\\n     submitSheet() {\\n      this.boxOne = \\\"\\\";\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure?\\\")\\n        .then((value) => {\\n          if (value) {\\n           chargeSheetSubmit(this.chargeSheetName).then(response=>{\\n             this.chargeSheetName= null;\\n             this.values=[]\\n           });\\n          }\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n\\n     deleteSheet() {\\n      this.boxOne = \\\"\\\";\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure?\\\")\\n        .then((value) => {\\n          if (value) {\\n           chargeSheetDelete(this.chargeSheetName).then(response=>{\\n             this.chargeSheetName= null;\\n             this.values=[]\\n           });\\n          }\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n    getPrice(item_code, notPreloaded, item_id) {\\n      let items = [];\\n      getItemPrice({\\n        item_code,\\n        patient: this.patient,\\n        warehouse: this.warehouse,\\n      }).then((response) => {\\n        this.values.forEach((element, index) => {\\n          if (element.item_code == item_code) {\\n\\n            items.push({\\n              item_code: item_code,\\n              qty: element.qty,\\n              price: response.price,\\n              amount: element.qty * response.price,\\n              in_stock: response.available,\\n              status: notPreloaded?\\\"Not saved\\\" :\\\"Saved\\\", \\n              id: item_id,\\n            });\\n            if(notPreloaded){\\n\\nif(element.qty> response.available){\\nfrappe.msgprint(item_code + \\\" Insufficient stocks\\\")\\nreturn;\\n}\\n              this.addItem({item_code: element.item_code, qty: element.qty, charge_sheet: this.chargeSheetName})\\n            }\\n            \\n          } else {\\n            items.push(element);\\n          }\\n        });\\n\\n        this.values = items;\\n      });\\n    },\\n    addItem(payload){\\n      chargeSheetAddItem(payload).then( res =>{\\n        this.makeToast(\\\"success\\\",\\\"Item added\\\" );\\n         let items = [];\\n         this.values.forEach((element, index) => {\\n          if (payload.item_code == element.item_code) {\\n  \\n            items.push({\\n              item_code: element.item_code,\\n              qty: element.qty,\\n              price: element.price,\\n              amount: element.amount,\\n              in_stock: element.in_stock,\\n              status: \\\"Saved\\\",\\n              id: res,\\n            });\\n\\n          } else {\\n            items.push(element);\\n          }\\n        });\\n\\n        this.values = items;\\n\\n      });\\n    }\\n  },\\n  mounted() {\\n    \\n     this.needsApproval = this.approval == 1;\\n     this.checkIfChargeSheetExits();\\n  },\\n  created() {\\n    \\n \\n  },\\n  created() {\\n    this.needsApproval = this.approval==1;\\n  },\\n};\\n</script>\\n\\n<style>\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "export const api = ({ method, args = {}, freeze=true  }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, callback: resolve, freeze })\n    );\n\n\n    export const createPatientAllergy = (payload) =>\n    api({\n        method: \"clinical.api.notes.patient_allergy.execute\",\n        args:{payload},\n    }).then(({ message }) => message);\n\n    export const patientAllergyAddItem = (payload) =>\n    api({\n        method: \"clinical.api.notes.patient_allergy.add_to_patient_allergy\",\n        args:{payload},\n        freeze:false,\n    }).then(({ message }) => message);\n\n\n    export const patientAllergyRemoveItem = (name) =>\n    api({\n        method: \"clinical.api.notes.patient_allergy.remove_item_from_patient_allergy\",\n        args:{name},\n    }).then(({ message }) => message);\n\n    export const checkPatientAllergy = (patient) =>\n    api({\n        method: \"clinical.api.notes.patient_allergy.check_if_exits\",\n        args:{patient},\n    }).then(({ message }) => message);\n\n    export const patientAllergySubmit = (name) =>\n    api({\n        method: \"clinical.api.notes.patient_allergy.submit_patient_allergy\",\n        args:{name},\n        freeze:false,\n    }).then(({ message }) => message);\n\n\n    export const patientAllergyDelete = (name) =>\n    api({\n        method: \"clinical.api.notes.patient_allergy.delete_patient_allergy\",\n        args:{name},\n        freeze:false,\n    }).then(({ message }) => message);", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  createPatientAllergy,\n  patientAllergySubmit,\n  patientAllergyAddItem,\n  patientAllergyRemoveItem,\n  checkPatientAllergy,\n  patientAllergyDelete\n} from \"./../../../services/patient_chart/patient_allergy.js\";\n\nconst __vue_script__ = {\n  name: \"Patient Allergy\",\n  props: {\n    patient: {\n      default: \"\",\n      type: String,\n      required: true,\n    },  \n  },\n \n  data() {\n    return {\n      values: [],\n      fields:[\"allergy_name\",\"status\", \"actions\"],\n      patientAllergy:null,\n    };\n  },\n  methods: {\n    checkIfPatientAllergyExits(){\n        checkPatientAllergy(this.patient).then(response=>{\n \n          if(response){\n             this.patientAllergy = response.name;\n          \n            response.items.forEach(item=>{\n                this.values.push({allergy_name: item.allergy_name, status: \"Saved\", id: item.name});\n            })     \n          }\n        })\n    },\n    submitPatientAllergy(){\n      patientAllergySubmit({name:this.patientAllergy}).then(response=>{\n        this.values = [];\n      })\n    },\n    removeItem(data) {\n      data = data.item;\n       if(data){\n         patientAllergyRemoveItem(data.id).then(response=>{\n        this.values = this.values.filter(\n              (item) => item.id != data.id\n            );\n      })\n    } \n    },\n    showAddChargeDialog() {\n      let context = this;\n      let x = new frappe.ui.Dialog({\n        title: \"Add Allergy\",\n        fields: [\n          {\n            label: \"Allergy\",\n            fieldname: \"allergy_name\",\n            fieldtype: \"Data\",\n            reqd: true,\n          },\n        ],\n        primary_action_label: \"Add Item\",\n        primary_action: (values) => {\n          const available = this.values.filter(item => item.allergy_name == values.allergy_name)\n          if(available.length ){ this.makeToast(variant='danger', message=\"Item already in the list\", title=\"Error\")\n            \n          }else {\n                context.values.push(values);\n                const singleAllergy = values\n               \n                this.addItem({allergy_name: singleAllergy.allergy_name, patient_allergy: context.patientAllergy})\n             \n          x.hide();  \n          this.showAddChargeDialog();\n          }\n        },\n        secondary_action_label: \"Cancel\",\n        secondary_action: (values) => {\n          x.hide();\n        },\n      });\n      x.show();\n    },    \n    callCreateAllergyApi() {\n      let patientAllergy = {\n        patient: this.patient,\n        doctype: \"Patient Allergy\",\n      };\n      createPatientAllergy(patientAllergy).then((response) => {\n        this.patientAllergy = response;\n        this.makeToast();\n        this.values = [];\n        this.patientAllergy = response;\n      });\n    },\n    makeToast(variant = 'success') {\n      this.$bvToast.toast(\"Allergy Saved\", {\n        title: `Success`,\n        variant: variant,\n        solid: true,\n      });\n    },\n    createAllergy() {\n      this.boxOne = \"\";\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure?\")\n        .then((value) => {\n          if (value) {\n            this.callCreateAllergyApi();\n          }\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n\n     submitSheet() {\n      this.boxOne = \"\";\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure?\")\n        .then((value) => {\n          if (value) {\n           patientAllergySubmit(this.patientAllergy).then(response=>{\n             this.patientAllergy= null;\n             this.values=[]\n           });\n          }\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n\n     deleteSheet() {\n      this.boxOne = \"\";\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure?\")\n        .then((value) => {\n          if (value) {\n           patientAllergyDelete(this.patientAllergy).then(response=>{\n             this.patientAllergy= null;\n             this.values=[]\n           });\n          }\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n \n    addItem(payload){\n      patientAllergyAddItem(payload).then( res =>{\n        this.makeToast(\"success\",\"Allergy added\" );\n         let items = [];\n         this.values.forEach((element, index) => {\n          if (payload.allergy_name== element.allergy_name) {\n  \n             items.push({\n              allergy_name: element.allergy_name,\n              status: \"Saved\",\n              id: res,\n            });\n\n          } else {\n            items.push(element);\n          }\n        });\n\n        this.values = items;\n\n      });\n    }\n  },\n  mounted() {\n     this.checkIfPatientAllergyExits();\n  },\n\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-container\",\n        [\n          _c(\n            \"b-row\",\n            [\n              _vm._v(\n                \"\\n\\n     Patient Allergy \" +\n                  _vm._s(_vm.patientAllergy) +\n                  \"    \\n      \"\n              ),\n              _c(\"b-col\"),\n              _vm._v(\" \"),\n              _vm.patientAllergy\n                ? _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"mr-2\",\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.showAddChargeDialog()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Add\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.patientAllergy\n                ? _c(\n                    \"b-button\",\n                    {\n                      staticClass: \"ml-2\",\n                      attrs: { variant: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.deleteSheet()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Delete\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.patientAllergy || this.values.length\n                ? _c(\"div\", { staticClass: \"ml-2\" })\n                : _c(\n                    \"b-button\",\n                    {\n                      attrs: { variant: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.callCreateAllergyApi()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        Create \\n      \")]\n                  )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-row\",\n            { staticStyle: { width: \"100%\" } },\n            [\n              _c(\"b-table\", {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  responsive: \"sm\",\n                  bordered: \"\",\n                  striped: \"\",\n                  fields: _vm.fields,\n                  items: _vm.values,\n                  \"empty-text\": \"No items \",\n                  \"empty-filtered-text\": \"No items\",\n                  \"head-row-variant\": \"secondary\",\n                  \"show-empty\": true\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"cell(actions)\",\n                    fn: function(data) {\n                      return [\n                        _c(\n                          \"b-button\",\n                          {\n                            attrs: { variant: \"danger\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.removeItem(data)\n                              }\n                            }\n                          },\n                          [_vm._v(\"\\n            Remove\\n          \")]\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"cell(status)\",\n                    fn: function(data) {\n                      return [\n                        data.item && data.item.id\n                          ? _c(\"b-icon\", {\n                              attrs: {\n                                disabled: \"\",\n                                icon: \"check-square\",\n                                scale: \"2\",\n                                variant: \"success\"\n                              }\n                            })\n                          : _c(\n                              \"b-button\",\n                              { attrs: { variant: \"primary\" } },\n                              [\n                                _c(\"b-spinner\", {\n                                  attrs: { small: \"\", type: \"grow\" }\n                                }),\n                                _vm._v(\"\\n          Saving...\\n        \")\n                              ],\n                              1\n                            )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-52431d05_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"PatientAllergy.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n    <b-container>\\n      <b-row>\\n  \\n       Patient Allergy {{patientAllergy}}    \\n        <b-col></b-col>\\n        <b-button variant=\\\"primary\\\" class=\\\"mr-2\\\" v-if=\\\"patientAllergy\\\" @click=\\\"showAddChargeDialog()\\\">\\n          Add\\n        </b-button>\\n        \\n\\n        <b-button  v-if=\\\"patientAllergy\\\" @click=\\\"deleteSheet()\\\"\\n         class=\\\"ml-2\\\"\\n          variant=\\\"danger\\\"     \\n        >\\n          Delete\\n        </b-button>\\n        <div  v-if=\\\"patientAllergy || this.values.length\\\"\\n         class=\\\"ml-2\\\"  \\n        >\\n        </div>\\n\\n         <b-button v-else  variant=\\\"primary\\\"  @click=\\\"callCreateAllergyApi()\\\">\\n          Create \\n        </b-button>\\n\\n\\n      \\n      </b-row>\\n     \\n      <b-row style=\\\"width: 100%\\\">\\n        <b-table\\n          style=\\\"width: 100%\\\"\\n          responsive=\\\"sm\\\"\\n          bordered\\n          striped\\n          :fields=\\\"fields\\\"\\n          :items=\\\"values\\\"\\n          :empty-text=\\\"`No items `\\\"\\n          :empty-filtered-text=\\\"`No items`\\\"\\n          head-row-variant=\\\"secondary\\\"\\n          :show-empty=\\\"true\\\"\\n        >\\n          <template #cell(actions)=\\\"data\\\">\\n            <b-button variant=\\\"danger\\\" @click=\\\"removeItem(data)\\\">\\n              Remove\\n            </b-button>\\n          </template>\\n\\n            <template #cell(status)=\\\"data\\\">   \\n            <b-icon disabled v-if=\\\"data.item && data.item.id\\\" icon=\\\"check-square\\\" scale=\\\"2\\\" variant=\\\"success\\\"></b-icon>\\n             <b-button v-else variant=\\\"primary\\\" >\\n            <b-spinner   small type=\\\"grow\\\"></b-spinner>\\n            Saving...\\n          </b-button >\\n          </template>\\n        </b-table>\\n      </b-row>\\n    </b-container>\\n  </div>\\n</template>\\n\\n<script>\\nimport {\\n  createPatientAllergy,\\n  patientAllergySubmit,\\n  patientAllergyAddItem,\\n  patientAllergyRemoveItem,\\n  checkPatientAllergy,\\n  patientAllergyDelete\\n} from \\\"./../../../services/patient_chart/patient_allergy.js\\\";\\n\\nexport default {\\n  name: \\\"Patient Allergy\\\",\\n  props: {\\n    patient: {\\n      default: \\\"\\\",\\n      type: String,\\n      required: true,\\n    },  \\n  },\\n \\n  data() {\\n    return {\\n      values: [],\\n      fields:[\\\"allergy_name\\\",\\\"status\\\", \\\"actions\\\"],\\n      patientAllergy:null,\\n    };\\n  },\\n  methods: {\\n    checkIfPatientAllergyExits(){\\n        checkPatientAllergy(this.patient).then(response=>{\\n \\n          if(response){\\n             this.patientAllergy = response.name;\\n          \\n            response.items.forEach(item=>{\\n                this.values.push({allergy_name: item.allergy_name, status: \\\"Saved\\\", id: item.name});\\n            })     \\n          }\\n        })\\n    },\\n    submitPatientAllergy(){\\n      patientAllergySubmit({name:this.patientAllergy}).then(response=>{\\n        this.values = [];\\n      })\\n    },\\n    removeItem(data) {\\n      data = data.item;\\n       if(data){\\n         patientAllergyRemoveItem(data.id).then(response=>{\\n        this.values = this.values.filter(\\n              (item) => item.id != data.id\\n            );\\n      })\\n    } \\n    },\\n    showAddChargeDialog() {\\n      let context = this;\\n      let x = new frappe.ui.Dialog({\\n        title: \\\"Add Allergy\\\",\\n        fields: [\\n          {\\n            label: \\\"Allergy\\\",\\n            fieldname: \\\"allergy_name\\\",\\n            fieldtype: \\\"Data\\\",\\n            reqd: true,\\n          },\\n        ],\\n        primary_action_label: \\\"Add Item\\\",\\n        primary_action: (values) => {\\n          const available = this.values.filter(item => item.allergy_name == values.allergy_name)\\n          if(available.length ){ this.makeToast(variant='danger', message=\\\"Item already in the list\\\", title=\\\"Error\\\")\\n            \\n          }else {\\n                context.values.push(values);\\n                const singleAllergy = values\\n               \\n                this.addItem({allergy_name: singleAllergy.allergy_name, patient_allergy: context.patientAllergy})\\n             \\n          x.hide();  \\n          this.showAddChargeDialog();\\n          }\\n        },\\n        secondary_action_label: \\\"Cancel\\\",\\n        secondary_action: (values) => {\\n          x.hide();\\n        },\\n      });\\n      x.show();\\n    },    \\n    callCreateAllergyApi() {\\n      let patientAllergy = {\\n        patient: this.patient,\\n        doctype: \\\"Patient Allergy\\\",\\n      };\\n      createPatientAllergy(patientAllergy).then((response) => {\\n        this.patientAllergy = response;\\n        this.makeToast();\\n        this.values = [];\\n        this.patientAllergy = response;\\n      });\\n    },\\n    makeToast(variant = 'success') {\\n      this.$bvToast.toast(\\\"Allergy Saved\\\", {\\n        title: `Success`,\\n        variant: variant,\\n        solid: true,\\n      });\\n    },\\n    createAllergy() {\\n      this.boxOne = \\\"\\\";\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure?\\\")\\n        .then((value) => {\\n          if (value) {\\n            this.callCreateAllergyApi();\\n          }\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n\\n     submitSheet() {\\n      this.boxOne = \\\"\\\";\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure?\\\")\\n        .then((value) => {\\n          if (value) {\\n           patientAllergySubmit(this.patientAllergy).then(response=>{\\n             this.patientAllergy= null;\\n             this.values=[]\\n           });\\n          }\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n\\n     deleteSheet() {\\n      this.boxOne = \\\"\\\";\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure?\\\")\\n        .then((value) => {\\n          if (value) {\\n           patientAllergyDelete(this.patientAllergy).then(response=>{\\n             this.patientAllergy= null;\\n             this.values=[]\\n           });\\n          }\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n \\n    addItem(payload){\\n      patientAllergyAddItem(payload).then( res =>{\\n        this.makeToast(\\\"success\\\",\\\"Allergy added\\\" );\\n         let items = [];\\n         this.values.forEach((element, index) => {\\n          if (payload.allergy_name== element.allergy_name) {\\n  \\n             items.push({\\n              allergy_name: element.allergy_name,\\n              status: \\\"Saved\\\",\\n              id: res,\\n            });\\n\\n          } else {\\n            items.push(element);\\n          }\\n        });\\n\\n        this.values = items;\\n\\n      });\\n    }\\n  },\\n  mounted() {\\n     this.checkIfPatientAllergyExits();\\n  },\\n\\n};\\n</script>\\n\\n<style>\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport patientAccountModule from '../../state/accounts';\n\nimport SalesOrder from '../accounts/SalesOrder.vue'\nimport Receipts from '../accounts/Receipts.vue'\nimport Invoices from '../accounts/Invoices.vue'\nimport InvoiceFInalization from '../accounts/InvoiceFInalization.vue'\nimport Schemes from '../accounts/Schemes.vue'\nimport Procedures from '../patient/Procedures.vue'\nimport SalesOrderAuth from '../accounts/SalesOrderAuth.vue'\nimport Dashboard from '../accounts/Dashboard.vue'\nimport TemplateBilling from \"../accounts/TemplateBilling.vue\"\nimport ChargeSheet from \"../../patient/components/order_tabs/ChargeSheet.vue\"\nimport PatientAllergy from \"../../patient/components/notes/PatientAllergy.vue\"\n\n\nconst __vue_script__ = {\n    name: \"AccountsWorkingArea\",\n    beforeRouteEnter: (to, from, next) => {\n        next(vm => {\n            const { patientId } = vm.$root.$route.params;\n            if (patientId) {\n                next();\n            } else next('/accounts-search');\n        });\n    },\n    components: {\n        SalesOrder,\n        Receipts,\n        Invoices,\n        InvoiceFInalization,\n        Schemes,\n        Procedures,\n        SalesOrderAuth,Dashboard,\n        TemplateBilling,\n        ChargeSheet,\n        PatientAllergy,\n    },\n    props: {\n        patientId: {\n            type: String,\n            default: ''\n        }\n    },\n    data() {\n        return {\n            tab: 0\n        }\n    },\n    computed: {\n        salesOrderTotal() {\n            return this.$store.getters['patientAccounts/salesOrderTotal']\n        },\n        accountSummary() {\n            return this.$store.getters['patientAccounts/accountSummary']\n        },\n        patient() {\n            return this.$store.getters['patientAccounts/patient']\n        }\n    },\n    created() {\n        this.$store.registerModule('patientAccounts', patientAccountModule);\n    },\n    mounted() {\n        this.getPatient();\n        this.getPatientAccountSummary();\n        this.getPatientSalesOrderTotals();\n    },\n    methods: {\n        newPaymentEntry(){\n            this.getPatientAccountSummary();\n            this.getPatientSalesOrderTotals();\n        },\n        getPatientAccountSummary() {\n            this.$store.dispatch(\"patientAccounts/fetchPatientAccountSummary\", this.patientId);\n        },\n        getPatientSalesOrderTotals() {\n            this.$store.dispatch(\"patientAccounts/fetchUnbilledSalesOrderTotals\", this.patientId);\n        },\n        getPatient() {\n            this.$store.dispatch(\"patientAccounts/fetchPatient\", this.patientId);\n        }\n    },\n    filters: {\n        dateFormat(date) {\n            let current_datetime = new Date(date);\n            return current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" +\n                current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds()\n        },\n        Upper(value) {\n            return value.toUpperCase();\n        },\n        numberWithCommas(x) {\n            if (x) {\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n            return 0;\n        }\n    }\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"area-background\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"form-dashboard-section\" },\n        [\n          _c(\n            \"b-row\",\n            [\n              _c(\"b-col\", [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-dashboard-section\",\n                    staticStyle: { display: \"block\" }\n                  },\n                  [\n                    _c(\"div\", { staticClass: \"section-head\" }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"container\",\n                        staticStyle: { \"font-weight\": \"700\" }\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"col-md-4\" }, [\n                            _c(\n                              \"span\",\n                              {\n                                staticStyle: { \"text-transform\": \"capitalize\" }\n                              },\n                              [_vm._v(_vm._s(_vm.patient.patient_name))]\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-md-4\" }, [\n                            _c(\"span\", [_vm._v(_vm._s(_vm.patient.name))])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-md-4\" }, [\n                            _c(\"span\", [_vm._v(_vm._s(_vm.patient.customer))])\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"col-md-4\" }, [\n                            _c(\"span\", [\n                              _vm._v(_vm._s(_vm.patient.customer_group))\n                            ])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-md-4\" }, [\n                            _c(\"span\", [_vm._v(_vm._s(_vm.patient.sex))])\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-md-4\" }, [\n                            _c(\"span\", [_vm._v(_vm._s(_vm.patient.mobile))])\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"hr\", {\n                          staticStyle: {\n                            width: \"100%\",\n                            \"margin-left\": \"0\",\n                            \"margin-top\": \"8px\",\n                            \"margin-bottom\": \"8px\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.accountSummary && _vm.accountSummary.length\n                          ? _c(\"div\", { staticClass: \"row\" }, [\n                              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                                _vm._v(\n                                  \"\\n                                  Accounts Summary: Billed: \" +\n                                    _vm._s(\n                                      _vm._f(\"numberWithCommas\")(\n                                        _vm.accountSummary[0].billing_this_year.toFixed(\n                                          2\n                                        )\n                                      )\n                                    ) +\n                                    \"\u00A0\\n                                  \" +\n                                    _vm._s(_vm.accountSummary[0].currency) +\n                                    \" \u00A0|\u00A0 \\n                                  Unpaid: \" +\n                                    _vm._s(\n                                      _vm._f(\"numberWithCommas\")(\n                                        _vm.accountSummary[0].total_unpaid.toFixed(\n                                          2\n                                        )\n                                      )\n                                    ) +\n                                    \"\u00A0\\n                                  \" +\n                                    _vm._s(_vm.accountSummary[0].currency) +\n                                    \" | Ordered\\n                                \"\n                                ),\n                                _vm.salesOrderTotal &&\n                                _vm.salesOrderTotal.length &&\n                                _vm.salesOrderTotal[0].length\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n                                  \" +\n                                          _vm._s(\n                                            _vm._f(\"numberWithCommas\")(\n                                              _vm.salesOrderTotal[0][1].toFixed(\n                                                2\n                                              )\n                                            )\n                                          ) +\n                                          \" KES\\n                                \"\n                                      )\n                                    ])\n                                  : _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n                                  0.00 KES\\n                                \"\n                                      )\n                                    ])\n                              ])\n                            ])\n                          : _vm._e()\n                      ]\n                    )\n                  ]\n                )\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-tabs\",\n        {\n          staticClass: \"custom-tabs\",\n          attrs: { \"content-class\": \"note-tabs-content\" },\n          model: {\n            value: _vm.tab,\n            callback: function($$v) {\n              _vm.tab = $$v\n            },\n            expression: \"tab\"\n          }\n        },\n        [\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Sales Orders\" } },\n            [\n              _vm.tab === 0\n                ? _c(\"SalesOrder\", {\n                    attrs: {\n                      patient_number: _vm.patient.name,\n                      customerNumber: _vm.patient.customer,\n                      patientName: _vm.patient.patient_name\n                    },\n                    on: { newPaymentEntry: _vm.newPaymentEntry }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Authorization\" } },\n            [\n              _vm.tab === 1\n                ? _c(\"SalesOrderAuth\", {\n                    attrs: { patient_number: _vm.patientId }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Sales Invoice\" } },\n            [\n              _vm.tab === 2\n                ? _c(\"Invoices\", { attrs: { patient_number: _vm.patientId } })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Payments\" } },\n            [\n              _vm.tab === 3\n                ? _c(\"Receipts\", {\n                    attrs: {\n                      patient_number: _vm.patientId,\n                      customerNumber: _vm.patient.customer,\n                      patientName: _vm.patient.patient_name\n                    },\n                    on: { newPaymentEntry: _vm.newPaymentEntry }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Schemes\" } },\n            [\n              _vm.tab === 4\n                ? _c(\"Schemes\", {\n                    attrs: {\n                      patient_number: _vm.patientId,\n                      customerNumber: _vm.patient.customer\n                    }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Procedures\" } },\n            [\n              _vm.tab === 5\n                ? _c(\"Procedures\", {\n                    attrs: {\n                      patient_number: _vm.patientId,\n                      customerNumber: _vm.patient.customer\n                    }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Payment Overview\" } },\n            [\n              _vm.tab === 6\n                ? _c(\"Dashboard\", {\n                    attrs: {\n                      patient: _vm.patientId,\n                      customer: _vm.patient.customer\n                    }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Bill template\" } },\n            [\n              _vm.tab === 7\n                ? _c(\"TemplateBilling\", {\n                    attrs: {\n                      customerNumber: _vm.patient.customer,\n                      patient_number: _vm.patientId\n                    }\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Charge Sheet\" } },\n            [\n              _vm.tab === 8\n                ? _c(\"PatientAllergy\", {\n                    staticClass: \"mt-4\",\n                    attrs: { patient: _vm.patientId }\n                  })\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-97dd215c_0\", { source: \"\\n.area-background[data-v-97dd215c] {\\n    margin-top: 16px;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/accounts/core/AccountsWorkingArea.vue\"],\"names\":[],\"mappings\":\";AAgMA;IACA,gBAAA;IACA,4BAAA;IACA,6BAAA;AACA\",\"file\":\"AccountsWorkingArea.vue\",\"sourcesContent\":[\"<template>\\n    <b-container class=\\\"area-background\\\">\\n        <div class=\\\"form-dashboard-section\\\">\\n            <b-row>\\n                <b-col>\\n                    <div class=\\\"form-dashboard-section\\\" style=\\\"display: block;\\\">\\n                        <div class=\\\"section-head\\\">\\n                        </div>\\n                        <div class=\\\"container\\\" style=\\\"font-weight:700;\\\">\\n                            <!-- <p>{{ patient }}</p> -->\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4\\\"><span style=\\\"text-transform: capitalize;\\\">{{patient.patient_name}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.name}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.customer}}</span></div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.customer_group}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.sex}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.mobile}}</span></div>\\n                            </div>\\n                            <hr style=\\\"width:100%;margin-left:0;margin-top:8px;margin-bottom:8px;\\\">\\n                            <div class=\\\"row\\\" v-if=\\\"accountSummary && accountSummary.length\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                      Accounts Summary: Billed: {{ accountSummary[0].billing_this_year.toFixed(2) | numberWithCommas }}&nbsp;\\n                                      {{ accountSummary[0].currency }} &nbsp;|&nbsp; \\n                                      Unpaid: {{ accountSummary[0].total_unpaid.toFixed(2) | numberWithCommas }}&nbsp;\\n                                      {{ accountSummary[0].currency }} | Ordered\\n                                    <span v-if=\\\"salesOrderTotal && salesOrderTotal.length && salesOrderTotal[0].length\\\">\\n                                      {{ salesOrderTotal[0][1].toFixed(2) | numberWithCommas  }} KES\\n                                    </span>\\n                                    <span v-else>\\n                                      0.00 KES\\n                                    </span>\\n                                </div>\\n                            </div>\\n                            <!-- <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                                            <b-button-group>\\n                                                <b-button variant=\\\"primary\\\" class=\\\"mr-2\\\">Accounting Ledger</b-button>\\n                                                <b-button variant=\\\"primary\\\" class=\\\"ml-2\\\">Accounts Receivable</b-button>\\n                                            </b-button-group>\\n                                        </div> -->\\n                        </div>\\n                    </div>\\n                </b-col>\\n                <!-- <b-col md=\\\"3\\\">\\n                               \\n                            </b-col> -->\\n            </b-row>\\n        </div>\\n        <b-tabs v-model=\\\"tab\\\"  content-class=\\\"note-tabs-content\\\" class=\\\"custom-tabs\\\">\\n\\n            \\n            <b-tab title=\\\"Sales Orders\\\">\\n                <SalesOrder  v-if=\\\"tab === 0\\\" :patient_number=\\\"patient.name\\\" :customerNumber=\\\"patient.customer\\\" :patientName=\\\"patient.patient_name\\\" @newPaymentEntry=\\\"newPaymentEntry\\\" />\\n            </b-tab>\\n            <b-tab title=\\\"Authorization\\\">\\n            <SalesOrderAuth v-if=\\\"tab === 1\\\" :patient_number=\\\"patientId\\\"/>\\n            </b-tab>\\n            <b-tab title=\\\"Sales Invoice\\\">\\n                <Invoices  v-if=\\\"tab === 2\\\" :patient_number=\\\"patientId\\\" />\\n            </b-tab>\\n\\n            <!-- <b-tab title=\\\"Invoice Finalization\\\">\\n                <InvoiceFInalization  v-if=\\\"tab === 2\\\"  :patientName=\\\"patient.name\\\" :customerName=\\\"patient.customer\\\"/>\\n            </b-tab> -->\\n            <b-tab title=\\\"Payments\\\">\\n                <Receipts v-if=\\\"tab === 3\\\" :patient_number=\\\"patientId\\\" :customerNumber=\\\"patient.customer\\\" :patientName=\\\"patient.patient_name\\\" @newPaymentEntry=\\\"newPaymentEntry\\\" />\\n            </b-tab>\\n            <b-tab title=\\\"Schemes\\\">\\n                <Schemes v-if=\\\"tab === 4\\\" :patient_number=\\\"patientId\\\" :customerNumber=\\\"patient.customer\\\"  />\\n            </b-tab>\\n             <b-tab title=\\\"Procedures\\\">\\n                <Procedures v-if=\\\"tab === 5\\\" :patient_number=\\\"patientId\\\" :customerNumber=\\\"patient.customer\\\"  />\\n            </b-tab>\\n             <b-tab title=\\\"Payment Overview\\\">\\n                <Dashboard v-if=\\\"tab === 6\\\" :patient=\\\"patientId\\\" :customer=\\\"patient.customer\\\"  />\\n            </b-tab>\\n            <b-tab title=\\\"Bill template\\\">\\n                <TemplateBilling  v-if=\\\"tab === 7\\\" :customerNumber=\\\"patient.customer\\\" :patient_number=\\\"patientId\\\"   />\\n            </b-tab>\\n\\n             <b-tab title=\\\"Charge Sheet\\\"> \\n                <PatientAllergy class=\\\"mt-4\\\" v-if=\\\"tab === 8\\\"  :patient=\\\"patientId\\\" />\\n            </b-tab>\\n  \\n        </b-tabs>\\n    </b-container>\\n</template>\\n\\n<script>\\nimport patientAccountModule from '../../state/accounts';\\n\\nimport SalesOrder from '../accounts/SalesOrder.vue'\\nimport Receipts from '../accounts/Receipts.vue'\\nimport Invoices from '../accounts/Invoices.vue'\\nimport InvoiceFInalization from '../accounts/InvoiceFInalization.vue'\\nimport Schemes from '../accounts/Schemes.vue'\\nimport Procedures from '../patient/Procedures.vue'\\nimport SalesOrderAuth from '../accounts/SalesOrderAuth.vue'\\nimport Dashboard from '../accounts/Dashboard.vue'\\nimport TemplateBilling from \\\"../accounts/TemplateBilling.vue\\\"\\nimport ChargeSheet from \\\"../../patient/components/order_tabs/ChargeSheet.vue\\\"\\nimport PatientAllergy from \\\"../../patient/components/notes/PatientAllergy.vue\\\"\\n\\n\\nexport default {\\n    name: \\\"AccountsWorkingArea\\\",\\n    beforeRouteEnter: (to, from, next) => {\\n        next(vm => {\\n            const { patientId } = vm.$root.$route.params;\\n            if (patientId) {\\n                next();\\n            } else next('/accounts-search');\\n        });\\n    },\\n    components: {\\n        SalesOrder,\\n        Receipts,\\n        Invoices,\\n        InvoiceFInalization,\\n        Schemes,\\n        Procedures,\\n        SalesOrderAuth,Dashboard,\\n        TemplateBilling,\\n        ChargeSheet,\\n        PatientAllergy,\\n    },\\n    props: {\\n        patientId: {\\n            type: String,\\n            default: ''\\n        }\\n    },\\n    data() {\\n        return {\\n            tab: 0\\n        }\\n    },\\n    computed: {\\n        salesOrderTotal() {\\n            return this.$store.getters['patientAccounts/salesOrderTotal']\\n        },\\n        accountSummary() {\\n            return this.$store.getters['patientAccounts/accountSummary']\\n        },\\n        patient() {\\n            return this.$store.getters['patientAccounts/patient']\\n        }\\n    },\\n    created() {\\n        this.$store.registerModule('patientAccounts', patientAccountModule);\\n    },\\n    mounted() {\\n        this.getPatient();\\n        this.getPatientAccountSummary();\\n        this.getPatientSalesOrderTotals();\\n    },\\n    methods: {\\n        newPaymentEntry(){\\n            this.getPatientAccountSummary();\\n            this.getPatientSalesOrderTotals();\\n        },\\n        getPatientAccountSummary() {\\n            this.$store.dispatch(\\\"patientAccounts/fetchPatientAccountSummary\\\", this.patientId);\\n        },\\n        getPatientSalesOrderTotals() {\\n            this.$store.dispatch(\\\"patientAccounts/fetchUnbilledSalesOrderTotals\\\", this.patientId);\\n        },\\n        getPatient() {\\n            this.$store.dispatch(\\\"patientAccounts/fetchPatient\\\", this.patientId);\\n        }\\n    },\\n    filters: {\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n};\\n</script>\\n\\n<style scoped>\\n.area-background {\\n    margin-top: 16px;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n</style>\\n\\n<style lang=\\\"less\\\" scoped>\\n.custom-tabs {\\n    .card-header {\\n        background-color: #fff;\\n        ul {\\n            li {\\n                margin: 2px;\\n                display: flex;\\n                flex-direction: column;\\n                flex: 1 0;\\n            }\\n        }\\n    }\\n    .card-footer {\\n        min-height: 60px;\\n    }\\n}\\n</style>\\n\"]}, media: undefined })\n,inject(\"data-v-97dd215c_1\", { source: \".custom-tabs .card-header[data-v-97dd215c] {\\n  background-color: #fff;\\n}\\n.custom-tabs .card-header ul li[data-v-97dd215c] {\\n  margin: 2px;\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 0;\\n}\\n.custom-tabs .card-footer[data-v-97dd215c] {\\n  min-height: 60px;\\n}\\n\", map: {\"version\":3,\"sources\":[\"AccountsWorkingArea.vue\"],\"names\":[],\"mappings\":\"AAAA;EACE,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;AACA;EACE,gBAAgB;AAClB\",\"file\":\"AccountsWorkingArea.vue\",\"sourcesContent\":[\".custom-tabs .card-header {\\n  background-color: #fff;\\n}\\n.custom-tabs .card-header ul li {\\n  margin: 2px;\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 0;\\n}\\n.custom-tabs .card-footer {\\n  min-height: 60px;\\n}\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-97dd215c\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n    <b-container class=\\\"area-background\\\">\\n        <div class=\\\"form-dashboard-section\\\">\\n            <b-row>\\n                <b-col>\\n                    <div class=\\\"form-dashboard-section\\\" style=\\\"display: block;\\\">\\n                        <div class=\\\"section-head\\\">\\n                        </div>\\n                        <div class=\\\"container\\\" style=\\\"font-weight:700;\\\">\\n                            <!-- <p>{{ patient }}</p> -->\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4\\\"><span style=\\\"text-transform: capitalize;\\\">{{patient.patient_name}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.name}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.customer}}</span></div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.customer_group}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.sex}}</span></div>\\n                                <div class=\\\"col-md-4\\\"><span>{{patient.mobile}}</span></div>\\n                            </div>\\n                            <hr style=\\\"width:100%;margin-left:0;margin-top:8px;margin-bottom:8px;\\\">\\n                            <div class=\\\"row\\\" v-if=\\\"accountSummary && accountSummary.length\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                      Accounts Summary: Billed: {{ accountSummary[0].billing_this_year.toFixed(2) | numberWithCommas }}&nbsp;\\n                                      {{ accountSummary[0].currency }} &nbsp;|&nbsp; \\n                                      Unpaid: {{ accountSummary[0].total_unpaid.toFixed(2) | numberWithCommas }}&nbsp;\\n                                      {{ accountSummary[0].currency }} | Ordered\\n                                    <span v-if=\\\"salesOrderTotal && salesOrderTotal.length && salesOrderTotal[0].length\\\">\\n                                      {{ salesOrderTotal[0][1].toFixed(2) | numberWithCommas  }} KES\\n                                    </span>\\n                                    <span v-else>\\n                                      0.00 KES\\n                                    </span>\\n                                </div>\\n                            </div>\\n                            <!-- <div style=\\\"display: flex; justify-content: flex-end\\\">\\n                                            <b-button-group>\\n                                                <b-button variant=\\\"primary\\\" class=\\\"mr-2\\\">Accounting Ledger</b-button>\\n                                                <b-button variant=\\\"primary\\\" class=\\\"ml-2\\\">Accounts Receivable</b-button>\\n                                            </b-button-group>\\n                                        </div> -->\\n                        </div>\\n                    </div>\\n                </b-col>\\n                <!-- <b-col md=\\\"3\\\">\\n                               \\n                            </b-col> -->\\n            </b-row>\\n        </div>\\n        <b-tabs v-model=\\\"tab\\\"  content-class=\\\"note-tabs-content\\\" class=\\\"custom-tabs\\\">\\n\\n            \\n            <b-tab title=\\\"Sales Orders\\\">\\n                <SalesOrder  v-if=\\\"tab === 0\\\" :patient_number=\\\"patient.name\\\" :customerNumber=\\\"patient.customer\\\" :patientName=\\\"patient.patient_name\\\" @newPaymentEntry=\\\"newPaymentEntry\\\" />\\n            </b-tab>\\n            <b-tab title=\\\"Authorization\\\">\\n            <SalesOrderAuth v-if=\\\"tab === 1\\\" :patient_number=\\\"patientId\\\"/>\\n            </b-tab>\\n            <b-tab title=\\\"Sales Invoice\\\">\\n                <Invoices  v-if=\\\"tab === 2\\\" :patient_number=\\\"patientId\\\" />\\n            </b-tab>\\n\\n            <!-- <b-tab title=\\\"Invoice Finalization\\\">\\n                <InvoiceFInalization  v-if=\\\"tab === 2\\\"  :patientName=\\\"patient.name\\\" :customerName=\\\"patient.customer\\\"/>\\n            </b-tab> -->\\n            <b-tab title=\\\"Payments\\\">\\n                <Receipts v-if=\\\"tab === 3\\\" :patient_number=\\\"patientId\\\" :customerNumber=\\\"patient.customer\\\" :patientName=\\\"patient.patient_name\\\" @newPaymentEntry=\\\"newPaymentEntry\\\" />\\n            </b-tab>\\n            <b-tab title=\\\"Schemes\\\">\\n                <Schemes v-if=\\\"tab === 4\\\" :patient_number=\\\"patientId\\\" :customerNumber=\\\"patient.customer\\\"  />\\n            </b-tab>\\n             <b-tab title=\\\"Procedures\\\">\\n                <Procedures v-if=\\\"tab === 5\\\" :patient_number=\\\"patientId\\\" :customerNumber=\\\"patient.customer\\\"  />\\n            </b-tab>\\n             <b-tab title=\\\"Payment Overview\\\">\\n                <Dashboard v-if=\\\"tab === 6\\\" :patient=\\\"patientId\\\" :customer=\\\"patient.customer\\\"  />\\n            </b-tab>\\n            <b-tab title=\\\"Bill template\\\">\\n                <TemplateBilling  v-if=\\\"tab === 7\\\" :customerNumber=\\\"patient.customer\\\" :patient_number=\\\"patientId\\\"   />\\n            </b-tab>\\n\\n             <b-tab title=\\\"Charge Sheet\\\"> \\n                <PatientAllergy class=\\\"mt-4\\\" v-if=\\\"tab === 8\\\"  :patient=\\\"patientId\\\" />\\n            </b-tab>\\n  \\n        </b-tabs>\\n    </b-container>\\n</template>\\n\\n<script>\\nimport patientAccountModule from '../../state/accounts';\\n\\nimport SalesOrder from '../accounts/SalesOrder.vue'\\nimport Receipts from '../accounts/Receipts.vue'\\nimport Invoices from '../accounts/Invoices.vue'\\nimport InvoiceFInalization from '../accounts/InvoiceFInalization.vue'\\nimport Schemes from '../accounts/Schemes.vue'\\nimport Procedures from '../patient/Procedures.vue'\\nimport SalesOrderAuth from '../accounts/SalesOrderAuth.vue'\\nimport Dashboard from '../accounts/Dashboard.vue'\\nimport TemplateBilling from \\\"../accounts/TemplateBilling.vue\\\"\\nimport ChargeSheet from \\\"../../patient/components/order_tabs/ChargeSheet.vue\\\"\\nimport PatientAllergy from \\\"../../patient/components/notes/PatientAllergy.vue\\\"\\n\\n\\nexport default {\\n    name: \\\"AccountsWorkingArea\\\",\\n    beforeRouteEnter: (to, from, next) => {\\n        next(vm => {\\n            const { patientId } = vm.$root.$route.params;\\n            if (patientId) {\\n                next();\\n            } else next('/accounts-search');\\n        });\\n    },\\n    components: {\\n        SalesOrder,\\n        Receipts,\\n        Invoices,\\n        InvoiceFInalization,\\n        Schemes,\\n        Procedures,\\n        SalesOrderAuth,Dashboard,\\n        TemplateBilling,\\n        ChargeSheet,\\n        PatientAllergy,\\n    },\\n    props: {\\n        patientId: {\\n            type: String,\\n            default: ''\\n        }\\n    },\\n    data() {\\n        return {\\n            tab: 0\\n        }\\n    },\\n    computed: {\\n        salesOrderTotal() {\\n            return this.$store.getters['patientAccounts/salesOrderTotal']\\n        },\\n        accountSummary() {\\n            return this.$store.getters['patientAccounts/accountSummary']\\n        },\\n        patient() {\\n            return this.$store.getters['patientAccounts/patient']\\n        }\\n    },\\n    created() {\\n        this.$store.registerModule('patientAccounts', patientAccountModule);\\n    },\\n    mounted() {\\n        this.getPatient();\\n        this.getPatientAccountSummary();\\n        this.getPatientSalesOrderTotals();\\n    },\\n    methods: {\\n        newPaymentEntry(){\\n            this.getPatientAccountSummary();\\n            this.getPatientSalesOrderTotals();\\n        },\\n        getPatientAccountSummary() {\\n            this.$store.dispatch(\\\"patientAccounts/fetchPatientAccountSummary\\\", this.patientId);\\n        },\\n        getPatientSalesOrderTotals() {\\n            this.$store.dispatch(\\\"patientAccounts/fetchUnbilledSalesOrderTotals\\\", this.patientId);\\n        },\\n        getPatient() {\\n            this.$store.dispatch(\\\"patientAccounts/fetchPatient\\\", this.patientId);\\n        }\\n    },\\n    filters: {\\n        dateFormat(date) {\\n            let current_datetime = new Date(date);\\n            return current_datetime.getFullYear() + \\\"-\\\" + (current_datetime.getMonth() + 1) + \\\"-\\\" + current_datetime.getDate() + \\\" \\\" +\\n                current_datetime.getHours() + \\\":\\\" + current_datetime.getMinutes() + \\\":\\\" + current_datetime.getSeconds()\\n        },\\n        Upper(value) {\\n            return value.toUpperCase();\\n        },\\n        numberWithCommas(x) {\\n            if (x) {\\n                return x.toString().replace(/\\\\B(?=(\\\\d{3})+(?!\\\\d))/g, \\\",\\\");\\n            }\\n            return 0;\\n        }\\n    }\\n};\\n</script>\\n\\n<style scoped>\\n.area-background {\\n    margin-top: 16px;\\n    padding-left: 0px !important;\\n    padding-right: 0px !important;\\n}\\n</style>\\n\\n<style lang=\\\"less\\\" scoped>\\n.custom-tabs {\\n    .card-header {\\n        background-color: #fff;\\n        ul {\\n            li {\\n                margin: 2px;\\n                display: flex;\\n                flex-direction: column;\\n                flex: 1 0;\\n            }\\n        }\\n    }\\n    .card-footer {\\n        min-height: 60px;\\n    }\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import notificationModule from \"./../../state/notification/moduleNotification.js\";\nconst __vue_script__ = {\n  name: \"TopHeader\",\n  data() {\n    return {\n      notificationList:[],\n      paths:[]\n    };\n  },\n  // computed: {\n  //   notificationListd() {\n  //     return  [];\n  //   },\n  // },\n  watch: {\n    $route(val) {\n    \n     const fullPath = val.fullPath;\n     this.paths = fullPath.split(\"/\").filter(item => item&& item.length >0);\n      \n    },\n  },\n  created() {},\n  mounted() {\n    const user = frappe.session.user;\n    this.getNotifications(user);\n  },\n  \n  methods: {\n    getNotifications(user) {\n      const payload = { ref: user };\n      // this.$store.dispatch(\"notification/fetchNotifications\", payload);\n    },\n\n    clearNotification(name) {\n      const payload = { name, user: frappe.session.user };\n      // this.$store.dispatch(\"notification/clearNotification\", payload);\n    },\n\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"header\",\n      {\n        staticClass: \"navbar navbar-expand sticky-top\",\n        attrs: { role: \"navigation\" }\n      },\n      [\n        _c(\"b-container\", [\n          _c(\n            \"a\",\n            {\n              staticClass: \"navbar-brand navbar-home pull-left\",\n              attrs: { href: \"/app\", target: \"_blank\" }\n            },\n            [\n              _c(\"img\", {\n                staticClass: \"app-logo\",\n                staticStyle: { width: \"24px\" },\n                attrs: { src: \"/assets/mtrh_dev/images/logo.jpeg\" }\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"ul\",\n            {\n              staticClass: \"nav navbar-nav d-none d-sm-flex\",\n              attrs: { id: \"navbar-breadcrumbs\" }\n            },\n            [\n              _c(\"li\", [\n                _c(\n                  \"a\",\n                  { attrs: { href: \"/app/accounts\", target: \"_blank\" } },\n                  [_vm._v(\"Accounts Workspace\")]\n                )\n              ]),\n              _vm._v(\" \"),\n              _vm._l(_vm.paths, function(path) {\n                return _c(\"li\", { key: path }, [\n                  _c(\n                    \"a\",\n                    { attrs: { href: \"/app/accounts\", target: \"_blank\" } },\n                    [_vm._v(_vm._s(path))]\n                  )\n                ])\n              })\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"collapse navbar-collapse justify-content-end hidden\"\n            },\n            [\n              _c(\n                \"form\",\n                {\n                  staticClass: \"form-inline fill-width justify-content-end\",\n                  attrs: { role: \"search\", onsubmit: \"return false;\" }\n                },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"input-group search-bar text-muted hidden\" },\n                    [\n                      _c(\"div\", { staticClass: \"awesomplete\" }, [\n                        _c(\"input\", {\n                          staticClass: \"form-control\",\n                          attrs: {\n                            id: \"navbar-search\",\n                            type: \"text\",\n                            placeholder: \"Search or type a command (Ctrl + G)\",\n                            \"aria-haspopup\": \"true\",\n                            autocomplete: \"off\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-owns\": \"awesomplete_list_1\",\n                            role: \"combobox\",\n                            \"aria-activedescendant\": \"awesomplete_list_1_item_0\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"ul\",\n                          {\n                            attrs: {\n                              role: \"listbox\",\n                              id: \"awesomplete_list_1\",\n                              hidden: \"\"\n                            }\n                          },\n                          [\n                            _c(\"li\", { attrs: { \"aria-selected\": \"true\" } }, [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticClass:\n                                          \"flex justify-between text-medium\"\n                                      },\n                                      [\n                                        _c(\n                                          \"span\",\n                                          { staticClass: \"ellipsis\" },\n                                          [\n                                            _vm._v(\"Search for \"),\n                                            _c(\"b\", [_vm._v(\"Patient C\")])\n                                          ]\n                                        ),\n                                        _vm._v(\" \"),\n                                        _c(\"kbd\", [_vm._v(\"\u21B5\")])\n                                      ]\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\"Open \"),\n                                    _c(\"mark\", [_vm._v(\"Patient C\")]),\n                                    _vm._v(\"hart\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _c(\"mark\", [_vm._v(\"P\")]),\n                                    _c(\"mark\", [_vm._v(\"a\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\", [_vm._v(\"i\")]),\n                                    _c(\"mark\", [_vm._v(\"e\")]),\n                                    _c(\"mark\", [_vm._v(\"n\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\"),\n                                    _vm._v(\"En\"),\n                                    _c(\"mark\", [_vm._v(\"c\")]),\n                                    _vm._v(\"ounter List\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _c(\"mark\", [_vm._v(\"P\")]),\n                                    _c(\"mark\", [_vm._v(\"a\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\", [_vm._v(\"i\")]),\n                                    _c(\"mark\", [_vm._v(\"e\")]),\n                                    _c(\"mark\", [_vm._v(\"n\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\"),\n                                    _vm._v(\"En\"),\n                                    _c(\"mark\", [_vm._v(\"c\")]),\n                                    _vm._v(\"ounter Report\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\"New \"),\n                                    _c(\"mark\", [_vm._v(\"P\")]),\n                                    _c(\"mark\", [_vm._v(\"a\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\", [_vm._v(\"i\")]),\n                                    _c(\"mark\", [_vm._v(\"e\")]),\n                                    _c(\"mark\", [_vm._v(\"n\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\"),\n                                    _vm._v(\"En\"),\n                                    _c(\"mark\", [_vm._v(\"c\")]),\n                                    _vm._v(\"ounter\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\"In\"),\n                                    _c(\"mark\", [_vm._v(\"p\")]),\n                                    _c(\"mark\", [_vm._v(\"a\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\", [_vm._v(\"i\")]),\n                                    _c(\"mark\", [_vm._v(\"e\")]),\n                                    _c(\"mark\", [_vm._v(\"n\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\"),\n                                    _vm._v(\"Re\"),\n                                    _c(\"mark\", [_vm._v(\"c\")]),\n                                    _vm._v(\"ord List\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\"In\"),\n                                    _c(\"mark\", [_vm._v(\"p\")]),\n                                    _c(\"mark\", [_vm._v(\"a\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\", [_vm._v(\"i\")]),\n                                    _c(\"mark\", [_vm._v(\"e\")]),\n                                    _c(\"mark\", [_vm._v(\"n\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\"),\n                                    _vm._v(\"Re\"),\n                                    _c(\"mark\", [_vm._v(\"c\")]),\n                                    _vm._v(\"ord Report\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\"New In\"),\n                                    _c(\"mark\", [_vm._v(\"p\")]),\n                                    _c(\"mark\", [_vm._v(\"a\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\", [_vm._v(\"i\")]),\n                                    _c(\"mark\", [_vm._v(\"e\")]),\n                                    _c(\"mark\", [_vm._v(\"n\")]),\n                                    _c(\"mark\", [_vm._v(\"t\")]),\n                                    _c(\"mark\"),\n                                    _vm._v(\"Re\"),\n                                    _c(\"mark\", [_vm._v(\"c\")]),\n                                    _vm._v(\"ord\")\n                                  ])\n                                ]\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"li\", [\n                              _c(\n                                \"a\",\n                                { staticStyle: { \"font-weight\": \"normal\" } },\n                                [_c(\"span\", [_vm._v(\"Help on Search\")])]\n                              )\n                            ])\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"visually-hidden\",\n                            attrs: {\n                              role: \"status\",\n                              \"aria-live\": \"assertive\",\n                              \"aria-atomic\": \"true\",\n                              hidden: \"\"\n                            }\n                          },\n                          [_vm._v(\"9 results found\")]\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"search-icon\" }, [\n                        _c(\"svg\", { staticClass: \"icon icon-sm\" }, [\n                          _c(\"use\", { attrs: { \"xlink:href\": \"#icon-search\" } })\n                        ])\n                      ])\n                    ]\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"ul\", { staticClass: \"navbar-nav\" }, [\n                _c(\n                  \"li\",\n                  {\n                    staticClass:\n                      \"nav-item dropdown dropdown-notifications dropdown-mobile\"\n                  },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"nav-link notifications-icon text-muted\",\n                        attrs: {\n                          \"data-toggle\": \"dropdown\",\n                          \"aria-haspopup\": \"true\",\n                          \"aria-expanded\": \"true\",\n                          href: \"#\",\n                          onclick: \"return false;\",\n                          title: \"\",\n                          \"data-original-title\": \"Notifications\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          [\n                            _c(\"span\", { staticClass: \"notifications-seen\" }, [\n                              _c(\"svg\", { staticClass: \"icon icon-md\" }, [\n                                _c(\"use\", {\n                                  attrs: { href: \"#icon-notification\" }\n                                })\n                              ])\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.notificationList.length > 0\n                              ? _c(\n                                  \"b-badge\",\n                                  {\n                                    staticClass: \"notification-badge\",\n                                    attrs: { variant: \"danger\" }\n                                  },\n                                  [_vm._v(_vm._s(_vm.notificationList.length))]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"notifications-unseen\" }, [\n                          _c(\"svg\", { staticClass: \"icon icon-md\" }, [\n                            _c(\"use\", {\n                              attrs: {\n                                href: \"#icon-notification-with-indicator\"\n                              }\n                            })\n                          ])\n                        ])\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass:\n                          \"dropdown-menu notifications-list dropdown-menu-right\",\n                        attrs: { role: \"menu\" }\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"notification-list-header\" }, [\n                          _c(\"div\", { staticClass: \"header-items\" }, [\n                            _c(\n                              \"ul\",\n                              {\n                                staticClass:\n                                  \"notification-item-tabs nav nav-tabs\",\n                                attrs: { role: \"tablist\" }\n                              },\n                              [\n                                _c(\n                                  \"li\",\n                                  {\n                                    staticClass: \"notifications-category\",\n                                    attrs: {\n                                      id: \"notifications\",\n                                      \"data-toggle\": \"collapse\"\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                      Notifications\\n                    \"\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"header-actions\" }, [\n                            _vm.notificationList.length > 0\n                              ? _c(\n                                  \"span\",\n                                  {\n                                    staticClass: \"mark-all-read pull-right\",\n                                    attrs: {\n                                      \"data-action\": \"mark_all_as_read\",\n                                      title: \"\",\n                                      \"data-original-title\": \"Mark all as read\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.clearNotification()\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\"svg\", { staticClass: \"icon icon-sm\" }, [\n                                      _c(\"use\", {\n                                        attrs: { href: \"#icon-mark-as-read\" }\n                                      })\n                                    ])\n                                  ]\n                                )\n                              : _vm._e()\n                          ])\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"notification-list-body\" }, [\n                          _c(\"div\", { staticClass: \"panel-notifications\" }, [\n                            _c(\n                              \"div\",\n                              { staticStyle: { display: \"block\" } },\n                              _vm._l(_vm.notificationList, function(\n                                notification\n                              ) {\n                                return _c(\n                                  \"a\",\n                                  {\n                                    key: notification.name,\n                                    staticClass:\n                                      \"recent-item notification-item unread\",\n                                    attrs: {\n                                      href:\n                                        \"javascript:function() { return false; }\",\n                                      \"data-name\": \"0a283f5b8f\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.clearNotification(\n                                          notification.name\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"notification-body\" },\n                                      [\n                                        _c(\n                                          \"span\",\n                                          {\n                                            staticClass:\n                                              \"avatar avatar-medium user-avatar\",\n                                            attrs: { title: \"Philip Ademba\" }\n                                          },\n                                          [\n                                            _c(\n                                              \"div\",\n                                              {\n                                                staticClass:\n                                                  \"avatar-frame standard-image\",\n                                                staticStyle: {\n                                                  \"background-color\":\n                                                    \"var(--pink-avatar-bg)\",\n                                                  color:\n                                                    \"var(--pink-avatar-color)\"\n                                                }\n                                              },\n                                              [\n                                                _c(\"i\", {\n                                                  staticClass:\n                                                    \"fa fa-comments-o\",\n                                                  attrs: {\n                                                    \"aria-hidden\": \"true\"\n                                                  }\n                                                })\n                                              ]\n                                            )\n                                          ]\n                                        ),\n                                        _vm._v(\" \"),\n                                        _c(\"div\", { staticClass: \"message\" }, [\n                                          _c(\"div\", [\n                                            _c(\n                                              \"b\",\n                                              { staticClass: \"subject-title\" },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(notification.title) +\n                                                    \" :\"\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\n                                              \"\\n                            \" +\n                                                _vm._s(notification.message) +\n                                                \"\\n                          \"\n                                            )\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"div\",\n                                            {\n                                              staticClass:\n                                                \"notification-timestamp text-muted\"\n                                            },\n                                            [\n                                              _c(\n                                                \"span\",\n                                                {\n                                                  staticClass:\n                                                    \"frappe-timestamp\",\n                                                  attrs: {\n                                                    \"data-timestamp\":\n                                                      \"2021-04-14 11:50:27.887714\",\n                                                    title: \"14-04-2021 11:50:27\"\n                                                  }\n                                                },\n                                                [_vm._v(\"53 minutes ago\")]\n                                              )\n                                            ]\n                                          )\n                                        ])\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", {\n                                      staticClass: \"mark-as-read\",\n                                      attrs: {\n                                        title: \"\",\n                                        \"data-original-title\": \"Mark as Read\"\n                                      }\n                                    })\n                                  ]\n                                )\n                              }),\n                              0\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"panel-events\" }, [\n                            _vm.notificationList.length < 1\n                              ? _c(\"div\", [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"notification-null-state\" },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"text-center\" },\n                                        [\n                                          _c(\"img\", {\n                                            staticClass: \"null-state\",\n                                            attrs: {\n                                              src:\n                                                \"/assets/frappe/images/ui-states/event-empty-state.svg\",\n                                              alt: \"Generic Empty State\"\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"div\", { staticClass: \"title\" }, [\n                                            _vm._v(\"No notifications\")\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"div\",\n                                            { staticClass: \"subtitle\" },\n                                            [\n                                              _vm._v(\n                                                \"\\n                         All your notifications will be listed here\\n                        \"\n                                              )\n                                            ]\n                                          )\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                ])\n                              : _vm._e()\n                          ])\n                        ])\n                      ]\n                    )\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"li\",\n                  {\n                    staticClass:\n                      \"nav-item dropdown dropdown-message dropdown-mobile hidden\"\n                  },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"nav-link notifications-icon text-muted\",\n                        attrs: {\n                          \"data-toggle\": \"dropdown\",\n                          \"aria-haspopup\": \"true\",\n                          \"aria-expanded\": \"true\",\n                          href: \"#\",\n                          onclick: \"return false;\"\n                        }\n                      },\n                      [\n                        _c(\"span\", [\n                          _c(\"svg\", { staticClass: \"icon icon-md\" }, [\n                            _c(\"use\", {\n                              attrs: { href: \"#icon-small-message\" }\n                            })\n                          ])\n                        ])\n                      ]\n                    )\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"li\", { staticClass: \"vertical-bar d-none d-sm-block\" }),\n                _vm._v(\" \"),\n                _c(\n                  \"li\",\n                  {\n                    staticClass:\n                      \"nav-item dropdown dropdown-help dropdown-mobile d-none d-lg-block\"\n                  },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"nav-link\",\n                        attrs: {\n                          \"data-toggle\": \"dropdown\",\n                          href: \"#\",\n                          onclick: \"return false;\"\n                        }\n                      },\n                      [\n                        _vm._v(\"\\n              Help\\n              \"),\n                        _c(\"span\", [\n                          _c(\"svg\", { staticClass: \"icon icon-xs\" }, [\n                            _c(\"use\", { attrs: { href: \"#icon-small-down\" } })\n                          ])\n                        ])\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"dropdown-menu dropdown-menu-right\",\n                        attrs: { id: \"toolbar-help\", role: \"menu\" }\n                      },\n                      [\n                        _c(\"div\", { attrs: { id: \"help-links\" } }),\n                        _vm._v(\" \"),\n                        _c(\"div\", {\n                          staticClass: \"dropdown-divider documentation-links\",\n                          staticStyle: { display: \"none\" }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              href: \"https://erpnext.com/docs/user/manual\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Go back to Home page\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: { href: \"https://discuss.erpnext.com\" }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Raise a support ticket\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              href: \"https://github.com/frappe/erpnext/issues\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Report an Issue\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick: \"return frappe.ui.toolbar.show_about()\"\n                            }\n                          },\n                          [_vm._v(\"\\n                About\\n              \")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick:\n                                \"return frappe.ui.toolbar.show_shortcuts(event)\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Step by step tutorial\\n              \"\n                            )\n                          ]\n                        )\n                      ]\n                    )\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"li\",\n                  {\n                    staticClass:\n                      \"nav-item dropdown dropdown-navbar-user dropdown-mobile\"\n                  },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        staticClass: \"nav-link\",\n                        attrs: {\n                          \"data-toggle\": \"dropdown\",\n                          href: \"#\",\n                          onclick: \"return false;\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"span\",\n                          {\n                            staticClass: \"avatar avatar-medium\",\n                            attrs: { title: \"Health practioner\" }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"avatar-frame standard-image\",\n                                staticStyle: {\n                                  \"background-color\":\n                                    \"var(--dark-green-avatar-bg)\",\n                                  color: \"var(--dark-green-avatar-color)\"\n                                }\n                              },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"fa fa-user-md\",\n                                  attrs: { \"aria-hidden\": \"true\" }\n                                })\n                              ]\n                            )\n                          ]\n                        )\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"dropdown-menu dropdown-menu-right\",\n                        attrs: { id: \"toolbar-user\", role: \"menu\" }\n                      },\n                      [\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: { href: \"/app/user-profile\" }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                My Profile\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick:\n                                \"return frappe.ui.toolbar.route_to_user()\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                My Settings\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick:\n                                \"return frappe.ui.toolbar.setup_session_defaults()\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Session Defaults\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick: \"return frappe.ui.toolbar.clear_cache()\"\n                            }\n                          },\n                          [_vm._v(\"\\n                Reload\\n              \")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick: \"return frappe.ui.toolbar.view_website()\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                View Website\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick:\n                                \"return frappe.ui.toolbar.toggle_full_width()\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Toggle Full Width\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              onclick:\n                                \"return new frappe.ui.ThemeSwitcher().show()\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Toggle Theme\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: { href: \"/app/background_jobs\" }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                Background Jobs\\n              \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"dropdown-divider\" }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"a\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: { onclick: \"return frappe.app.logout()\" }\n                          },\n                          [_vm._v(\"\\n                Logout\\n              \")]\n                        )\n                      ]\n                    )\n                  ]\n                )\n              ])\n            ]\n          )\n        ])\n      ],\n      1\n    )\n  ])\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-baf23194_0\", { source: \"\\n#page-patient-chart {\\n  height: 100vh;\\n}\\n.notification-badge {\\n  position: absolute;\\n  margin-left: -9px;\\n  top: -3px;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/accounts/core/TopHeader.vue\"],\"names\":[],\"mappings\":\";AA8dA;EACA,aAAA;AACA;AAEA;EACA,kBAAA;EACA,iBAAA;EACA,SAAA;AACA\",\"file\":\"TopHeader.vue\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <header class=\\\"navbar navbar-expand sticky-top\\\" role=\\\"navigation\\\">\\n      <b-container>\\n        <a\\n          class=\\\"navbar-brand navbar-home pull-left\\\"\\n          href=\\\"/app\\\"\\n          target=\\\"_blank\\\"\\n        >\\n          <!-- <img\\n            class=\\\"app-logo\\\"\\n            style=\\\"width: 24px\\\"\\n            src=\\\"https://pbs.twimg.com/profile_images/987064489081262081/Wizy1vXs.jpg\\\"\\n          /> -->\\n           <img\\n              class=\\\"app-logo\\\"\\n              style=\\\"width: 24px\\\" \\n              src=\\\"/assets/mtrh_dev/images/logo.jpeg\\\"\\n            />\\n        </a>\\n        <ul class=\\\"nav navbar-nav d-none d-sm-flex\\\" id=\\\"navbar-breadcrumbs\\\">\\n          <li>\\n            <a href=\\\"/app/accounts\\\" target=\\\"_blank\\\">Accounts Workspace</a>\\n          </li>\\n           <li v-for=\\\"path in paths\\\" :key=\\\"path\\\">\\n            <a href=\\\"/app/accounts\\\" target=\\\"_blank\\\">{{path}}</a>\\n          </li>\\n        </ul>\\n        <div class=\\\"collapse navbar-collapse justify-content-end hidden\\\">\\n          <form\\n            class=\\\"form-inline fill-width justify-content-end\\\"\\n            role=\\\"search\\\"\\n            onsubmit=\\\"return false;\\\"\\n          >\\n            <div class=\\\"input-group search-bar text-muted hidden\\\">\\n              <div class=\\\"awesomplete\\\">\\n                <input\\n                  id=\\\"navbar-search\\\"\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"Search or type a command (Ctrl + G)\\\"\\n                  aria-haspopup=\\\"true\\\"\\n                  autocomplete=\\\"off\\\"\\n                  aria-expanded=\\\"false\\\"\\n                  aria-owns=\\\"awesomplete_list_1\\\"\\n                  role=\\\"combobox\\\"\\n                  aria-activedescendant=\\\"awesomplete_list_1_item_0\\\"\\n                />\\n                <ul role=\\\"listbox\\\" id=\\\"awesomplete_list_1\\\" hidden=\\\"\\\">\\n                  <li aria-selected=\\\"true\\\">\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span>\\n                        <span class=\\\"flex justify-between text-medium\\\">\\n                          <span class=\\\"ellipsis\\\"\\n                            >Search for <b>Patient C</b></span\\n                          >\\n                          <kbd>\u21B5</kbd>\\n                        </span>\\n                      </span></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span>Open <mark>Patient C</mark>hart</span></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        ><mark>P</mark><mark>a</mark><mark>t</mark><mark>i</mark\\n                        ><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>En<mark>c</mark>ounter List</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        ><mark>P</mark><mark>a</mark><mark>t</mark><mark>i</mark\\n                        ><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>En<mark>c</mark>ounter Report</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >New <mark>P</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>En<mark>c</mark>ounter</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >In<mark>p</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>Re<mark>c</mark>ord List</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >In<mark>p</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>Re<mark>c</mark>ord Report</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >New In<mark>p</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>Re<mark>c</mark>ord</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span>Help on Search</span></a\\n                    >\\n                  </li>\\n                </ul>\\n                <span\\n                  class=\\\"visually-hidden\\\"\\n                  role=\\\"status\\\"\\n                  aria-live=\\\"assertive\\\"\\n                  aria-atomic=\\\"true\\\"\\n                  hidden=\\\"\\\"\\n                  >9 results found</span\\n                >\\n              </div>\\n              <span class=\\\"search-icon\\\">\\n                <svg class=\\\"icon icon-sm\\\">\\n                  <use xlink:href=\\\"#icon-search\\\"></use>\\n                </svg>\\n              </span>\\n            </div>\\n          </form>\\n          <ul class=\\\"navbar-nav\\\">\\n            <li\\n              class=\\\"nav-item dropdown dropdown-notifications dropdown-mobile\\\"\\n            >\\n              <a\\n                class=\\\"nav-link notifications-icon text-muted\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"true\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n                title=\\\"\\\"\\n                data-original-title=\\\"Notifications\\\"\\n              >\\n                <div>\\n                  <span class=\\\"notifications-seen\\\">\\n                    <svg class=\\\"icon icon-md\\\">\\n                      <use href=\\\"#icon-notification\\\"></use>\\n                    </svg>\\n                  </span>\\n                  <b-badge  v-if=\\\"notificationList.length>0\\\"  class=\\\"notification-badge\\\" variant=\\\"danger\\\">{{\\n                    notificationList.length\\n                  }}</b-badge>\\n                </div>\\n\\n                <span class=\\\"notifications-unseen\\\">\\n                  <svg class=\\\"icon icon-md\\\">\\n                    <use href=\\\"#icon-notification-with-indicator\\\"></use>\\n                  </svg>\\n                </span>\\n              </a>\\n              <div\\n                class=\\\"dropdown-menu notifications-list dropdown-menu-right\\\"\\n                role=\\\"menu\\\"\\n              >\\n                <div class=\\\"notification-list-header\\\">\\n                  <div class=\\\"header-items\\\">\\n                    <ul\\n                      class=\\\"notification-item-tabs nav nav-tabs\\\"\\n                      role=\\\"tablist\\\"\\n                    >\\n                      <li\\n                        class=\\\"notifications-category\\\"\\n                        id=\\\"notifications\\\"\\n                        data-toggle=\\\"collapse\\\"\\n                      >\\n                        Notifications\\n                      </li>\\n                    </ul>\\n                  </div>\\n                  <div class=\\\"header-actions\\\">\\n                    <span v-if=\\\"notificationList.length >0\\\"\\n                      class=\\\"mark-all-read pull-right\\\"\\n                      data-action=\\\"mark_all_as_read\\\"\\n                      title=\\\"\\\"\\n                      data-original-title=\\\"Mark all as read\\\"\\n                      @click=\\\"clearNotification()\\\"\\n                    >\\n                      <svg class=\\\"icon icon-sm\\\" style=\\\"\\\">\\n                        <use class=\\\"\\\" href=\\\"#icon-mark-as-read\\\"></use>\\n                      </svg>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"notification-list-body\\\">\\n                  <div class=\\\"panel-notifications\\\">\\n                    <div style=\\\"display: block\\\">\\n                      <a\\n                        v-for=\\\"notification in notificationList\\\"\\n                        :key=\\\"notification.name\\\"\\n                        class=\\\"recent-item notification-item unread\\\"\\n                        href=\\\"javascript:function() { return false; }\\\"\\n\\n                        data-name=\\\"0a283f5b8f\\\"\\n                        @click=\\\"clearNotification(notification.name)\\\"\\n                      >\\n                        <div class=\\\"notification-body\\\">\\n                          <span\\n                            class=\\\"avatar avatar-medium user-avatar\\\"\\n                            title=\\\"Philip Ademba\\\"\\n                          >\\n                            <div\\n                              class=\\\"avatar-frame standard-image\\\"\\n                              style=\\\"\\n                                background-color: var(--pink-avatar-bg);\\n                                color: var(--pink-avatar-color);\\n                              \\\"\\n                            >\\n                              <i\\n                                class=\\\"fa fa-comments-o\\\"\\n                                aria-hidden=\\\"true\\\"\\n                              ></i>\\n                            </div>\\n                          </span>\\n                          <div class=\\\"message\\\">\\n                            <div>\\n                              <b class=\\\"subject-title\\\"\\n                                >{{ notification.title }} :</b\\n                              >\\n                              {{ notification.message }}\\n                            </div>\\n                            <div class=\\\"notification-timestamp text-muted\\\">\\n                              <span\\n                                class=\\\"frappe-timestamp\\\"\\n                                data-timestamp=\\\"2021-04-14 11:50:27.887714\\\"\\n                                title=\\\"14-04-2021 11:50:27\\\"\\n                                >53 minutes ago</span\\n                              >\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div\\n                          class=\\\"mark-as-read\\\"\\n                          title=\\\"\\\"\\n                          data-original-title=\\\"Mark as Read\\\"\\n                        ></div>\\n                      </a>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"panel-events\\\">\\n                    <div v-if=\\\"notificationList.length<1\\\" >\\n                      <div class=\\\"notification-null-state\\\">\\n                        <div class=\\\"text-center\\\">\\n                          <img\\n                            src=\\\"/assets/frappe/images/ui-states/event-empty-state.svg\\\"\\n                            alt=\\\"Generic Empty State\\\"\\n                            class=\\\"null-state\\\"\\n                          />\\n                          <div class=\\\"title\\\">No notifications</div>\\n                          <div class=\\\"subtitle\\\">\\n                           All your notifications will be listed here\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </li>\\n            <li\\n              class=\\\"nav-item dropdown dropdown-message dropdown-mobile hidden\\\"\\n            >\\n              <a\\n                class=\\\"nav-link notifications-icon text-muted\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"true\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n              >\\n                <span>\\n                  <svg class=\\\"icon icon-md\\\">\\n                    <use href=\\\"#icon-small-message\\\"></use>\\n                  </svg>\\n                </span>\\n              </a>\\n            </li>\\n            <li class=\\\"vertical-bar d-none d-sm-block\\\"></li>\\n            <li\\n              class=\\\"nav-item dropdown dropdown-help dropdown-mobile d-none d-lg-block\\\"\\n            >\\n              <a\\n                class=\\\"nav-link\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n              >\\n                Help\\n                <span>\\n                  <svg class=\\\"icon icon-xs\\\">\\n                    <use href=\\\"#icon-small-down\\\"></use>\\n                  </svg>\\n                </span>\\n              </a>\\n              <div\\n                class=\\\"dropdown-menu dropdown-menu-right\\\"\\n                id=\\\"toolbar-help\\\"\\n                role=\\\"menu\\\"\\n              >\\n                <div id=\\\"help-links\\\"></div>\\n                <div\\n                  class=\\\"dropdown-divider documentation-links\\\"\\n                  style=\\\"display: none\\\"\\n                ></div>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  href=\\\"https://erpnext.com/docs/user/manual\\\"\\n                >\\n                  Go back to Home page\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"https://discuss.erpnext.com\\\">\\n                  Raise a support ticket\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  href=\\\"https://github.com/frappe/erpnext/issues\\\"\\n                >\\n                  Report an Issue\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.show_about()\\\"\\n                >\\n                  About\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.show_shortcuts(event)\\\"\\n                >\\n                  Step by step tutorial\\n                </a>\\n              </div>\\n            </li>\\n            <li class=\\\"nav-item dropdown dropdown-navbar-user dropdown-mobile\\\">\\n              <a\\n                class=\\\"nav-link\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n              >\\n                <span class=\\\"avatar avatar-medium\\\" title=\\\"Health practioner\\\">\\n                  <div\\n                    class=\\\"avatar-frame standard-image\\\"\\n                    style=\\\"\\n                      background-color: var(--dark-green-avatar-bg);\\n                      color: var(--dark-green-avatar-color);\\n                    \\\"\\n                  >\\n                    <i class=\\\"fa fa-user-md\\\" aria-hidden=\\\"true\\\"></i>\\n                  </div>\\n                </span>\\n              </a>\\n              <div\\n                class=\\\"dropdown-menu dropdown-menu-right\\\"\\n                id=\\\"toolbar-user\\\"\\n                role=\\\"menu\\\"\\n              >\\n                <a class=\\\"dropdown-item\\\" href=\\\"/app/user-profile\\\">\\n                  My Profile\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.route_to_user()\\\"\\n                >\\n                  My Settings\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.setup_session_defaults()\\\"\\n                >\\n                  Session Defaults\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.clear_cache()\\\"\\n                >\\n                  Reload\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.view_website()\\\"\\n                >\\n                  View Website\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.toggle_full_width()\\\"\\n                >\\n                  Toggle Full Width\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return new frappe.ui.ThemeSwitcher().show()\\\"\\n                >\\n                  Toggle Theme\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"/app/background_jobs\\\">\\n                  Background Jobs\\n                </a>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <a class=\\\"dropdown-item\\\" onclick=\\\"return frappe.app.logout()\\\">\\n                  Logout\\n                </a>\\n              </div>\\n            </li>\\n          </ul>\\n        </div>\\n      </b-container>\\n    </header>\\n  </div>\\n</template>\\n\\n<script>\\n// import notificationModule from \\\"./../../state/notification/moduleNotification.js\\\";\\nexport default {\\n  name: \\\"TopHeader\\\",\\n  data() {\\n    return {\\n      notificationList:[],\\n      paths:[]\\n    };\\n  },\\n  // computed: {\\n  //   notificationListd() {\\n  //     return  [];\\n  //   },\\n  // },\\n  watch: {\\n    $route(val) {\\n    \\n     const fullPath = val.fullPath;\\n     this.paths = fullPath.split(\\\"/\\\").filter(item => item&& item.length >0);\\n      \\n    },\\n  },\\n  created() {},\\n  mounted() {\\n    const user = frappe.session.user;\\n    this.getNotifications(user);\\n  },\\n  \\n  methods: {\\n    getNotifications(user) {\\n      const payload = { ref: user };\\n      // this.$store.dispatch(\\\"notification/fetchNotifications\\\", payload);\\n    },\\n\\n    clearNotification(name) {\\n      const payload = { name, user: frappe.session.user };\\n      // this.$store.dispatch(\\\"notification/clearNotification\\\", payload);\\n    },\\n\\n  },\\n};\\n</script>\\n<style>\\n#page-patient-chart {\\n  height: 100vh;\\n}\\n\\n.notification-badge {\\n  position: absolute;\\n  margin-left: -9px;\\n  top: -3px;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n    <header class=\\\"navbar navbar-expand sticky-top\\\" role=\\\"navigation\\\">\\n      <b-container>\\n        <a\\n          class=\\\"navbar-brand navbar-home pull-left\\\"\\n          href=\\\"/app\\\"\\n          target=\\\"_blank\\\"\\n        >\\n          <!-- <img\\n            class=\\\"app-logo\\\"\\n            style=\\\"width: 24px\\\"\\n            src=\\\"https://pbs.twimg.com/profile_images/987064489081262081/Wizy1vXs.jpg\\\"\\n          /> -->\\n           <img\\n              class=\\\"app-logo\\\"\\n              style=\\\"width: 24px\\\" \\n              src=\\\"/assets/mtrh_dev/images/logo.jpeg\\\"\\n            />\\n        </a>\\n        <ul class=\\\"nav navbar-nav d-none d-sm-flex\\\" id=\\\"navbar-breadcrumbs\\\">\\n          <li>\\n            <a href=\\\"/app/accounts\\\" target=\\\"_blank\\\">Accounts Workspace</a>\\n          </li>\\n           <li v-for=\\\"path in paths\\\" :key=\\\"path\\\">\\n            <a href=\\\"/app/accounts\\\" target=\\\"_blank\\\">{{path}}</a>\\n          </li>\\n        </ul>\\n        <div class=\\\"collapse navbar-collapse justify-content-end hidden\\\">\\n          <form\\n            class=\\\"form-inline fill-width justify-content-end\\\"\\n            role=\\\"search\\\"\\n            onsubmit=\\\"return false;\\\"\\n          >\\n            <div class=\\\"input-group search-bar text-muted hidden\\\">\\n              <div class=\\\"awesomplete\\\">\\n                <input\\n                  id=\\\"navbar-search\\\"\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  placeholder=\\\"Search or type a command (Ctrl + G)\\\"\\n                  aria-haspopup=\\\"true\\\"\\n                  autocomplete=\\\"off\\\"\\n                  aria-expanded=\\\"false\\\"\\n                  aria-owns=\\\"awesomplete_list_1\\\"\\n                  role=\\\"combobox\\\"\\n                  aria-activedescendant=\\\"awesomplete_list_1_item_0\\\"\\n                />\\n                <ul role=\\\"listbox\\\" id=\\\"awesomplete_list_1\\\" hidden=\\\"\\\">\\n                  <li aria-selected=\\\"true\\\">\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span>\\n                        <span class=\\\"flex justify-between text-medium\\\">\\n                          <span class=\\\"ellipsis\\\"\\n                            >Search for <b>Patient C</b></span\\n                          >\\n                          <kbd>\u21B5</kbd>\\n                        </span>\\n                      </span></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span>Open <mark>Patient C</mark>hart</span></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        ><mark>P</mark><mark>a</mark><mark>t</mark><mark>i</mark\\n                        ><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>En<mark>c</mark>ounter List</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        ><mark>P</mark><mark>a</mark><mark>t</mark><mark>i</mark\\n                        ><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>En<mark>c</mark>ounter Report</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >New <mark>P</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>En<mark>c</mark>ounter</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >In<mark>p</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>Re<mark>c</mark>ord List</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >In<mark>p</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>Re<mark>c</mark>ord Report</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span\\n                        >New In<mark>p</mark><mark>a</mark><mark>t</mark\\n                        ><mark>i</mark><mark>e</mark><mark>n</mark><mark>t</mark\\n                        ><mark> </mark>Re<mark>c</mark>ord</span\\n                      ></a\\n                    >\\n                  </li>\\n                  <li>\\n                    <a style=\\\"font-weight: normal\\\"\\n                      ><span>Help on Search</span></a\\n                    >\\n                  </li>\\n                </ul>\\n                <span\\n                  class=\\\"visually-hidden\\\"\\n                  role=\\\"status\\\"\\n                  aria-live=\\\"assertive\\\"\\n                  aria-atomic=\\\"true\\\"\\n                  hidden=\\\"\\\"\\n                  >9 results found</span\\n                >\\n              </div>\\n              <span class=\\\"search-icon\\\">\\n                <svg class=\\\"icon icon-sm\\\">\\n                  <use xlink:href=\\\"#icon-search\\\"></use>\\n                </svg>\\n              </span>\\n            </div>\\n          </form>\\n          <ul class=\\\"navbar-nav\\\">\\n            <li\\n              class=\\\"nav-item dropdown dropdown-notifications dropdown-mobile\\\"\\n            >\\n              <a\\n                class=\\\"nav-link notifications-icon text-muted\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"true\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n                title=\\\"\\\"\\n                data-original-title=\\\"Notifications\\\"\\n              >\\n                <div>\\n                  <span class=\\\"notifications-seen\\\">\\n                    <svg class=\\\"icon icon-md\\\">\\n                      <use href=\\\"#icon-notification\\\"></use>\\n                    </svg>\\n                  </span>\\n                  <b-badge  v-if=\\\"notificationList.length>0\\\"  class=\\\"notification-badge\\\" variant=\\\"danger\\\">{{\\n                    notificationList.length\\n                  }}</b-badge>\\n                </div>\\n\\n                <span class=\\\"notifications-unseen\\\">\\n                  <svg class=\\\"icon icon-md\\\">\\n                    <use href=\\\"#icon-notification-with-indicator\\\"></use>\\n                  </svg>\\n                </span>\\n              </a>\\n              <div\\n                class=\\\"dropdown-menu notifications-list dropdown-menu-right\\\"\\n                role=\\\"menu\\\"\\n              >\\n                <div class=\\\"notification-list-header\\\">\\n                  <div class=\\\"header-items\\\">\\n                    <ul\\n                      class=\\\"notification-item-tabs nav nav-tabs\\\"\\n                      role=\\\"tablist\\\"\\n                    >\\n                      <li\\n                        class=\\\"notifications-category\\\"\\n                        id=\\\"notifications\\\"\\n                        data-toggle=\\\"collapse\\\"\\n                      >\\n                        Notifications\\n                      </li>\\n                    </ul>\\n                  </div>\\n                  <div class=\\\"header-actions\\\">\\n                    <span v-if=\\\"notificationList.length >0\\\"\\n                      class=\\\"mark-all-read pull-right\\\"\\n                      data-action=\\\"mark_all_as_read\\\"\\n                      title=\\\"\\\"\\n                      data-original-title=\\\"Mark all as read\\\"\\n                      @click=\\\"clearNotification()\\\"\\n                    >\\n                      <svg class=\\\"icon icon-sm\\\" style=\\\"\\\">\\n                        <use class=\\\"\\\" href=\\\"#icon-mark-as-read\\\"></use>\\n                      </svg>\\n                    </span>\\n                  </div>\\n                </div>\\n                <div class=\\\"notification-list-body\\\">\\n                  <div class=\\\"panel-notifications\\\">\\n                    <div style=\\\"display: block\\\">\\n                      <a\\n                        v-for=\\\"notification in notificationList\\\"\\n                        :key=\\\"notification.name\\\"\\n                        class=\\\"recent-item notification-item unread\\\"\\n                        href=\\\"javascript:function() { return false; }\\\"\\n\\n                        data-name=\\\"0a283f5b8f\\\"\\n                        @click=\\\"clearNotification(notification.name)\\\"\\n                      >\\n                        <div class=\\\"notification-body\\\">\\n                          <span\\n                            class=\\\"avatar avatar-medium user-avatar\\\"\\n                            title=\\\"Philip Ademba\\\"\\n                          >\\n                            <div\\n                              class=\\\"avatar-frame standard-image\\\"\\n                              style=\\\"\\n                                background-color: var(--pink-avatar-bg);\\n                                color: var(--pink-avatar-color);\\n                              \\\"\\n                            >\\n                              <i\\n                                class=\\\"fa fa-comments-o\\\"\\n                                aria-hidden=\\\"true\\\"\\n                              ></i>\\n                            </div>\\n                          </span>\\n                          <div class=\\\"message\\\">\\n                            <div>\\n                              <b class=\\\"subject-title\\\"\\n                                >{{ notification.title }} :</b\\n                              >\\n                              {{ notification.message }}\\n                            </div>\\n                            <div class=\\\"notification-timestamp text-muted\\\">\\n                              <span\\n                                class=\\\"frappe-timestamp\\\"\\n                                data-timestamp=\\\"2021-04-14 11:50:27.887714\\\"\\n                                title=\\\"14-04-2021 11:50:27\\\"\\n                                >53 minutes ago</span\\n                              >\\n                            </div>\\n                          </div>\\n                        </div>\\n                        <div\\n                          class=\\\"mark-as-read\\\"\\n                          title=\\\"\\\"\\n                          data-original-title=\\\"Mark as Read\\\"\\n                        ></div>\\n                      </a>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"panel-events\\\">\\n                    <div v-if=\\\"notificationList.length<1\\\" >\\n                      <div class=\\\"notification-null-state\\\">\\n                        <div class=\\\"text-center\\\">\\n                          <img\\n                            src=\\\"/assets/frappe/images/ui-states/event-empty-state.svg\\\"\\n                            alt=\\\"Generic Empty State\\\"\\n                            class=\\\"null-state\\\"\\n                          />\\n                          <div class=\\\"title\\\">No notifications</div>\\n                          <div class=\\\"subtitle\\\">\\n                           All your notifications will be listed here\\n                          </div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </li>\\n            <li\\n              class=\\\"nav-item dropdown dropdown-message dropdown-mobile hidden\\\"\\n            >\\n              <a\\n                class=\\\"nav-link notifications-icon text-muted\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                aria-haspopup=\\\"true\\\"\\n                aria-expanded=\\\"true\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n              >\\n                <span>\\n                  <svg class=\\\"icon icon-md\\\">\\n                    <use href=\\\"#icon-small-message\\\"></use>\\n                  </svg>\\n                </span>\\n              </a>\\n            </li>\\n            <li class=\\\"vertical-bar d-none d-sm-block\\\"></li>\\n            <li\\n              class=\\\"nav-item dropdown dropdown-help dropdown-mobile d-none d-lg-block\\\"\\n            >\\n              <a\\n                class=\\\"nav-link\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n              >\\n                Help\\n                <span>\\n                  <svg class=\\\"icon icon-xs\\\">\\n                    <use href=\\\"#icon-small-down\\\"></use>\\n                  </svg>\\n                </span>\\n              </a>\\n              <div\\n                class=\\\"dropdown-menu dropdown-menu-right\\\"\\n                id=\\\"toolbar-help\\\"\\n                role=\\\"menu\\\"\\n              >\\n                <div id=\\\"help-links\\\"></div>\\n                <div\\n                  class=\\\"dropdown-divider documentation-links\\\"\\n                  style=\\\"display: none\\\"\\n                ></div>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  href=\\\"https://erpnext.com/docs/user/manual\\\"\\n                >\\n                  Go back to Home page\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"https://discuss.erpnext.com\\\">\\n                  Raise a support ticket\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  href=\\\"https://github.com/frappe/erpnext/issues\\\"\\n                >\\n                  Report an Issue\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.show_about()\\\"\\n                >\\n                  About\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.show_shortcuts(event)\\\"\\n                >\\n                  Step by step tutorial\\n                </a>\\n              </div>\\n            </li>\\n            <li class=\\\"nav-item dropdown dropdown-navbar-user dropdown-mobile\\\">\\n              <a\\n                class=\\\"nav-link\\\"\\n                data-toggle=\\\"dropdown\\\"\\n                href=\\\"#\\\"\\n                onclick=\\\"return false;\\\"\\n              >\\n                <span class=\\\"avatar avatar-medium\\\" title=\\\"Health practioner\\\">\\n                  <div\\n                    class=\\\"avatar-frame standard-image\\\"\\n                    style=\\\"\\n                      background-color: var(--dark-green-avatar-bg);\\n                      color: var(--dark-green-avatar-color);\\n                    \\\"\\n                  >\\n                    <i class=\\\"fa fa-user-md\\\" aria-hidden=\\\"true\\\"></i>\\n                  </div>\\n                </span>\\n              </a>\\n              <div\\n                class=\\\"dropdown-menu dropdown-menu-right\\\"\\n                id=\\\"toolbar-user\\\"\\n                role=\\\"menu\\\"\\n              >\\n                <a class=\\\"dropdown-item\\\" href=\\\"/app/user-profile\\\">\\n                  My Profile\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.route_to_user()\\\"\\n                >\\n                  My Settings\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.setup_session_defaults()\\\"\\n                >\\n                  Session Defaults\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.clear_cache()\\\"\\n                >\\n                  Reload\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.view_website()\\\"\\n                >\\n                  View Website\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return frappe.ui.toolbar.toggle_full_width()\\\"\\n                >\\n                  Toggle Full Width\\n                </a>\\n                <a\\n                  class=\\\"dropdown-item\\\"\\n                  onclick=\\\"return new frappe.ui.ThemeSwitcher().show()\\\"\\n                >\\n                  Toggle Theme\\n                </a>\\n                <a class=\\\"dropdown-item\\\" href=\\\"/app/background_jobs\\\">\\n                  Background Jobs\\n                </a>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <a class=\\\"dropdown-item\\\" onclick=\\\"return frappe.app.logout()\\\">\\n                  Logout\\n                </a>\\n              </div>\\n            </li>\\n          </ul>\\n        </div>\\n      </b-container>\\n    </header>\\n  </div>\\n</template>\\n\\n<script>\\n// import notificationModule from \\\"./../../state/notification/moduleNotification.js\\\";\\nexport default {\\n  name: \\\"TopHeader\\\",\\n  data() {\\n    return {\\n      notificationList:[],\\n      paths:[]\\n    };\\n  },\\n  // computed: {\\n  //   notificationListd() {\\n  //     return  [];\\n  //   },\\n  // },\\n  watch: {\\n    $route(val) {\\n    \\n     const fullPath = val.fullPath;\\n     this.paths = fullPath.split(\\\"/\\\").filter(item => item&& item.length >0);\\n      \\n    },\\n  },\\n  created() {},\\n  mounted() {\\n    const user = frappe.session.user;\\n    this.getNotifications(user);\\n  },\\n  \\n  methods: {\\n    getNotifications(user) {\\n      const payload = { ref: user };\\n      // this.$store.dispatch(\\\"notification/fetchNotifications\\\", payload);\\n    },\\n\\n    clearNotification(name) {\\n      const payload = { name, user: frappe.session.user };\\n      // this.$store.dispatch(\\\"notification/clearNotification\\\", payload);\\n    },\\n\\n  },\\n};\\n</script>\\n<style>\\n#page-patient-chart {\\n  height: 100vh;\\n}\\n\\n.notification-badge {\\n  position: absolute;\\n  margin-left: -9px;\\n  top: -3px;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "export const api = ({ method, args = {}, freeze=true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, freeze, callback: resolve })\n    );\n\n export const fetch = ({ method, args = {} }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, type:'GET', args, callback: resolve })\n    );\n\nexport const saveFormConfiguration = ({\n        name = \"\",\n        configuration = \"\",\n        department = \"\",\n    }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_configuration\",\n        args: {\n            name,\n            configuration,\n            department,\n        },\n    }).then(({ message }) => message);\n\nexport const getFormConfiguration = ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_form_configuration\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\nexport const getDefaultForm = ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_default_form\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const getFormsPreferences= ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_saved_forms\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const getFormsVersions= ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_form_versions\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const saveFormDoctype = ({ name = \"\", form, permissions }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_doctype\",\n        args: {\n            name,\n            form,\n            permissions,\n        },\n    }).then(({ message }) => message);\n\nexport const saveFormData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateDoctypeData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_doctype_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateFormData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_form_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateFormConfiguration = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_form_configuration\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const searchConcept = (txt) =>\n    api({\n        method: \"clinical.api.forms.form_builder.concept_query\",\n        args: {\n            txt,\n        },\n    }).then(({ message }) => message);", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  getFormConfiguration,\n  saveFormData,\n  updateFormData,\n} from \"../services/forms/builder.js\";\n\n\nconst __vue_script__ = {\n  name: \"FormRenderView\",\n\n  data: function() {\n    return {\n      some_data: \"To\",\n      date: null,\n      previewMode: false,\n      title: \"\",\n      department: \"\",\n      tableName: \"\",\n      configuration: {},\n      draftForm: {},\n      formData: null,\n      formName: null,\n      selectedItem: null,\n      formInputData: null,\n      originalConfig: null,\n      changeLog: [],\n      savedDocument: null,\n      allFormConfigurationData: null,\n      renderComponent: true,\n      reference:{},\n      mappedDoctypeName: null, \n    };\n  },\n  props: {\n    selectedDoctype: { type: String },\n    selectedDoctypeReference: { type: String },\n    currentFormName: { type: String },\n    patient: { type: Object },\n    dataInput: { type: Object },\n    prePopulate: { type: Object },\n    isReadonly: { type: Boolean, default: false },\n    isSaveOnly: { type: Boolean, default: false },\n    hasOwner: { type: Boolean, default: false },\n    powerThrough: { type: Boolean, default: false },\n    parent: String,\n  },\n  watch: {\n    prePopulate(val){\n      this.dataPrepoulate(this.formData)    \n    },\n    dataInput(newVal) {\n      this.setValues(newVal);\n    },\n\n    previewMode(newVal, oldVal) {\n      if (newVal) {\n        const conf = this.configuration;\n        keys = Object.keys(newVal);\n        keys.forEach((key) => {\n          this.formInputData[`${key}`] = newVal[`${key}`];\n        });\n\n        this.formData = conf;\n      }\n    },\n    selectedDoctype(doctype) {\n      if (doctype) {\n        this.makeDoctypeItemControl(doctype);\n      }\n    },\n    currentFormName(name) {\n      if (name) {\n        this.getForm(name);\n      }\n    },\n\n  },\n  methods: {\n    forceRerender() {\n      this.renderComponent = false;\n\n      this.$nextTick(() => {\n        this.renderComponent = true;\n      });\n    },\n    populate() {\n      this.setValues(this.dataInput);\n    },\n    dataPrepoulate(configuration) {\n      if (this.prePopulate) {\n        const keys = Object.keys(this.prePopulate);\n        const controlValues = Object.values(configuration.controls);\n        const transformedData = {};\n        keys.forEach((key) => {\n          const currentControl = controlValues.find(\n            (control) => control.mappedField === key\n          );\n          if (currentControl) {\n            const updatedKey = currentControl.name;\n            transformedData[updatedKey] = this.prePopulate[key];\n          }\n        });\n\n        this.dataInput = transformedData;\n        this.draftForm = { name: this.prePopulate.name };\n      }\n    },\n    clearData() {\n      const val = {};\n      const keys = Object.keys(this.formInputData);\n      keys.forEach((key) => {\n        val[key] = \"\";\n      });\n\n      this.setValues(val);\n    },\n\n    setValues(val) {\n      this.$set(this, \"formInputData\", val);\n    },\n    getFormData() {\n      if (!this.currentFormName) {\n        const formName = frappe.get_route()[2];\n        this.tableName = formName.split(\"-\")[1];\n        this.showModal();\n      } else {\n        if (!this.selectedDoctype || !this.selectedDoctypeReference) {\n          this.showModal();\n        } else {\n          this.save();\n        }\n      }\n    },\n    getFormInputData() {},\n    exportData() {\n      this.showModal();\n    },\n    previewForm() {\n      this.previewMode = !this.previewMode;\n    },\n    showModal() {\n      if (this.hasOwner) {\n        this.$refs[\"save_modal\"].show();\n      } else if (!this.draftForm.name) {\n        this.initialSave();\n      } else {\n        this.save();\n      }\n    },\n    clear() {\n      this.formData = null;\n      this.formData = this.originalConfig;\n    },\n    makeSelectDoctypeControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference\"),\n          fieldtype: \"Link\",\n          fieldname: \"reference\",\n          options: \"DocType\",\n          placeholder: __(\"Search Reference\"),\n          onchange: function() {\n            if (this.value) {\n              me.selectedDoctype = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"doctype\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n      $(\"#modal-body\")\n        .find(\".input-max-width\")\n        .removeClass(\"input-max-width\");\n    },\n    get_new_frm(_frm) {\n      const doctype = \"Patient\";\n      const page = $(\"#form\");\n\n      const layout = new frappe.ui.form.Layout({\n        parent: page,\n        doctype: doctype,\n        doctype_layout: null,\n        frm: {},\n        with_dashboard: false,\n        card_layout: true,\n      });\n      layout.make();\n      console.log(layout);\n\n      return frm;\n    },\n    makeDoctypeItemControl(doctype) {\n      const div = $(\"#ref-field\");\n      div.empty();\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference Id\"),\n          fieldtype: \"Link\",\n          fieldname: \"itemControl\",\n          options: doctype,\n          placeholder: __(\"Reference Id\"),\n          onchange: function() {\n            if (this.value) {\n              me.selectedDoctypeReference = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"docId\"],\n        render_input: true,\n      });\n      customer_field.toggle_label(false);\n      $(\"#modal-body\")\n        .find(\".input-max-width\")\n        .removeClass(\"input-max-width\");\n    },\n    saveForm(formData) {\n    \n      this.hideModal();\n      saveFormData(formData).then((saved) => {\n        frappe.show_alert(\"Form Saved \" + saved.name, 5);\n      \n        this.formData = null;\n        this.setValues({});\n        this.selectedDoctype = null;\n        this.selectedDoctypeReference = null;\n        this.sendToTimeline(\n          this.patient.patient,\n          \"Form Repository\",\n          saved.name,\n          saved.owner\n        );\n      });\n    },\n    initialSave() {\n      this.hideModal();\n      let form_content = \"{}\";\n      const form_name = this.formName;\n      const reference_doctype = this.selectedDoctype;\n      const reference_doctype_id = this.selectedDoctypeReference;\n      let doctype = \"Form Repository\";\n      let formData = {\n        doctype,\n        form_content,\n        form_name,\n        reference_doctype,\n        reference_doctype_id,\n        completion_status: \"Initial\",\n      };\n      saveFormData({ formData }).then((saved) => {\n        this.draftForm = saved;\n        if (this.powerThrough) {\n          this.saveDoctype();\n        }\n      });\n    },\n    getForm(name) {\n      getFormConfiguration({ name }).then((config) => {\n        this.allFormConfigurationData = config;\n        const formStringConfig = config.formdata;\n        const configObject = JSON.parse(formStringConfig);\n        this.dataPrepoulate(configObject);\n        this.formName = config.name;\n        this.formData = configObject;\n        this.originalConfig = configObject;\n      });\n    },\n\n    hideModal() {\n      this.$refs[\"save_modal\"].hide();\n    },\n    navigateToList() {\n      const formName = frappe.get_route()[2];\n      this.tableName = formName.split(\"-\")[1];\n    },\n\n    sendToTimeline(\n      patient,\n      reference_doctype,\n      reference_name,\n      reference_owner\n    ) {\n     \n      let formData = {\n        reference_doctype,\n        reference_name,\n        doctype: \"Patient Medical Record\",\n        patient,\n        status: \"Open\",\n        reference_owner,\n      };\n\n      saveFormData({ formData }).then((saved) => {\n        frappe.show_alert(\"Timeline updated\", 5);\n      });\n    },\n    saveDoctype() {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to save the changes?\")\n        .then((value) => {\n          if (value) {\n            alert(\"SAving to db\")\n            this.saveDoctypeToDb();\n          }\n          this.$bvModal.hide('add_l_modal')\n        })\n        .catch((err) => {\n          // An error occurred\n        });\n    },\n    saveDoctypeToDb() {  \n      if (this.formData.formConfig.mappedDoctype) {\n        const keys = Object.keys(this.formInputData);\n        let formData = { doctype: this.formData.formConfig.mappedDoctype };\n\n        keys.forEach((key) => {\n          if (this.formData.controls[key]) {\n            const control = this.formData.controls[key];\n            if (\n              control &&\n              (control.type === \"radio\" ||\n                control.type === \"dropDown\" ||\n                control.type === \"checkbox\")\n            ) {\n              if (control.items.length) {\n                const erpValueObject = control.items.find(\n                  (item) => item.value === this.formInputData[key]\n                );\n                const field = this.formData.controls[key].mappedField;\n                if (field) {\n                  formData[field] = erpValueObject.erpValue;\n                }\n              }\n            } else {\n              const field = this.formData.controls[key].mappedField;\n              if (field) {\n                formData[field] = this.formInputData[key];\n              }\n            }\n          } else if (Array.isArray(this.formInputData[key])) {\n            formData[key] = this.formInputData[key];\n          }\n\n\n          this.allFormConfigurationData.context_item.forEach((item) => {\n            formData[item.key] = this.context[item.value];\n          });\n\n            if(this.allFormConfigurationData.extras && this.allFormConfigurationData.extras.length ){\n            this.allFormConfigurationData.extras.forEach((item) => { \n                      \n                        formData[item.key] = item.value;\n                      });\n            }\n           \n        });\n        alert(JSON.stringify(formData))\n\n        saveFormData({ formData }).then((saved) => {\n          alert(JSON.stringify(saved))\n          this.mappedDoctypeName = saved.name;\n          frappe.show_alert(\"Saved\", 3);\n          this.savedDocument = saved;\n          this.getFormData();\n        });\n      } else {\n           console.log(\"FRM\", \"getFormData\");\n        this.getFormData();\n      }\n    },\n    populateChildTableReference(){\n      this.reference = {doctype:this.selectedDoctype,doctype_id:this.selectedDoctypeReference  }\n    },\n    save() {\n      this.hideModal();\n      let form_content = this.formInputData;\n      form_content = JSON.stringify(form_content);\n      const form_name = this.formName;\n      const reference_doctype =\n        this.allFormConfigurationData.owner_doctype ||\n        this.selectedDoctype ||\n        this.formData.formConfig.mappedDoctype;\n      let reference_doctype_id = null;\n      if (this.allFormConfigurationData.context_reference) {\n        reference_doctype_id =\n          this.context[this.allFormConfigurationData.context_owner_name] ||\n          this.selectedDoctypeReference ||\n          this.savedDocument.name;\n      } else {\n        reference_doctype_id =\n          this.allFormConfigurationData.owner_doctype_reference ||\n          this.selectedDoctypeReference ||\n          this.savedDocument.name;\n      }\n\n      let name = null;\n\n      if (this.draftForm && this.draftForm.name) {\n        name = this.draftForm.name;\n      }\n    \n      let doctype = \"Form Repository\";\n      let formData = {\n        doctype,\n        name,\n        form_content,\n        form_name,\n        mapped_doctype_name : this.mappedDoctypeName,\n        mapped_doctype: this.formData.formConfig.mappedDoctype,\n        reference_doctype,\n        reference_doctype_id,\n        completion_status: \"Completed\",\n        completed:1,\n      };\n\n       if(this.encounter  && this.encounter.name){\n         formData.patient_encounter =this.encounter.name;      \n      };\n\n       alert(JSON.stringify(formData))\n\n      updateFormData({ formData }).then((result) => {\n        alert(\"Finale\")\n        frappe.show_alert(\"Form updated \" + result.name, 5);\n        this.draftForm = {};\n        this.clearData();\n        this.forceRerender();\n        this.$emit(\"callback\", { formData, document: this.savedDocument });\n      });\n    },\n  },\n  computed: {\n    context() {\n      return this.$store.getters[\"context/getContext\"];\n    },\n    isShowOverlay() {\n      return !this.draftForm.name;\n    },\n    opacity() {\n      return this.isReadonly ? 0 : 0.2;\n    },\n     encounter() {\n      return this.$store.getters[\"encounter/getEncounter\"];\n    },\n  },\n  created() {\n    \n    if (this.currentFormName) {\n      this.getForm(this.currentFormName);\n    }\n    this.populateChildTableReference()\n \n  },\n\n  mounted() {\n\n    this.$formEvent.$on(\"submit\", (value) => {});\n    this.$root.$on(\"bv::modal::shown\", (bvEvent, modalId) => {\n      if (modalId === \"modal-id-1\") {\n        this.makeSelectDoctypeControl();\n      }\n    });\n    const context = this;\n    setTimeout(() => {\n      context.populate();\n    }, 1000);\n  },\n  components: {},\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticStyle: { width: \"100% !important\" } },\n    [\n      _c(\n        \"b-overlay\",\n        {\n          staticStyle: { width: \"100% !important\" },\n          attrs: {\n            show: (_vm.isShowOverlay && !_vm.isReadonly) || _vm.isReadonly,\n            opacity: _vm.opacity,\n            \"no-center\": \"\",\n            rounded: \"sm\"\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"overlay\",\n              fn: function() {\n                return [\n                  _c(\n                    \"div\",\n                    { staticClass: \"text-center\" },\n                    [\n                      (!_vm.draftForm.name &&\n                        _vm.formData &&\n                        !_vm.isReadonly) ||\n                      (!_vm.draftForm.name && _vm.isReadonly && _vm.isSaveOnly)\n                        ? _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"white-text pull-right mr-5 mt-3\",\n                              attrs: { variant: \"primary\", size: \"sm\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.showModal()\n                                }\n                              }\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fa fa-edit\" }),\n                              _vm._v(\" Click to start\\n        \")\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.isSaveOnly && _vm.draftForm.name && _vm.isReadonly\n                        ? _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"white-text pull-right mr-5 mt-3\",\n                              attrs: { variant: \"primary\", size: \"sm\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.saveDoctype()\n                                }\n                              }\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fa fa-save\" }),\n                              _vm._v(\" Save\\n        \")\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _c(\n            \"b-container\",\n            {\n              staticClass: \"main-page mb-4\",\n              staticStyle: { width: \"100% !important\" }\n            },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"spacer-left-5\" },\n                [\n                  _c(\"b-row\", [\n                    _c(\n                      \"div\",\n                      { staticClass: \"render-form row\" },\n                      [\n                        _vm.formData && !_vm.isReadonly\n                          ? _c(\n                              \"b-row\",\n                              {\n                                staticClass: \"save-btn mb-2\",\n                                staticStyle: { width: \"100%\" }\n                              },\n                              [\n                                _c(\"b-col\", { attrs: { cols: \"8\" } }, [\n                                  _c(\"h3\", { staticClass: \"ml-2 upper-case\" }, [\n                                    _vm._v(_vm._s(_vm.currentFormName))\n                                  ])\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"b-col\",\n                                  {\n                                    staticClass: \"pull-right\",\n                                    attrs: { cols: \"4\" }\n                                  },\n                                  [\n                                    _c(\n                                      \"b-button-group\",\n                                      { staticClass: \"pull-right\" },\n                                      [\n                                        _vm.draftForm.name\n                                          ? _c(\n                                              \"b-button\",\n                                              {\n                                                staticClass:\n                                                  \"white-text pull-right\",\n                                                attrs: { variant: \"primary\" },\n                                                on: {\n                                                  click: function($event) {\n                                                    return _vm.saveDoctype()\n                                                  }\n                                                }\n                                              },\n                                              [\n                                                _c(\"i\", {\n                                                  staticClass: \"fa fa-save\"\n                                                }),\n                                                _vm._v(\n                                                  \" Save\\n                  \"\n                                                )\n                                              ]\n                                            )\n                                          : _vm._e()\n                                      ],\n                                      1\n                                    )\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.renderComponent\n                          ? _c(\"FormRenderer\", {\n                              staticStyle: { width: \"100% !important\" },\n                              attrs: {\n                                \"form-configuration\": _vm.formData,\n                                parent: _vm.draftForm.name || _vm.parent,\n                                reference: _vm.reference\n                              },\n                              model: {\n                                value: _vm.formInputData,\n                                callback: function($$v) {\n                                  _vm.formInputData = $$v\n                                },\n                                expression: \"formInputData\"\n                              }\n                            })\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-modal\",\n                    {\n                      ref: \"save_modal\",\n                      attrs: {\n                        id: \"modal-id-1\",\n                        size: \"sm\",\n                        \"hide-footer\": \"\"\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"modal-title\",\n                          fn: function() {\n                            return [_vm._v(\" Confirm save form data \")]\n                          },\n                          proxy: true\n                        }\n                      ])\n                    },\n                    [\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-row\",\n                        {\n                          staticClass: \"modal-padding\",\n                          attrs: { id: \"modal-body\" }\n                        },\n                        [\n                          _c(\"b-col\", {\n                            ref: \"doctype\",\n                            staticClass: \"ref-field-input\",\n                            attrs: { cols: 12 }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"b-col\", {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.selectedDoctype,\n                                expression: \"selectedDoctype\"\n                              }\n                            ],\n                            ref: \"docId\",\n                            staticClass: \"ref-field-input\",\n                            attrs: { cols: 12, id: \"ref-field\" }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"b-col\", {\n                            staticClass: \"ref-field-input\",\n                            attrs: { cols: 12, id: \"form\" }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-3 btn btn-primary\",\n                          attrs: { block: \"\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.initialSave()\n                            }\n                          }\n                        },\n                        [_vm._v(\"Save\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-74881128_0\", { source: \"\\n.spacer[data-v-74881128] {\\n  margin-top: 10px;\\n}\\n.space-right[data-v-74881128] {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left[data-v-74881128] {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn[data-v-74881128] {\\n  color: white;\\n  margin-top: 2%;\\n}\\n.spacer-left-5[data-v-74881128] {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form[data-v-74881128] {\\n  padding-top: 0px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n  width:100% !important;\\n}\\n.white-text[data-v-74881128] {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border[data-v-74881128] {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding[data-v-74881128] {\\n  padding-bottom: 50px;\\n  /* padding-right: 50px; */\\n}\\n.main-page[data-v-74881128] {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin[data-v-74881128] {\\n  margin-top: 20px;\\n}\\n.card[data-v-74881128] {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card[data-v-74881128]:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n.fb-area[data-v-74881128] {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n.container-fluid[data-v-74881128] {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n.space-left[data-v-74881128] {\\n  margin-left: 8px;\\n}\\n.ref-field-input[data-v-74881128] {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width[data-v-74881128] {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding[data-v-74881128] {\\n  padding-left: 15px;\\n}\\n.upper-case[data-v-74881128] {\\n  text-transform: uppercase;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/forms/Frm.vue\"],\"names\":[],\"mappings\":\";AAikBA;EACA,gBAAA;AACA;AACA;EACA,6BAAA;EACA,mBAAA;AACA;AACA;EACA,4BAAA;EACA,kBAAA;AACA;AACA;EACA,YAAA;EACA,cAAA;AACA;AACA;EACA,2BAAA;EACA,iBAAA;AACA;AACA;EACA,gBAAA;EACA,kBAAA;EACA,oBAAA;EACA,qBAAA;AACA;AACA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,0BAAA;;EAEA,gBAAA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,oBAAA;EACA,yBAAA;AACA;AACA;EACA,gBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;AACA;AAEA;EACA,4CAAA;EACA,0CAAA;EACA,gBAAA;AACA;;AAEA,uCAAA;AACA;EACA,2CAAA;AACA;AAEA;EACA,iBAAA;EACA,mBAAA;AACA;AAEA;EACA,uBAAA;EACA,mBAAA;AACA;AAEA;EACA,gBAAA;AACA;AAEA;EACA,YAAA;EACA,iBAAA;AACA;AACA;EACA,sBAAA;EACA,gBAAA;AACA;AACA;EACA,kBAAA;AACA;AACA;EACA,yBAAA;AACA\",\"file\":\"Frm.vue\",\"sourcesContent\":[\"<template>\\n\\n  <div style=\\\"width:100% !important\\\">\\n    <b-overlay  style=\\\"width:100% !important\\\"\\n      :show=\\\"(isShowOverlay && !isReadonly) || isReadonly\\\"\\n      :opacity=\\\"opacity\\\"\\n      no-center\\n      rounded=\\\"sm\\\"\\n    >\\n\\n      <b-container class=\\\"main-page mb-4\\\"  style=\\\"width:100% !important\\\">\\n        <div class=\\\"spacer-left-5\\\">\\n\\n          <b-row>\\n            <div class=\\\"render-form row\\\">\\n              <b-row\\n                class=\\\"save-btn mb-2\\\"\\n                style=\\\"width:100%\\\"\\n                v-if=\\\"formData && !isReadonly\\\"\\n              >\\n                <b-col cols=\\\"8\\\">\\n                  <h3 class=\\\"ml-2 upper-case\\\">{{ currentFormName }}</h3>\\n                </b-col>\\n                <b-col cols=\\\"4\\\" class=\\\"pull-right\\\">\\n                  <b-button-group class=\\\"pull-right\\\">\\n                    <b-button\\n                      v-if=\\\"draftForm.name\\\"\\n                      variant=\\\"primary\\\"\\n                      class=\\\"white-text pull-right\\\"\\n                      @click=\\\"saveDoctype()\\\"\\n                    >\\n                      <i class=\\\"fa fa-save\\\"></i> Save\\n                    </b-button>\\n                  </b-button-group>\\n                </b-col>\\n              </b-row>\\n\\n              <FormRenderer\\n                style=\\\"width:100% !important\\\"\\n                v-if=\\\"renderComponent\\\"\\n                :form-configuration=\\\"formData\\\"\\n                :parent=\\\"draftForm.name || parent\\\"\\n                :reference=\\\"reference\\\"\\n                v-model=\\\"formInputData\\\"\\n              />\\n            </div>\\n          </b-row>\\n\\n          <b-modal id=\\\"modal-id-1\\\" ref=\\\"save_modal\\\" size=\\\"sm\\\" hide-footer>\\n            <template #modal-title> Confirm save form data </template>\\n            <b-row class=\\\"modal-padding\\\" id=\\\"modal-body\\\">\\n\\n              <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\">\\n              </b-col>\\n\\n              <b-col\\n                :cols=\\\"12\\\"\\n                v-show=\\\"selectedDoctype\\\"\\n                ref=\\\"docId\\\"\\n                id=\\\"ref-field\\\"\\n                class=\\\"ref-field-input\\\"\\n              />\\n\\n              <b-col :cols=\\\"12\\\" id=\\\"form\\\" class=\\\"ref-field-input\\\" />\\n            </b-row>\\n\\n            <b-button class=\\\"mt-3 btn btn-primary\\\" block @click=\\\"initialSave()\\\"\\n              >Save</b-button\\n            >\\n          </b-modal>\\n\\n        </div>\\n      </b-container>\\n      <template #overlay>\\n        <div class=\\\"text-center\\\">\\n          <b-button\\n            v-if=\\\"\\n              (!draftForm.name && formData && !isReadonly) ||\\n                (!draftForm.name && isReadonly && isSaveOnly)\\n            \\\"\\n            variant=\\\"primary\\\"\\n            class=\\\"white-text pull-right mr-5 mt-3\\\"\\n            size=\\\"sm\\\"\\n            @click=\\\"showModal()\\\"\\n          >\\n            <i class=\\\"fa fa-edit\\\"></i> Click to start\\n          </b-button>\\n\\n          <b-button\\n            v-if=\\\"isSaveOnly && draftForm.name && isReadonly\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"sm\\\"\\n            class=\\\"white-text pull-right mr-5 mt-3\\\"\\n            @click=\\\"saveDoctype()\\\"\\n          >\\n            <i class=\\\"fa fa-save\\\"></i> Save\\n          </b-button>\\n        </div>\\n      </template>\\n    </b-overlay>\\n  </div>\\n</template>\\n<script>\\nimport {\\n  getFormConfiguration,\\n  saveFormData,\\n  updateFormData,\\n} from \\\"../services/forms/builder.js\\\";\\n\\n\\nexport default {\\n  name: \\\"FormRenderView\\\",\\n\\n  data: function() {\\n    return {\\n      some_data: \\\"To\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      tableName: \\\"\\\",\\n      configuration: {},\\n      draftForm: {},\\n      formData: null,\\n      formName: null,\\n      selectedItem: null,\\n      formInputData: null,\\n      originalConfig: null,\\n      changeLog: [],\\n      savedDocument: null,\\n      allFormConfigurationData: null,\\n      renderComponent: true,\\n      reference:{},\\n      mappedDoctypeName: null, \\n    };\\n  },\\n  props: {\\n    selectedDoctype: { type: String },\\n    selectedDoctypeReference: { type: String },\\n    currentFormName: { type: String },\\n    patient: { type: Object },\\n    dataInput: { type: Object },\\n    prePopulate: { type: Object },\\n    isReadonly: { type: Boolean, default: false },\\n    isSaveOnly: { type: Boolean, default: false },\\n    hasOwner: { type: Boolean, default: false },\\n    powerThrough: { type: Boolean, default: false },\\n    parent: String,\\n  },\\n  watch: {\\n    prePopulate(val){\\n      this.dataPrepoulate(this.formData)    \\n    },\\n    dataInput(newVal) {\\n      this.setValues(newVal);\\n    },\\n\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        keys = Object.keys(newVal);\\n        keys.forEach((key) => {\\n          this.formInputData[`${key}`] = newVal[`${key}`];\\n        });\\n\\n        this.formData = conf;\\n      }\\n    },\\n    selectedDoctype(doctype) {\\n      if (doctype) {\\n        this.makeDoctypeItemControl(doctype);\\n      }\\n    },\\n    currentFormName(name) {\\n      if (name) {\\n        this.getForm(name);\\n      }\\n    },\\n\\n  },\\n  methods: {\\n    forceRerender() {\\n      this.renderComponent = false;\\n\\n      this.$nextTick(() => {\\n        this.renderComponent = true;\\n      });\\n    },\\n    populate() {\\n      this.setValues(this.dataInput);\\n    },\\n    dataPrepoulate(configuration) {\\n      if (this.prePopulate) {\\n        const keys = Object.keys(this.prePopulate);\\n        const controlValues = Object.values(configuration.controls);\\n        const transformedData = {};\\n        keys.forEach((key) => {\\n          const currentControl = controlValues.find(\\n            (control) => control.mappedField === key\\n          );\\n          if (currentControl) {\\n            const updatedKey = currentControl.name;\\n            transformedData[updatedKey] = this.prePopulate[key];\\n          }\\n        });\\n\\n        this.dataInput = transformedData;\\n        this.draftForm = { name: this.prePopulate.name };\\n      }\\n    },\\n    clearData() {\\n      const val = {};\\n      const keys = Object.keys(this.formInputData);\\n      keys.forEach((key) => {\\n        val[key] = \\\"\\\";\\n      });\\n\\n      this.setValues(val);\\n    },\\n\\n    setValues(val) {\\n      this.$set(this, \\\"formInputData\\\", val);\\n    },\\n    getFormData() {\\n      if (!this.currentFormName) {\\n        const formName = frappe.get_route()[2];\\n        this.tableName = formName.split(\\\"-\\\")[1];\\n        this.showModal();\\n      } else {\\n        if (!this.selectedDoctype || !this.selectedDoctypeReference) {\\n          this.showModal();\\n        } else {\\n          this.save();\\n        }\\n      }\\n    },\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      if (this.hasOwner) {\\n        this.$refs[\\\"save_modal\\\"].show();\\n      } else if (!this.draftForm.name) {\\n        this.initialSave();\\n      } else {\\n        this.save();\\n      }\\n    },\\n    clear() {\\n      this.formData = null;\\n      this.formData = this.originalConfig;\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"DocType\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function() {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\")\\n        .find(\\\".input-max-width\\\")\\n        .removeClass(\\\"input-max-width\\\");\\n    },\\n    get_new_frm(_frm) {\\n      const doctype = \\\"Patient\\\";\\n      const page = $(\\\"#form\\\");\\n\\n      const layout = new frappe.ui.form.Layout({\\n        parent: page,\\n        doctype: doctype,\\n        doctype_layout: null,\\n        frm: {},\\n        with_dashboard: false,\\n        card_layout: true,\\n      });\\n      layout.make();\\n      console.log(layout);\\n\\n      return frm;\\n    },\\n    makeDoctypeItemControl(doctype) {\\n      const div = $(\\\"#ref-field\\\");\\n      div.empty();\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference Id\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"itemControl\\\",\\n          options: doctype,\\n          placeholder: __(\\\"Reference Id\\\"),\\n          onchange: function() {\\n            if (this.value) {\\n              me.selectedDoctypeReference = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"docId\\\"],\\n        render_input: true,\\n      });\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\")\\n        .find(\\\".input-max-width\\\")\\n        .removeClass(\\\"input-max-width\\\");\\n    },\\n    saveForm(formData) {\\n    \\n      this.hideModal();\\n      saveFormData(formData).then((saved) => {\\n        frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n      \\n        this.formData = null;\\n        this.setValues({});\\n        this.selectedDoctype = null;\\n        this.selectedDoctypeReference = null;\\n        this.sendToTimeline(\\n          this.patient.patient,\\n          \\\"Form Repository\\\",\\n          saved.name,\\n          saved.owner\\n        );\\n      });\\n    },\\n    initialSave() {\\n      this.hideModal();\\n      let form_content = \\\"{}\\\";\\n      const form_name = this.formName;\\n      const reference_doctype = this.selectedDoctype;\\n      const reference_doctype_id = this.selectedDoctypeReference;\\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        form_content,\\n        form_name,\\n        reference_doctype,\\n        reference_doctype_id,\\n        completion_status: \\\"Initial\\\",\\n      };\\n      saveFormData({ formData }).then((saved) => {\\n        this.draftForm = saved;\\n        if (this.powerThrough) {\\n          this.saveDoctype();\\n        }\\n      });\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        this.allFormConfigurationData = config;\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        this.dataPrepoulate(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    navigateToList() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n    },\\n\\n    sendToTimeline(\\n      patient,\\n      reference_doctype,\\n      reference_name,\\n      reference_owner\\n    ) {\\n     \\n      let formData = {\\n        reference_doctype,\\n        reference_name,\\n        doctype: \\\"Patient Medical Record\\\",\\n        patient,\\n        status: \\\"Open\\\",\\n        reference_owner,\\n      };\\n\\n      saveFormData({ formData }).then((saved) => {\\n        frappe.show_alert(\\\"Timeline updated\\\", 5);\\n      });\\n    },\\n    saveDoctype() {\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure you want to save the changes?\\\")\\n        .then((value) => {\\n          if (value) {\\n            alert(\\\"SAving to db\\\")\\n            this.saveDoctypeToDb();\\n          }\\n          this.$bvModal.hide('add_l_modal')\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n    saveDoctypeToDb() {  \\n      if (this.formData.formConfig.mappedDoctype) {\\n        const keys = Object.keys(this.formInputData);\\n        let formData = { doctype: this.formData.formConfig.mappedDoctype };\\n\\n        keys.forEach((key) => {\\n          if (this.formData.controls[key]) {\\n            const control = this.formData.controls[key];\\n            if (\\n              control &&\\n              (control.type === \\\"radio\\\" ||\\n                control.type === \\\"dropDown\\\" ||\\n                control.type === \\\"checkbox\\\")\\n            ) {\\n              if (control.items.length) {\\n                const erpValueObject = control.items.find(\\n                  (item) => item.value === this.formInputData[key]\\n                );\\n                const field = this.formData.controls[key].mappedField;\\n                if (field) {\\n                  formData[field] = erpValueObject.erpValue;\\n                }\\n              }\\n            } else {\\n              const field = this.formData.controls[key].mappedField;\\n              if (field) {\\n                formData[field] = this.formInputData[key];\\n              }\\n            }\\n          } else if (Array.isArray(this.formInputData[key])) {\\n            formData[key] = this.formInputData[key];\\n          }\\n\\n\\n          this.allFormConfigurationData.context_item.forEach((item) => {\\n            formData[item.key] = this.context[item.value];\\n          });\\n\\n            if(this.allFormConfigurationData.extras && this.allFormConfigurationData.extras.length ){\\n            this.allFormConfigurationData.extras.forEach((item) => { \\n                      \\n                        formData[item.key] = item.value;\\n                      });\\n            }\\n           \\n        });\\n        alert(JSON.stringify(formData))\\n\\n        saveFormData({ formData }).then((saved) => {\\n          alert(JSON.stringify(saved))\\n          this.mappedDoctypeName = saved.name;\\n          frappe.show_alert(\\\"Saved\\\", 3);\\n          this.savedDocument = saved;\\n          this.getFormData();\\n        });\\n      } else {\\n           console.log(\\\"FRM\\\", \\\"getFormData\\\");\\n        this.getFormData();\\n      }\\n    },\\n    populateChildTableReference(){\\n      this.reference = {doctype:this.selectedDoctype,doctype_id:this.selectedDoctypeReference  }\\n    },\\n    save() {\\n      this.hideModal();\\n      let form_content = this.formInputData;\\n      form_content = JSON.stringify(form_content);\\n      const form_name = this.formName;\\n      const reference_doctype =\\n        this.allFormConfigurationData.owner_doctype ||\\n        this.selectedDoctype ||\\n        this.formData.formConfig.mappedDoctype;\\n      let reference_doctype_id = null;\\n      if (this.allFormConfigurationData.context_reference) {\\n        reference_doctype_id =\\n          this.context[this.allFormConfigurationData.context_owner_name] ||\\n          this.selectedDoctypeReference ||\\n          this.savedDocument.name;\\n      } else {\\n        reference_doctype_id =\\n          this.allFormConfigurationData.owner_doctype_reference ||\\n          this.selectedDoctypeReference ||\\n          this.savedDocument.name;\\n      }\\n\\n      let name = null;\\n\\n      if (this.draftForm && this.draftForm.name) {\\n        name = this.draftForm.name;\\n      }\\n    \\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        name,\\n        form_content,\\n        form_name,\\n        mapped_doctype_name : this.mappedDoctypeName,\\n        mapped_doctype: this.formData.formConfig.mappedDoctype,\\n        reference_doctype,\\n        reference_doctype_id,\\n        completion_status: \\\"Completed\\\",\\n        completed:1,\\n      };\\n\\n       if(this.encounter  && this.encounter.name){\\n         formData.patient_encounter =this.encounter.name;      \\n      };\\n\\n       alert(JSON.stringify(formData))\\n\\n      updateFormData({ formData }).then((result) => {\\n        alert(\\\"Finale\\\")\\n        frappe.show_alert(\\\"Form updated \\\" + result.name, 5);\\n        this.draftForm = {};\\n        this.clearData();\\n        this.forceRerender();\\n        this.$emit(\\\"callback\\\", { formData, document: this.savedDocument });\\n      });\\n    },\\n  },\\n  computed: {\\n    context() {\\n      return this.$store.getters[\\\"context/getContext\\\"];\\n    },\\n    isShowOverlay() {\\n      return !this.draftForm.name;\\n    },\\n    opacity() {\\n      return this.isReadonly ? 0 : 0.2;\\n    },\\n     encounter() {\\n      return this.$store.getters[\\\"encounter/getEncounter\\\"];\\n    },\\n  },\\n  created() {\\n    \\n    if (this.currentFormName) {\\n      this.getForm(this.currentFormName);\\n    }\\n    this.populateChildTableReference()\\n \\n  },\\n\\n  mounted() {\\n\\n    this.$formEvent.$on(\\\"submit\\\", (value) => {});\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      if (modalId === \\\"modal-id-1\\\") {\\n        this.makeSelectDoctypeControl();\\n      }\\n    });\\n    const context = this;\\n    setTimeout(() => {\\n      context.populate();\\n    }, 1000);\\n  },\\n  components: {},\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn {\\n  color: white;\\n  margin-top: 2%;\\n}\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 0px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n  width:100% !important;\\n}\\n.white-text {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  /* padding-right: 50px; */\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.space-left {\\n  margin-left: 8px;\\n}\\n\\n.ref-field-input {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding {\\n  padding-left: 15px;\\n}\\n.upper-case {\\n  text-transform: uppercase;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-74881128\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n\\n  <div style=\\\"width:100% !important\\\">\\n    <b-overlay  style=\\\"width:100% !important\\\"\\n      :show=\\\"(isShowOverlay && !isReadonly) || isReadonly\\\"\\n      :opacity=\\\"opacity\\\"\\n      no-center\\n      rounded=\\\"sm\\\"\\n    >\\n\\n      <b-container class=\\\"main-page mb-4\\\"  style=\\\"width:100% !important\\\">\\n        <div class=\\\"spacer-left-5\\\">\\n\\n          <b-row>\\n            <div class=\\\"render-form row\\\">\\n              <b-row\\n                class=\\\"save-btn mb-2\\\"\\n                style=\\\"width:100%\\\"\\n                v-if=\\\"formData && !isReadonly\\\"\\n              >\\n                <b-col cols=\\\"8\\\">\\n                  <h3 class=\\\"ml-2 upper-case\\\">{{ currentFormName }}</h3>\\n                </b-col>\\n                <b-col cols=\\\"4\\\" class=\\\"pull-right\\\">\\n                  <b-button-group class=\\\"pull-right\\\">\\n                    <b-button\\n                      v-if=\\\"draftForm.name\\\"\\n                      variant=\\\"primary\\\"\\n                      class=\\\"white-text pull-right\\\"\\n                      @click=\\\"saveDoctype()\\\"\\n                    >\\n                      <i class=\\\"fa fa-save\\\"></i> Save\\n                    </b-button>\\n                  </b-button-group>\\n                </b-col>\\n              </b-row>\\n\\n              <FormRenderer\\n                style=\\\"width:100% !important\\\"\\n                v-if=\\\"renderComponent\\\"\\n                :form-configuration=\\\"formData\\\"\\n                :parent=\\\"draftForm.name || parent\\\"\\n                :reference=\\\"reference\\\"\\n                v-model=\\\"formInputData\\\"\\n              />\\n            </div>\\n          </b-row>\\n\\n          <b-modal id=\\\"modal-id-1\\\" ref=\\\"save_modal\\\" size=\\\"sm\\\" hide-footer>\\n            <template #modal-title> Confirm save form data </template>\\n            <b-row class=\\\"modal-padding\\\" id=\\\"modal-body\\\">\\n\\n              <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input\\\">\\n              </b-col>\\n\\n              <b-col\\n                :cols=\\\"12\\\"\\n                v-show=\\\"selectedDoctype\\\"\\n                ref=\\\"docId\\\"\\n                id=\\\"ref-field\\\"\\n                class=\\\"ref-field-input\\\"\\n              />\\n\\n              <b-col :cols=\\\"12\\\" id=\\\"form\\\" class=\\\"ref-field-input\\\" />\\n            </b-row>\\n\\n            <b-button class=\\\"mt-3 btn btn-primary\\\" block @click=\\\"initialSave()\\\"\\n              >Save</b-button\\n            >\\n          </b-modal>\\n\\n        </div>\\n      </b-container>\\n      <template #overlay>\\n        <div class=\\\"text-center\\\">\\n          <b-button\\n            v-if=\\\"\\n              (!draftForm.name && formData && !isReadonly) ||\\n                (!draftForm.name && isReadonly && isSaveOnly)\\n            \\\"\\n            variant=\\\"primary\\\"\\n            class=\\\"white-text pull-right mr-5 mt-3\\\"\\n            size=\\\"sm\\\"\\n            @click=\\\"showModal()\\\"\\n          >\\n            <i class=\\\"fa fa-edit\\\"></i> Click to start\\n          </b-button>\\n\\n          <b-button\\n            v-if=\\\"isSaveOnly && draftForm.name && isReadonly\\\"\\n            variant=\\\"primary\\\"\\n            size=\\\"sm\\\"\\n            class=\\\"white-text pull-right mr-5 mt-3\\\"\\n            @click=\\\"saveDoctype()\\\"\\n          >\\n            <i class=\\\"fa fa-save\\\"></i> Save\\n          </b-button>\\n        </div>\\n      </template>\\n    </b-overlay>\\n  </div>\\n</template>\\n<script>\\nimport {\\n  getFormConfiguration,\\n  saveFormData,\\n  updateFormData,\\n} from \\\"../services/forms/builder.js\\\";\\n\\n\\nexport default {\\n  name: \\\"FormRenderView\\\",\\n\\n  data: function() {\\n    return {\\n      some_data: \\\"To\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      tableName: \\\"\\\",\\n      configuration: {},\\n      draftForm: {},\\n      formData: null,\\n      formName: null,\\n      selectedItem: null,\\n      formInputData: null,\\n      originalConfig: null,\\n      changeLog: [],\\n      savedDocument: null,\\n      allFormConfigurationData: null,\\n      renderComponent: true,\\n      reference:{},\\n      mappedDoctypeName: null, \\n    };\\n  },\\n  props: {\\n    selectedDoctype: { type: String },\\n    selectedDoctypeReference: { type: String },\\n    currentFormName: { type: String },\\n    patient: { type: Object },\\n    dataInput: { type: Object },\\n    prePopulate: { type: Object },\\n    isReadonly: { type: Boolean, default: false },\\n    isSaveOnly: { type: Boolean, default: false },\\n    hasOwner: { type: Boolean, default: false },\\n    powerThrough: { type: Boolean, default: false },\\n    parent: String,\\n  },\\n  watch: {\\n    prePopulate(val){\\n      this.dataPrepoulate(this.formData)    \\n    },\\n    dataInput(newVal) {\\n      this.setValues(newVal);\\n    },\\n\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        keys = Object.keys(newVal);\\n        keys.forEach((key) => {\\n          this.formInputData[`${key}`] = newVal[`${key}`];\\n        });\\n\\n        this.formData = conf;\\n      }\\n    },\\n    selectedDoctype(doctype) {\\n      if (doctype) {\\n        this.makeDoctypeItemControl(doctype);\\n      }\\n    },\\n    currentFormName(name) {\\n      if (name) {\\n        this.getForm(name);\\n      }\\n    },\\n\\n  },\\n  methods: {\\n    forceRerender() {\\n      this.renderComponent = false;\\n\\n      this.$nextTick(() => {\\n        this.renderComponent = true;\\n      });\\n    },\\n    populate() {\\n      this.setValues(this.dataInput);\\n    },\\n    dataPrepoulate(configuration) {\\n      if (this.prePopulate) {\\n        const keys = Object.keys(this.prePopulate);\\n        const controlValues = Object.values(configuration.controls);\\n        const transformedData = {};\\n        keys.forEach((key) => {\\n          const currentControl = controlValues.find(\\n            (control) => control.mappedField === key\\n          );\\n          if (currentControl) {\\n            const updatedKey = currentControl.name;\\n            transformedData[updatedKey] = this.prePopulate[key];\\n          }\\n        });\\n\\n        this.dataInput = transformedData;\\n        this.draftForm = { name: this.prePopulate.name };\\n      }\\n    },\\n    clearData() {\\n      const val = {};\\n      const keys = Object.keys(this.formInputData);\\n      keys.forEach((key) => {\\n        val[key] = \\\"\\\";\\n      });\\n\\n      this.setValues(val);\\n    },\\n\\n    setValues(val) {\\n      this.$set(this, \\\"formInputData\\\", val);\\n    },\\n    getFormData() {\\n      if (!this.currentFormName) {\\n        const formName = frappe.get_route()[2];\\n        this.tableName = formName.split(\\\"-\\\")[1];\\n        this.showModal();\\n      } else {\\n        if (!this.selectedDoctype || !this.selectedDoctypeReference) {\\n          this.showModal();\\n        } else {\\n          this.save();\\n        }\\n      }\\n    },\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      if (this.hasOwner) {\\n        this.$refs[\\\"save_modal\\\"].show();\\n      } else if (!this.draftForm.name) {\\n        this.initialSave();\\n      } else {\\n        this.save();\\n      }\\n    },\\n    clear() {\\n      this.formData = null;\\n      this.formData = this.originalConfig;\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"DocType\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function() {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\")\\n        .find(\\\".input-max-width\\\")\\n        .removeClass(\\\"input-max-width\\\");\\n    },\\n    get_new_frm(_frm) {\\n      const doctype = \\\"Patient\\\";\\n      const page = $(\\\"#form\\\");\\n\\n      const layout = new frappe.ui.form.Layout({\\n        parent: page,\\n        doctype: doctype,\\n        doctype_layout: null,\\n        frm: {},\\n        with_dashboard: false,\\n        card_layout: true,\\n      });\\n      layout.make();\\n      console.log(layout);\\n\\n      return frm;\\n    },\\n    makeDoctypeItemControl(doctype) {\\n      const div = $(\\\"#ref-field\\\");\\n      div.empty();\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference Id\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"itemControl\\\",\\n          options: doctype,\\n          placeholder: __(\\\"Reference Id\\\"),\\n          onchange: function() {\\n            if (this.value) {\\n              me.selectedDoctypeReference = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"docId\\\"],\\n        render_input: true,\\n      });\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\")\\n        .find(\\\".input-max-width\\\")\\n        .removeClass(\\\"input-max-width\\\");\\n    },\\n    saveForm(formData) {\\n    \\n      this.hideModal();\\n      saveFormData(formData).then((saved) => {\\n        frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n      \\n        this.formData = null;\\n        this.setValues({});\\n        this.selectedDoctype = null;\\n        this.selectedDoctypeReference = null;\\n        this.sendToTimeline(\\n          this.patient.patient,\\n          \\\"Form Repository\\\",\\n          saved.name,\\n          saved.owner\\n        );\\n      });\\n    },\\n    initialSave() {\\n      this.hideModal();\\n      let form_content = \\\"{}\\\";\\n      const form_name = this.formName;\\n      const reference_doctype = this.selectedDoctype;\\n      const reference_doctype_id = this.selectedDoctypeReference;\\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        form_content,\\n        form_name,\\n        reference_doctype,\\n        reference_doctype_id,\\n        completion_status: \\\"Initial\\\",\\n      };\\n      saveFormData({ formData }).then((saved) => {\\n        this.draftForm = saved;\\n        if (this.powerThrough) {\\n          this.saveDoctype();\\n        }\\n      });\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        this.allFormConfigurationData = config;\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        this.dataPrepoulate(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    navigateToList() {\\n      const formName = frappe.get_route()[2];\\n      this.tableName = formName.split(\\\"-\\\")[1];\\n    },\\n\\n    sendToTimeline(\\n      patient,\\n      reference_doctype,\\n      reference_name,\\n      reference_owner\\n    ) {\\n     \\n      let formData = {\\n        reference_doctype,\\n        reference_name,\\n        doctype: \\\"Patient Medical Record\\\",\\n        patient,\\n        status: \\\"Open\\\",\\n        reference_owner,\\n      };\\n\\n      saveFormData({ formData }).then((saved) => {\\n        frappe.show_alert(\\\"Timeline updated\\\", 5);\\n      });\\n    },\\n    saveDoctype() {\\n      this.$bvModal\\n        .msgBoxConfirm(\\\"Are you sure you want to save the changes?\\\")\\n        .then((value) => {\\n          if (value) {\\n            alert(\\\"SAving to db\\\")\\n            this.saveDoctypeToDb();\\n          }\\n          this.$bvModal.hide('add_l_modal')\\n        })\\n        .catch((err) => {\\n          // An error occurred\\n        });\\n    },\\n    saveDoctypeToDb() {  \\n      if (this.formData.formConfig.mappedDoctype) {\\n        const keys = Object.keys(this.formInputData);\\n        let formData = { doctype: this.formData.formConfig.mappedDoctype };\\n\\n        keys.forEach((key) => {\\n          if (this.formData.controls[key]) {\\n            const control = this.formData.controls[key];\\n            if (\\n              control &&\\n              (control.type === \\\"radio\\\" ||\\n                control.type === \\\"dropDown\\\" ||\\n                control.type === \\\"checkbox\\\")\\n            ) {\\n              if (control.items.length) {\\n                const erpValueObject = control.items.find(\\n                  (item) => item.value === this.formInputData[key]\\n                );\\n                const field = this.formData.controls[key].mappedField;\\n                if (field) {\\n                  formData[field] = erpValueObject.erpValue;\\n                }\\n              }\\n            } else {\\n              const field = this.formData.controls[key].mappedField;\\n              if (field) {\\n                formData[field] = this.formInputData[key];\\n              }\\n            }\\n          } else if (Array.isArray(this.formInputData[key])) {\\n            formData[key] = this.formInputData[key];\\n          }\\n\\n\\n          this.allFormConfigurationData.context_item.forEach((item) => {\\n            formData[item.key] = this.context[item.value];\\n          });\\n\\n            if(this.allFormConfigurationData.extras && this.allFormConfigurationData.extras.length ){\\n            this.allFormConfigurationData.extras.forEach((item) => { \\n                      \\n                        formData[item.key] = item.value;\\n                      });\\n            }\\n           \\n        });\\n        alert(JSON.stringify(formData))\\n\\n        saveFormData({ formData }).then((saved) => {\\n          alert(JSON.stringify(saved))\\n          this.mappedDoctypeName = saved.name;\\n          frappe.show_alert(\\\"Saved\\\", 3);\\n          this.savedDocument = saved;\\n          this.getFormData();\\n        });\\n      } else {\\n           console.log(\\\"FRM\\\", \\\"getFormData\\\");\\n        this.getFormData();\\n      }\\n    },\\n    populateChildTableReference(){\\n      this.reference = {doctype:this.selectedDoctype,doctype_id:this.selectedDoctypeReference  }\\n    },\\n    save() {\\n      this.hideModal();\\n      let form_content = this.formInputData;\\n      form_content = JSON.stringify(form_content);\\n      const form_name = this.formName;\\n      const reference_doctype =\\n        this.allFormConfigurationData.owner_doctype ||\\n        this.selectedDoctype ||\\n        this.formData.formConfig.mappedDoctype;\\n      let reference_doctype_id = null;\\n      if (this.allFormConfigurationData.context_reference) {\\n        reference_doctype_id =\\n          this.context[this.allFormConfigurationData.context_owner_name] ||\\n          this.selectedDoctypeReference ||\\n          this.savedDocument.name;\\n      } else {\\n        reference_doctype_id =\\n          this.allFormConfigurationData.owner_doctype_reference ||\\n          this.selectedDoctypeReference ||\\n          this.savedDocument.name;\\n      }\\n\\n      let name = null;\\n\\n      if (this.draftForm && this.draftForm.name) {\\n        name = this.draftForm.name;\\n      }\\n    \\n      let doctype = \\\"Form Repository\\\";\\n      let formData = {\\n        doctype,\\n        name,\\n        form_content,\\n        form_name,\\n        mapped_doctype_name : this.mappedDoctypeName,\\n        mapped_doctype: this.formData.formConfig.mappedDoctype,\\n        reference_doctype,\\n        reference_doctype_id,\\n        completion_status: \\\"Completed\\\",\\n        completed:1,\\n      };\\n\\n       if(this.encounter  && this.encounter.name){\\n         formData.patient_encounter =this.encounter.name;      \\n      };\\n\\n       alert(JSON.stringify(formData))\\n\\n      updateFormData({ formData }).then((result) => {\\n        alert(\\\"Finale\\\")\\n        frappe.show_alert(\\\"Form updated \\\" + result.name, 5);\\n        this.draftForm = {};\\n        this.clearData();\\n        this.forceRerender();\\n        this.$emit(\\\"callback\\\", { formData, document: this.savedDocument });\\n      });\\n    },\\n  },\\n  computed: {\\n    context() {\\n      return this.$store.getters[\\\"context/getContext\\\"];\\n    },\\n    isShowOverlay() {\\n      return !this.draftForm.name;\\n    },\\n    opacity() {\\n      return this.isReadonly ? 0 : 0.2;\\n    },\\n     encounter() {\\n      return this.$store.getters[\\\"encounter/getEncounter\\\"];\\n    },\\n  },\\n  created() {\\n    \\n    if (this.currentFormName) {\\n      this.getForm(this.currentFormName);\\n    }\\n    this.populateChildTableReference()\\n \\n  },\\n\\n  mounted() {\\n\\n    this.$formEvent.$on(\\\"submit\\\", (value) => {});\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      if (modalId === \\\"modal-id-1\\\") {\\n        this.makeSelectDoctypeControl();\\n      }\\n    });\\n    const context = this;\\n    setTimeout(() => {\\n      context.populate();\\n    }, 1000);\\n  },\\n  components: {},\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.save-btn {\\n  color: white;\\n  margin-top: 2%;\\n}\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 0px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n  width:100% !important;\\n}\\n.white-text {\\n  color: white;\\n  margin-left: 10px;\\n}\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  /* padding-right: 50px; */\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.space-left {\\n  margin-left: 8px;\\n}\\n\\n.ref-field-input {\\n  width: 160px;\\n  padding-left: 0px;\\n}\\n.input-max-width {\\n  width: 100% !important;\\n  min-width: 300px;\\n}\\n.modal-padding {\\n  padding-left: 15px;\\n}\\n.upper-case {\\n  text-transform: uppercase;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getDoctypeWithMetaSlim } from \"../../../services/doctype/meta\";\nconst __vue_script__ = {\n  name: \"ChildTable\",\n  props: {\n    doctype: { type: String },\n    tableData: { type: Array, default: [] },\n    fields: [],\n    selectedDoctype: null,\n    selectedReference: null,\n  },\n  methods: {\n    loadMetaData() {\n      const payload = { doctype: this.doctype };\n      getDoctypeWithMetaSlim(payload).then((data) => {\n        this.fields = data.meta.fields;\n      });\n    },\n    getDataType(key) {\n      return (\n        (this.fields || []).find((element) => element.fieldname === key) || {}\n      );\n    },\n    setCurrentDoctype(doctype, reference) {\n      this.selectedDoctype = doctype;\n      this.selectedReference = reference;\n       this.$router.push({ name: 'viewer', params: { doctype,reference} })\n      // this.$refs[\"my-modal-1993\"].show();\n    },\n  },\n  created() {\n    this.loadMetaData();\n  },\n \n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _vm.selectedDoctype\n            ? _c(\"doctype-render\", {\n                staticStyle: { width: \"100%\" },\n                attrs: {\n                  fields: [],\n                  doctypeInput: _vm.selectedDoctype,\n                  doc_ref: _vm.selectedReference\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-modal\",\n        {\n          ref: \"my-modal-1993\",\n          attrs: {\n            id: \"\" + _vm.selectedReference,\n            size: \"xl\",\n            title: \"\" + _vm.Patient,\n            \"ok-only\": \"\"\n          }\n        },\n        [\n          _c(\"b-row\", [\n            _vm._v(\n              _vm._s(_vm.selectedDoctype) + \" \" + _vm._s(_vm.selectedReference)\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"doctype-render\", {\n            attrs: {\n              fields: [],\n              doctypeInput: _vm.selectedDoctype,\n              doc_ref: _vm.selectedReference\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"b-table\", {\n        attrs: {\n          small: \"\",\n          fields: _vm.fields,\n          items: _vm.tableData,\n          responsive: \"sm\",\n          bordered: \"\",\n          striped: \"\"\n        },\n        scopedSlots: _vm._u([\n          {\n            key: \"cell()\",\n            fn: function(data) {\n              return [\n                _vm.getDataType(data.field.key).fieldtype === \"Link\"\n                  ? _c(\n                      \"div\",\n                      { staticStyle: { width: \"100%\" } },\n                      [\n                        _c(\n                          \"b-input-group\",\n                          { staticClass: \"mb-2\" },\n                          [\n                            _c(\"b-form-input\", {\n                              attrs: { type: \"text\", readonly: \"\" },\n                              model: {\n                                value: data.value,\n                                callback: function($$v) {\n                                  _vm.$set(data, \"value\", $$v)\n                                },\n                                expression: \"data.value\"\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"b-input-group-prepend\",\n                              {\n                                attrs: { \"is-text\": \"\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.setCurrentDoctype(\n                                      _vm.getDataType(data.field.key).options,\n                                      data.value\n                                    )\n                                  }\n                                }\n                              },\n                              [_c(\"b-icon\", { attrs: { icon: \"link45deg\" } })],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"div\",\n                      { staticStyle: { width: \"100%\" } },\n                      [\n                        _c(\"b-form-input\", {\n                          attrs: { type: \"text\", readonly: \"\" },\n                          model: {\n                            value: data.value,\n                            callback: function($$v) {\n                              _vm.$set(data, \"value\", $$v)\n                            },\n                            expression: \"data.value\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-33aa60c3_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"ChildTable.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-33aa60c3\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div>\\n    <b-row>\\n      <doctype-render\\n        v-if=\\\"selectedDoctype\\\"\\n        style=\\\"width: 100%\\\"\\n        :fields=\\\"[]\\\"\\n        :doctypeInput=\\\"selectedDoctype\\\"\\n        :doc_ref=\\\"selectedReference\\\"\\n      />\\n    </b-row>\\n\\n    <b-modal\\n      :id=\\\"`${selectedReference}`\\\"\\n      ref=\\\"my-modal-1993\\\"\\n      size=\\\"xl\\\"\\n      :title=\\\"`${Patient}`\\\"\\n      ok-only\\n    >\\n      <b-row>{{ selectedDoctype }} {{ selectedReference }}</b-row>\\n      <doctype-render\\n        :fields=\\\"[]\\\"\\n        :doctypeInput=\\\"selectedDoctype\\\"\\n        :doc_ref=\\\"selectedReference\\\"\\n    /></b-modal>\\n    <b-table small :fields=\\\"fields\\\" :items=\\\"tableData\\\" responsive=\\\"sm\\\" bordered striped>\\n      <template #cell()=\\\"data\\\">\\n        <div\\n          style=\\\"width: 100%\\\"\\n          v-if=\\\"getDataType(data.field.key).fieldtype === 'Link'\\\"\\n        >\\n          <b-input-group class=\\\"mb-2\\\">\\n            <b-form-input\\n              type=\\\"text\\\"\\n              v-model=\\\"data.value\\\"\\n              readonly\\n            ></b-form-input>\\n            <b-input-group-prepend\\n              is-text\\n              @click=\\\"\\n                setCurrentDoctype(\\n                  getDataType(data.field.key).options,\\n                  data.value\\n                )\\n              \\\"\\n            >\\n              <b-icon icon=\\\"link45deg\\\"></b-icon>\\n            </b-input-group-prepend>\\n          </b-input-group>\\n        </div>\\n\\n        <div style=\\\"width: 100%\\\" v-else>\\n          <b-form-input :type=\\\"'text'\\\" v-model=\\\"data.value\\\" readonly />\\n        </div>\\n       \\n      </template>\\n    </b-table>\\n  </div>\\n</template>\\n\\n<script>\\nimport { getDoctypeWithMetaSlim } from \\\"../../../services/doctype/meta\\\";\\nexport default {\\n  name: \\\"ChildTable\\\",\\n  props: {\\n    doctype: { type: String },\\n    tableData: { type: Array, default: [] },\\n    fields: [],\\n    selectedDoctype: null,\\n    selectedReference: null,\\n  },\\n  methods: {\\n    loadMetaData() {\\n      const payload = { doctype: this.doctype };\\n      getDoctypeWithMetaSlim(payload).then((data) => {\\n        this.fields = data.meta.fields;\\n      });\\n    },\\n    getDataType(key) {\\n      return (\\n        (this.fields || []).find((element) => element.fieldname === key) || {}\\n      );\\n    },\\n    setCurrentDoctype(doctype, reference) {\\n      this.selectedDoctype = doctype;\\n      this.selectedReference = reference;\\n       this.$router.push({ name: 'viewer', params: { doctype,reference} })\\n      // this.$refs[\\\"my-modal-1993\\\"].show();\\n    },\\n  },\\n  created() {\\n    this.loadMetaData();\\n  },\\n \\n};\\n</script>\\n\\n<style scoped></style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ChildTable from \"./ChildTable.vue\";\nconst __vue_script__ = {\n  components: { ChildTable },\n  name: \"DocField\",\n  props: {\n    docField: { type: Object, default: {} },\n    doc: { type: Object, default: {} },\n  },\n  methods: {\n    removeUnwanted(items) {\n      const unWanted = [\n        \"name\",\n        \"owner\",\n        \"creation\",\n        \"modified\",\n        \"parent\",\n        \"parentfield\",\n        \"modified_by\",\n        \"parenttype\",\n        \"doctype\",\n        \"docstatus\",\n        \"idx\",\n      ];\n      return items.map((item) => {\n        unWanted.forEach((key) => {\n          delete item[key];\n        });\n\n        return item;\n      });\n    },\n    setCurrentDoctype(doctype, reference) {\n      this.selectedDoctype = doctype;\n      this.selectedReference = reference;\n      if (reference && doctype) {\n        this.$router.push({ name: \"viewer\", params: { doctype, reference } });\n      }\n\n      // this.$refs[\"my-modal-1993\"].show();\n    },\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"mt-1\", staticStyle: { width: \"100%\" } }, [\n    _vm.docField.fieldname.startsWith(\"column_break\")\n      ? _c(\"br\", { staticStyle: { width: \"100%\" } })\n      : _vm.docField.fieldtype === \"Link\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label))\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"b-input-group\",\n              { staticClass: \"mb-2\" },\n              [\n                _c(\"b-form-input\", {\n                  attrs: { type: \"text\", readonly: \"\" },\n                  model: {\n                    value: _vm.doc[_vm.docField.fieldname],\n                    callback: function($$v) {\n                      _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                    },\n                    expression: \"doc[docField.fieldname]\"\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"b-input-group-prepend\",\n                  {\n                    attrs: { \"is-text\": \"\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.setCurrentDoctype(\n                          _vm.docField.options,\n                          _vm.doc[_vm.docField.fieldname]\n                        )\n                      }\n                    }\n                  },\n                  [_c(\"b-icon\", { attrs: { icon: \"link45deg\" } })],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Table\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"child-table\", {\n              staticStyle: { width: \"100%\" },\n              attrs: {\n                tableData: _vm.removeUnwanted(_vm.doc[_vm.docField.fieldname]),\n                doctype: _vm.docField.options\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Text\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label))\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-textarea\", {\n              attrs: { rows: \"6\", type: \"text\", readonly: \"\" },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _vm.docField.fieldtype === \"Text Editor\"\n      ? _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label))\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-textarea\", {\n              attrs: { rows: \"6\", type: \"text\", readonly: \"\" },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n      : _c(\n          \"div\",\n          { staticStyle: { width: \"100%\" } },\n          [\n            _c(\"label\", { attrs: { for: \"input-live\" } }, [\n              _vm._v(_vm._s(_vm.docField.label))\n            ]),\n            _vm._v(\" \"),\n            _c(\"b-form-input\", {\n              attrs: { type: \"text\", readonly: \"\" },\n              model: {\n                value: _vm.doc[_vm.docField.fieldname],\n                callback: function($$v) {\n                  _vm.$set(_vm.doc, _vm.docField.fieldname, $$v)\n                },\n                expression: \"doc[docField.fieldname]\"\n              }\n            })\n          ],\n          1\n        )\n  ])\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-3679bd5a_0\", { source: \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", map: {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"DocField.vue\"}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <div style=\\\"width: 100%\\\" class=\\\"mt-1\\\">\\n    <br\\n      style=\\\"width: 100%\\\"\\n      v-if=\\\"docField.fieldname.startsWith('column_break')\\\"\\n    />\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Link'\\\">\\n      <label for=\\\"input-live\\\">{{ docField.label }}</label>\\n      <b-input-group class=\\\"mb-2\\\">\\n        <b-form-input\\n          type=\\\"text\\\"\\n          v-model=\\\"doc[docField.fieldname]\\\"\\n          readonly\\n        ></b-form-input>\\n        <b-input-group-prepend is-text  @click=\\\"\\n                setCurrentDoctype(\\n                  docField.options,\\n                  doc[docField.fieldname]\\n                )\\n              \\\">\\n          <b-icon icon=\\\"link45deg\\\"></b-icon>\\n        </b-input-group-prepend>\\n      </b-input-group>\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Table'\\\">\\n      <child-table\\n        style=\\\"width: 100%\\\"\\n        :tableData=\\\"removeUnwanted(doc[docField.fieldname])\\\"\\n        :doctype=\\\"docField.options\\\"\\n      ></child-table>\\n    </div>\\n    <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Text'\\\">\\n      <label for=\\\"input-live\\\">{{ docField.label }}</label>\\n      <b-form-textarea\\n        rows=\\\"6\\\"\\n        :type=\\\"'text'\\\"\\n        readonly\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n      <div style=\\\"width: 100%\\\" v-else-if=\\\"docField.fieldtype === 'Text Editor'\\\">\\n      <label for=\\\"input-live\\\">{{ docField.label }}</label>\\n      <b-form-textarea\\n        rows=\\\"6\\\"\\n        :type=\\\"'text'\\\"\\n        readonly\\n        v-model=\\\"doc[docField.fieldname]\\\"\\n      />\\n    </div>\\n\\n    <div style=\\\"width: 100%\\\" v-else>\\n      <label for=\\\"input-live\\\">{{ docField.label }}</label>\\n      <b-form-input :type=\\\"'text'\\\" v-model=\\\"doc[docField.fieldname]\\\" readonly />\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport ChildTable from \\\"./ChildTable.vue\\\";\\nexport default {\\n  components: { ChildTable },\\n  name: \\\"DocField\\\",\\n  props: {\\n    docField: { type: Object, default: {} },\\n    doc: { type: Object, default: {} },\\n  },\\n  methods: {\\n    removeUnwanted(items) {\\n      const unWanted = [\\n        \\\"name\\\",\\n        \\\"owner\\\",\\n        \\\"creation\\\",\\n        \\\"modified\\\",\\n        \\\"parent\\\",\\n        \\\"parentfield\\\",\\n        \\\"modified_by\\\",\\n        \\\"parenttype\\\",\\n        \\\"doctype\\\",\\n        \\\"docstatus\\\",\\n        \\\"idx\\\",\\n      ];\\n      return items.map((item) => {\\n        unWanted.forEach((key) => {\\n          delete item[key];\\n        });\\n\\n        return item;\\n      });\\n    },\\n    setCurrentDoctype(doctype, reference) {\\n      this.selectedDoctype = doctype;\\n      this.selectedReference = reference;\\n      if (reference && doctype) {\\n        this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n      }\\n\\n      // this.$refs[\\\"my-modal-1993\\\"].show();\\n    },\\n  },\\n};\\n</script>\\n\\n<style></style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getDoctypeWithMeta } from \"../../../services/doctype/meta\";\nimport DocField from \"./DocField.vue\";\nconst __vue_script__ = {\n  name: \"DoctypeRender\",\n  data() {\n    return {\n      doctypeData: {},\n      doctype: {},\n      filterEmpty: false,\n      sections: [],\n    };\n  },\n  components: { DocField },\n  mounted() {\n    this.$root.$on(\"bv::modal::shown\", (bvEvent, modalId) => {\n      this.loadDoctype();\n    });\n    this.loadDoctype();\n  },\n  created() {},\n  props: {\n    doctypeInput: { type: String, default: \"\" },\n    doc_ref: { type: String, default: \"\" },\n    fields: { type: Array, default: [] },\n  },\n  methods: {\n    loadDoctype() {\n      const payload = { doctype: this.doctypeInput, name: this.doc_ref };\n      getDoctypeWithMeta(payload).then((data) => {\n        this.doctypeData = data;\n        this.fields = data.meta.fields;\n        this.doctype = data.data;\n        this.getSections(this.fields);\n      });\n    },\n    getSections(fields) {\n      this.sections = [];\n      let currentSection = { fields: [], name: \"\" };\n      fields.forEach((item) => {\n        if (item.fieldtype !== \"Section Break\") {\n          if (item.fieldname !== \"naming_series\") {\n            currentSection.fields.push(item);\n          }\n        } else {\n          this.sections.push(currentSection);\n          currentSection = { fields: [], name: \"\" };\n          currentSection.name = this.noSnake(item.fieldname);\n          console.log(currentSection.name);\n        }\n      });\n    },\n    noSnake(stringItem) {\n      if (!stringItem) {\n        return \"\";\n      }\n      if (stringItem.startsWith(\"section_break\")) {   \n        return null;\n      }\n      if (stringItem.startsWith(\"sb_\")) {   \n         stringItem = stringItem.replace(\"_sb\",\"\")\n      }\n\n      let noSnakeString = stringItem.replaceAll(\"_\", \" \");\n      return noSnakeString.charAt(0).toUpperCase() + noSnakeString.slice(1);\n    },\n\n    getWidth(field) {\n      if (field) {\n        if (field.fieldname.startsWith(\"column_break\")) {\n          return \"12\";\n        }\n        if (field.fieldtype === \"Table\") {\n          return \"12\";\n        }\n      }\n      return \"6\";\n    },\n  },\n  watch: {\n    $route(to, from) {\n      this.loadDoctype();\n    },\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"mx-auto\" },\n    [\n      _c(\n        \"b-row\",\n        _vm._l(_vm.sections, function(section) {\n          return _c(\n            \"b-col\",\n            { key: section, staticClass: \"mb-3\", attrs: { cols: \"12\" } },\n            [\n              section.fields.length > 0\n                ? _c(\n                    \"b-card\",\n                    { attrs: { title: section.name } },\n                    [\n                      _c(\n                        \"b-card-text\",\n                        [\n                          _c(\n                            \"b-row\",\n                            { staticClass: \"mt-2\" },\n                            _vm._l(section.fields, function(field) {\n                              return _c(\n                                \"b-col\",\n                                {\n                                  key: field,\n                                  attrs: { cols: _vm.getWidth(field) }\n                                },\n                                [\n                                  _c(\"doc-field\", {\n                                    attrs: { docField: field, doc: _vm.doctype }\n                                  })\n                                ],\n                                1\n                              )\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        }),\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-f1092b96_0\", { source: \"\\n.card[data-v-f1092b96] {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/patient/components/doctype/DoctypeRender.vue\"],\"names\":[],\"mappings\":\";AA8GA;EACA,4CAAA;EACA,0CAAA;EACA,gBAAA;AACA\",\"file\":\"DoctypeRender.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"mx-auto\\\">\\n    <b-row>\\n      <b-col cols=\\\"12\\\" v-for=\\\"section in sections\\\" :key=\\\"section\\\" class=\\\"mb-3\\\">\\n        <b-card :title=\\\"section.name\\\" v-if=\\\"section.fields.length > 0\\\">\\n          <b-card-text>\\n            <b-row class=\\\"mt-2\\\">\\n              <b-col\\n                :cols=\\\"getWidth(field)\\\"\\n                v-for=\\\"field in section.fields\\\"\\n                :key=\\\"field\\\"\\n              >\\n                <doc-field :docField=\\\"field\\\" :doc=\\\"doctype\\\" />\\n              </b-col>\\n            </b-row>\\n          </b-card-text>\\n        </b-card>\\n      </b-col>\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport { getDoctypeWithMeta } from \\\"../../../services/doctype/meta\\\";\\nimport DocField from \\\"./DocField.vue\\\";\\nexport default {\\n  name: \\\"DoctypeRender\\\",\\n  data() {\\n    return {\\n      doctypeData: {},\\n      doctype: {},\\n      filterEmpty: false,\\n      sections: [],\\n    };\\n  },\\n  components: { DocField },\\n  mounted() {\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.loadDoctype();\\n    });\\n    this.loadDoctype();\\n  },\\n  created() {},\\n  props: {\\n    doctypeInput: { type: String, default: \\\"\\\" },\\n    doc_ref: { type: String, default: \\\"\\\" },\\n    fields: { type: Array, default: [] },\\n  },\\n  methods: {\\n    loadDoctype() {\\n      const payload = { doctype: this.doctypeInput, name: this.doc_ref };\\n      getDoctypeWithMeta(payload).then((data) => {\\n        this.doctypeData = data;\\n        this.fields = data.meta.fields;\\n        this.doctype = data.data;\\n        this.getSections(this.fields);\\n      });\\n    },\\n    getSections(fields) {\\n      this.sections = [];\\n      let currentSection = { fields: [], name: \\\"\\\" };\\n      fields.forEach((item) => {\\n        if (item.fieldtype !== \\\"Section Break\\\") {\\n          if (item.fieldname !== \\\"naming_series\\\") {\\n            currentSection.fields.push(item);\\n          }\\n        } else {\\n          this.sections.push(currentSection);\\n          currentSection = { fields: [], name: \\\"\\\" };\\n          currentSection.name = this.noSnake(item.fieldname);\\n          console.log(currentSection.name);\\n        }\\n      });\\n    },\\n    noSnake(stringItem) {\\n      if (!stringItem) {\\n        return \\\"\\\";\\n      }\\n      if (stringItem.startsWith(\\\"section_break\\\")) {   \\n        return null;\\n      }\\n      if (stringItem.startsWith(\\\"sb_\\\")) {   \\n         stringItem = stringItem.replace(\\\"_sb\\\",\\\"\\\")\\n      }\\n\\n      let noSnakeString = stringItem.replaceAll(\\\"_\\\", \\\" \\\");\\n      return noSnakeString.charAt(0).toUpperCase() + noSnakeString.slice(1);\\n    },\\n\\n    getWidth(field) {\\n      if (field) {\\n        if (field.fieldname.startsWith(\\\"column_break\\\")) {\\n          return \\\"12\\\";\\n        }\\n        if (field.fieldtype === \\\"Table\\\") {\\n          return \\\"12\\\";\\n        }\\n      }\\n      return \\\"6\\\";\\n    },\\n  },\\n  watch: {\\n    $route(to, from) {\\n      this.loadDoctype();\\n    },\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-f1092b96\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"mx-auto\\\">\\n    <b-row>\\n      <b-col cols=\\\"12\\\" v-for=\\\"section in sections\\\" :key=\\\"section\\\" class=\\\"mb-3\\\">\\n        <b-card :title=\\\"section.name\\\" v-if=\\\"section.fields.length > 0\\\">\\n          <b-card-text>\\n            <b-row class=\\\"mt-2\\\">\\n              <b-col\\n                :cols=\\\"getWidth(field)\\\"\\n                v-for=\\\"field in section.fields\\\"\\n                :key=\\\"field\\\"\\n              >\\n                <doc-field :docField=\\\"field\\\" :doc=\\\"doctype\\\" />\\n              </b-col>\\n            </b-row>\\n          </b-card-text>\\n        </b-card>\\n      </b-col>\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport { getDoctypeWithMeta } from \\\"../../../services/doctype/meta\\\";\\nimport DocField from \\\"./DocField.vue\\\";\\nexport default {\\n  name: \\\"DoctypeRender\\\",\\n  data() {\\n    return {\\n      doctypeData: {},\\n      doctype: {},\\n      filterEmpty: false,\\n      sections: [],\\n    };\\n  },\\n  components: { DocField },\\n  mounted() {\\n    this.$root.$on(\\\"bv::modal::shown\\\", (bvEvent, modalId) => {\\n      this.loadDoctype();\\n    });\\n    this.loadDoctype();\\n  },\\n  created() {},\\n  props: {\\n    doctypeInput: { type: String, default: \\\"\\\" },\\n    doc_ref: { type: String, default: \\\"\\\" },\\n    fields: { type: Array, default: [] },\\n  },\\n  methods: {\\n    loadDoctype() {\\n      const payload = { doctype: this.doctypeInput, name: this.doc_ref };\\n      getDoctypeWithMeta(payload).then((data) => {\\n        this.doctypeData = data;\\n        this.fields = data.meta.fields;\\n        this.doctype = data.data;\\n        this.getSections(this.fields);\\n      });\\n    },\\n    getSections(fields) {\\n      this.sections = [];\\n      let currentSection = { fields: [], name: \\\"\\\" };\\n      fields.forEach((item) => {\\n        if (item.fieldtype !== \\\"Section Break\\\") {\\n          if (item.fieldname !== \\\"naming_series\\\") {\\n            currentSection.fields.push(item);\\n          }\\n        } else {\\n          this.sections.push(currentSection);\\n          currentSection = { fields: [], name: \\\"\\\" };\\n          currentSection.name = this.noSnake(item.fieldname);\\n          console.log(currentSection.name);\\n        }\\n      });\\n    },\\n    noSnake(stringItem) {\\n      if (!stringItem) {\\n        return \\\"\\\";\\n      }\\n      if (stringItem.startsWith(\\\"section_break\\\")) {   \\n        return null;\\n      }\\n      if (stringItem.startsWith(\\\"sb_\\\")) {   \\n         stringItem = stringItem.replace(\\\"_sb\\\",\\\"\\\")\\n      }\\n\\n      let noSnakeString = stringItem.replaceAll(\\\"_\\\", \\\" \\\");\\n      return noSnakeString.charAt(0).toUpperCase() + noSnakeString.slice(1);\\n    },\\n\\n    getWidth(field) {\\n      if (field) {\\n        if (field.fieldname.startsWith(\\\"column_break\\\")) {\\n          return \\\"12\\\";\\n        }\\n        if (field.fieldtype === \\\"Table\\\") {\\n          return \\\"12\\\";\\n        }\\n      }\\n      return \\\"6\\\";\\n    },\\n  },\\n  watch: {\\n    $route(to, from) {\\n      this.loadDoctype();\\n    },\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 0px 0px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getFormConfiguration } from \"../services/forms/builder.js\";\nimport FormRenderView from \"./Frm.vue\";\nimport DoctypeRender from \"./../patient/components/doctype/DoctypeRender.vue\";\n\nconst __vue_script__ = {\n  name: \"FillForm\",\n  data() {\n    return {\n      selectedDoctype: null,\n      configuration: null,\n    };\n  },\n  components: {\n    FormRenderView,\n    DoctypeRender,\n  },\n  props: {\n    formName: {\n      type: String,\n      required: false,\n      default: \"Registration Form\",\n    },\n    prePopulate :{type:Object, default:null},\n    referencDoctype: { type: String, default: \"Patient\" },\n    referencDoctypeItem: { type: String, default: \"\" },\n    callbackUrl: { type: Object, required: false, default: null },\n  \n  },\n  created() {\n    if (this.formName) {\n      this.selectedDoctype = this.formName;\n    }\n  },\n\n  mounted() {\n    this.makeSelectDoctypeControl();\n  },\n  watch: {\n    selectedDoctype(val) {\n      // f()\n      this.getForm(val);\n    },\n  },\n\n  methods: {\n     callback(value) {\n      this.$emit(\"callback\", value);\n    },\n    makeSelectDoctypeControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Reference\"),\n          fieldtype: \"Link\",\n          fieldname: \"reference\",\n          options: \"Form Design\",\n          placeholder: __(\"Search Reference\"),\n          onchange: function() {\n            if (this.value) {\n              me.selectedDoctype = this.value;\n            }\n          },\n        },\n        parent: this.$refs[\"doctype\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n      $(\"#modal-body\")\n        .find(\".input-max-width\")\n        .removeClass(\"input-max-width\");\n    },\n    getForm(name) {\n      getFormConfiguration({ name }).then((config) => {\n        const formStringConfig = config.formdata;\n        const configObject = JSON.parse(formStringConfig);\n        this.configuration = formStringConfig;\n        console.log(configObject);\n        this.formName = config.name;\n        this.formData = configObject;\n        this.originalConfig = configObject;\n      });\n    },\n    goToRoute(doctype, reference) {\n      this.$router.push({ name: \"viewer\", params: { doctype, reference } });\n    },\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    [\n      !_vm.formName\n        ? _c(\n            \"b-row\",\n            { staticClass: \"render-formx mr-0\" },\n            [\n              _c(\"b-col\", {\n                ref: \"doctype\",\n                staticClass: \"ref-field-input mr-0\",\n                attrs: { cols: 12 }\n              })\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\"form-render-view\", {\n            attrs: {\n              currentFormName: _vm.selectedDoctype,\n              selectedDoctype: _vm.referencDoctype,\n              prePopulate: _vm.prePopulate,\n              selectedDoctypeReference: _vm.referencDoctypeItem\n            },\n            on: { callback: _vm.callback }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-5133caa5_0\", { source: \"\\n.render-formx[data-v-5133caa5] {\\n  padding-top: 10px;\\n  padding-bottom: 0px;\\n  width: 100% !important;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/forms/FillForm.vue\"],\"names\":[],\"mappings\":\";AA8GA;EACA,iBAAA;EACA,mBAAA;EACA,sBAAA;AACA\",\"file\":\"FillForm.vue\",\"sourcesContent\":[\"<template>\\n  <b-container>\\n    <b-row class=\\\"render-formx mr-0\\\" v-if=\\\"!formName\\\">\\n      <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input mr-0\\\" />\\n    </b-row>\\n    <b-row>\\n    \\n      <form-render-view\\n        :currentFormName=\\\"selectedDoctype\\\"\\n        :selectedDoctype=\\\"referencDoctype\\\"\\n        :prePopulate=\\\"prePopulate\\\"\\n        :selectedDoctypeReference=\\\"referencDoctypeItem\\\"\\n        @callback=\\\"callback\\\"\\n      />\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport { getFormConfiguration } from \\\"../services/forms/builder.js\\\";\\nimport FormRenderView from \\\"./Frm.vue\\\";\\nimport DoctypeRender from \\\"./../patient/components/doctype/DoctypeRender.vue\\\";\\n\\nexport default {\\n  name: \\\"FillForm\\\",\\n  data() {\\n    return {\\n      selectedDoctype: null,\\n      configuration: null,\\n    };\\n  },\\n  components: {\\n    FormRenderView,\\n    DoctypeRender,\\n  },\\n  props: {\\n    formName: {\\n      type: String,\\n      required: false,\\n      default: \\\"Registration Form\\\",\\n    },\\n    prePopulate :{type:Object, default:null},\\n    referencDoctype: { type: String, default: \\\"Patient\\\" },\\n    referencDoctypeItem: { type: String, default: \\\"\\\" },\\n    callbackUrl: { type: Object, required: false, default: null },\\n  \\n  },\\n  created() {\\n    if (this.formName) {\\n      this.selectedDoctype = this.formName;\\n    }\\n  },\\n\\n  mounted() {\\n    this.makeSelectDoctypeControl();\\n  },\\n  watch: {\\n    selectedDoctype(val) {\\n      // f()\\n      this.getForm(val);\\n    },\\n  },\\n\\n  methods: {\\n     callback(value) {\\n      this.$emit(\\\"callback\\\", value);\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"Form Design\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function() {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\")\\n        .find(\\\".input-max-width\\\")\\n        .removeClass(\\\"input-max-width\\\");\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        this.configuration = formStringConfig;\\n        console.log(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n    goToRoute(doctype, reference) {\\n      this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n    },\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.render-formx {\\n  padding-top: 10px;\\n  padding-bottom: 0px;\\n  width: 100% !important;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-5133caa5\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container>\\n    <b-row class=\\\"render-formx mr-0\\\" v-if=\\\"!formName\\\">\\n      <b-col :cols=\\\"12\\\" ref=\\\"doctype\\\" class=\\\"ref-field-input mr-0\\\" />\\n    </b-row>\\n    <b-row>\\n    \\n      <form-render-view\\n        :currentFormName=\\\"selectedDoctype\\\"\\n        :selectedDoctype=\\\"referencDoctype\\\"\\n        :prePopulate=\\\"prePopulate\\\"\\n        :selectedDoctypeReference=\\\"referencDoctypeItem\\\"\\n        @callback=\\\"callback\\\"\\n      />\\n    </b-row>\\n  </b-container>\\n</template>\\n\\n<script>\\nimport { getFormConfiguration } from \\\"../services/forms/builder.js\\\";\\nimport FormRenderView from \\\"./Frm.vue\\\";\\nimport DoctypeRender from \\\"./../patient/components/doctype/DoctypeRender.vue\\\";\\n\\nexport default {\\n  name: \\\"FillForm\\\",\\n  data() {\\n    return {\\n      selectedDoctype: null,\\n      configuration: null,\\n    };\\n  },\\n  components: {\\n    FormRenderView,\\n    DoctypeRender,\\n  },\\n  props: {\\n    formName: {\\n      type: String,\\n      required: false,\\n      default: \\\"Registration Form\\\",\\n    },\\n    prePopulate :{type:Object, default:null},\\n    referencDoctype: { type: String, default: \\\"Patient\\\" },\\n    referencDoctypeItem: { type: String, default: \\\"\\\" },\\n    callbackUrl: { type: Object, required: false, default: null },\\n  \\n  },\\n  created() {\\n    if (this.formName) {\\n      this.selectedDoctype = this.formName;\\n    }\\n  },\\n\\n  mounted() {\\n    this.makeSelectDoctypeControl();\\n  },\\n  watch: {\\n    selectedDoctype(val) {\\n      // f()\\n      this.getForm(val);\\n    },\\n  },\\n\\n  methods: {\\n     callback(value) {\\n      this.$emit(\\\"callback\\\", value);\\n    },\\n    makeSelectDoctypeControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Reference\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"reference\\\",\\n          options: \\\"Form Design\\\",\\n          placeholder: __(\\\"Search Reference\\\"),\\n          onchange: function() {\\n            if (this.value) {\\n              me.selectedDoctype = this.value;\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"doctype\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n      $(\\\"#modal-body\\\")\\n        .find(\\\".input-max-width\\\")\\n        .removeClass(\\\"input-max-width\\\");\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        this.configuration = formStringConfig;\\n        console.log(configObject);\\n        this.formName = config.name;\\n        this.formData = configObject;\\n        this.originalConfig = configObject;\\n      });\\n    },\\n    goToRoute(doctype, reference) {\\n      this.$router.push({ name: \\\"viewer\\\", params: { doctype, reference } });\\n    },\\n  },\\n};\\n</script>\\n\\n<style scoped>\\n.render-formx {\\n  padding-top: 10px;\\n  padding-bottom: 0px;\\n  width: 100% !important;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SideBar from \"./core/Sidebar.vue\";\nimport AccountsWorkingArea from \"./core/AccountsWorkingArea.vue\";\nimport TopHeader from './core/TopHeader.vue';\nimport DoctypeRender from '../html/doctype/DoctypeRender.vue';\nimport FillForm from '../forms/FillForm.vue';\nconst __vue_script__ = {\n  name: \"Main\",\n  data: function () {\n    return {\n      title: \"Records\",\n      selectedPatient: {},\n      encounter: {},\n      medicationOrder: {},\n      unSubmittedProcedures: [],\n      sideBarNormalSize: [12, 3, 3],\n      wordkingAreaNormalSize: [12, 9, 9],\n      fullScreenWorkArea: false,\n      apiList: [],\n      socket: null,\n    };\n  },\n\n  methods: {\n    toggleWorkingAreaSpace(value) {\n      this.fullScreenWorkArea = value;\n    },\n    maximize() {\n      this.sideBarNormalSize = [12, 1, 1];\n      this.wordkingAreaNormalSize = [12, 11, 11];\n    },\n    minimize() {\n      this.sideBarNormalSize = [12, 3, 3];\n      this.wordkingAreaNormalSize = [12, 9, 9];\n    },\n  },\n\n  watch: {\n    fullScreenWorkArea(fullWorkSpace) {\n      if (fullWorkSpace) {\n        this.maximize();\n      } else {\n        this.minimize();\n      }\n    },\n\n    // $route() {\n    //   frappe.router.current_route = frappe.router.parse();\n    //   frappe.breadcrumbs.update();\n    // },\n  },\n  created() {\n  \n  },\n  computed: {},\n  components: {\n    SideBar,\n    AccountsWorkingArea,\n    TopHeader,\n    DoctypeRender,\n    FillForm,\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    {\n      staticClass: \"main page-wrapper\",\n      staticStyle: { \"background-color\": \"#ffffff\" },\n      attrs: { fluid: \"\" }\n    },\n    [\n      _c(\"b-row\", [_c(\"top-header\", { staticStyle: { width: \"100%\" } })], 1),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            {\n              staticClass: \"no-left-padding no-right-padding hidden-sm-down\",\n              attrs: {\n                sm: _vm.sideBarNormalSize[0],\n                md: _vm.sideBarNormalSize[1],\n                lg: _vm.sideBarNormalSize[2]\n              }\n            },\n            [_c(\"side-bar\", { staticClass: \"side-bar\" })],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-col\",\n            {\n              staticClass: \"no-left-padding\",\n              attrs: {\n                sm: _vm.wordkingAreaNormalSize[0],\n                md: _vm.wordkingAreaNormalSize[1],\n                lg: _vm.wordkingAreaNormalSize[2]\n              }\n            },\n            [_c(\"router-view\", { staticClass: \"working-area\" })],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-890456a6_0\", { source: \"\\n@media only screen and (min-width: 767px) {\\n.watu {\\n        overflow: hidden !important;\\n}\\n}\\n.main-container {\\n  height: 100vh;\\n  overflow-x: hidden;\\n  /* font-family: \\\"Nunito\\\", sans-serif; */\\n  /* font-size: smaller; */\\n}\\n.top-menu {\\n  background: white;\\n  padding: 20px;\\n}\\n.no-left-padding {\\n  padding-left: 0px !important;\\n}\\n.side-bar {\\n  background: rgba(0, 0, 0, 0.03);\\n  /* box-shadow: 0 0px 8px 0 rgba(0, 0, 0, 0.2); */\\n  border-right: 1px solid lightgray;\\n  transition: 0.3s;\\n}\\n.working-area {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 100vh;\\n  width: 100%;\\n  scrollbar-width: thin; /* \\\"auto\\\" or \\\"thin\\\" */\\n  scrollbar-color: lightgray transparent;\\n}\\n.card {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n.layout-main {\\n  height: calc(100vh - 60px);\\n}\\n.layout-main-section-wrapper {\\n  margin-bottom: 0px !important;\\n}\\ndiv::-webkit-scrollbar {\\n  width: 0px; /* width of the entire scrollbar */\\n}\\ndiv::-webkit-scrollbar-track {\\n  background: transparent; /* color of the tracking area */\\n}\\ndiv::-webkit-scrollbar-thumb {\\n  background-color: grey; /* color of\u220F the scroll thumb */\\n  border-radius: 20px; /* roundness of the scroll thumb */\\n  border: 0px solid orange; /* creates padding around scroll thumb */\\n}\\n.main {\\n    width: 100%;\\n    height: 100%;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/accounts/Main.vue\"],\"names\":[],\"mappings\":\";AA4FA;AACA;QACA,2BAAA;AAEA;AACA;AACA;EACA,aAAA;EACA,kBAAA;EACA,uCAAA;EACA,wBAAA;AACA;AAEA;EACA,iBAAA;EACA,aAAA;AACA;AACA;EACA,4BAAA;AACA;AAEA;EACA,+BAAA;EACA,gDAAA;EACA,iCAAA;EACA,gBAAA;AACA;AACA;EACA,kBAAA;EACA,kBAAA;EACA,aAAA;EACA,WAAA;EACA,qBAAA,EAAA,qBAAA;EACA,sCAAA;AACA;AAEA;EACA,0CAAA;EACA,gBAAA;AACA;AAEA;EACA,2CAAA;AACA;AAEA;EACA,0BAAA;AACA;AACA;EACA,6BAAA;AACA;AAEA;EACA,UAAA,EAAA,kCAAA;AACA;AAEA;EACA,uBAAA,EAAA,+BAAA;AACA;AAEA;EACA,sBAAA,EAAA,+BAAA;EACA,mBAAA,EAAA,kCAAA;EACA,wBAAA,EAAA,wCAAA;AACA;AACA;IACA,WAAA;IACA,YAAA;IACA,kBAAA;IACA,gBAAA;AACA\",\"file\":\"Main.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"main page-wrapper\\\" style=\\\"background-color:#ffffff;\\\" fluid>\\n    <b-row >\\n   <top-header style=\\\"width: 100%\\\" />\\n    </b-row>\\n    <b-row>\\n      <b-col\\n        :sm=\\\"sideBarNormalSize[0]\\\"\\n        :md=\\\"sideBarNormalSize[1]\\\"\\n        :lg=\\\"sideBarNormalSize[2]\\\"\\n        class=\\\"no-left-padding no-right-padding hidden-sm-down\\\"\\n      >\\n        <side-bar class=\\\"side-bar\\\"/>\\n          \\n      </b-col>\\n      <b-col\\n        :sm=\\\"wordkingAreaNormalSize[0]\\\"\\n        class=\\\"no-left-padding\\\"\\n        :md=\\\"wordkingAreaNormalSize[1]\\\"\\n        :lg=\\\"wordkingAreaNormalSize[2]\\\"\\n      >\\n         <router-view class=\\\"working-area\\\" />\\n      </b-col>\\n    </b-row>\\n  </b-container>\\n</template>\\n<script>\\nimport SideBar from \\\"./core/Sidebar.vue\\\";\\nimport AccountsWorkingArea from \\\"./core/AccountsWorkingArea.vue\\\";\\nimport TopHeader from './core/TopHeader.vue';\\nimport DoctypeRender from '../html/doctype/DoctypeRender.vue';\\nimport FillForm from '../forms/FillForm.vue';\\nexport default {\\n  name: \\\"Main\\\",\\n  data: function () {\\n    return {\\n      title: \\\"Records\\\",\\n      selectedPatient: {},\\n      encounter: {},\\n      medicationOrder: {},\\n      unSubmittedProcedures: [],\\n      sideBarNormalSize: [12, 3, 3],\\n      wordkingAreaNormalSize: [12, 9, 9],\\n      fullScreenWorkArea: false,\\n      apiList: [],\\n      socket: null,\\n    };\\n  },\\n\\n  methods: {\\n    toggleWorkingAreaSpace(value) {\\n      this.fullScreenWorkArea = value;\\n    },\\n    maximize() {\\n      this.sideBarNormalSize = [12, 1, 1];\\n      this.wordkingAreaNormalSize = [12, 11, 11];\\n    },\\n    minimize() {\\n      this.sideBarNormalSize = [12, 3, 3];\\n      this.wordkingAreaNormalSize = [12, 9, 9];\\n    },\\n  },\\n\\n  watch: {\\n    fullScreenWorkArea(fullWorkSpace) {\\n      if (fullWorkSpace) {\\n        this.maximize();\\n      } else {\\n        this.minimize();\\n      }\\n    },\\n\\n    // $route() {\\n    //   frappe.router.current_route = frappe.router.parse();\\n    //   frappe.breadcrumbs.update();\\n    // },\\n  },\\n  created() {\\n  \\n  },\\n  computed: {},\\n  components: {\\n    SideBar,\\n    AccountsWorkingArea,\\n    TopHeader,\\n    DoctypeRender,\\n    FillForm,\\n  },\\n};\\n</script>\\n<style>\\n\\n@media only screen and (min-width: 767px) {\\n    .watu {\\n        overflow: hidden !important;\\n\\n    }\\n}\\n.main-container {\\n  height: 100vh;\\n  overflow-x: hidden;\\n  /* font-family: \\\"Nunito\\\", sans-serif; */\\n  /* font-size: smaller; */\\n}\\n\\n.top-menu {\\n  background: white;\\n  padding: 20px;\\n}\\n.no-left-padding {\\n  padding-left: 0px !important;\\n}\\n\\n.side-bar {\\n  background: rgba(0, 0, 0, 0.03);\\n  /* box-shadow: 0 0px 8px 0 rgba(0, 0, 0, 0.2); */\\n  border-right: 1px solid lightgray;\\n  transition: 0.3s;\\n}\\n.working-area {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 100vh;\\n  width: 100%;\\n  scrollbar-width: thin; /* \\\"auto\\\" or \\\"thin\\\" */\\n  scrollbar-color: lightgray transparent;\\n}\\n\\n.card {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.layout-main {\\n  height: calc(100vh - 60px);\\n}\\n.layout-main-section-wrapper {\\n  margin-bottom: 0px !important;\\n}\\n\\ndiv::-webkit-scrollbar {\\n  width: 0px; /* width of the entire scrollbar */\\n}\\n\\ndiv::-webkit-scrollbar-track {\\n  background: transparent; /* color of the tracking area */\\n}\\n\\ndiv::-webkit-scrollbar-thumb {\\n  background-color: grey; /* color of\u220F the scroll thumb */\\n  border-radius: 20px; /* roundness of the scroll thumb */\\n  border: 0px solid orange; /* creates padding around scroll thumb */\\n}\\n.main {\\n    width: 100%;\\n    height: 100%;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = undefined\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"main page-wrapper\\\" style=\\\"background-color:#ffffff;\\\" fluid>\\n    <b-row >\\n   <top-header style=\\\"width: 100%\\\" />\\n    </b-row>\\n    <b-row>\\n      <b-col\\n        :sm=\\\"sideBarNormalSize[0]\\\"\\n        :md=\\\"sideBarNormalSize[1]\\\"\\n        :lg=\\\"sideBarNormalSize[2]\\\"\\n        class=\\\"no-left-padding no-right-padding hidden-sm-down\\\"\\n      >\\n        <side-bar class=\\\"side-bar\\\"/>\\n          \\n      </b-col>\\n      <b-col\\n        :sm=\\\"wordkingAreaNormalSize[0]\\\"\\n        class=\\\"no-left-padding\\\"\\n        :md=\\\"wordkingAreaNormalSize[1]\\\"\\n        :lg=\\\"wordkingAreaNormalSize[2]\\\"\\n      >\\n         <router-view class=\\\"working-area\\\" />\\n      </b-col>\\n    </b-row>\\n  </b-container>\\n</template>\\n<script>\\nimport SideBar from \\\"./core/Sidebar.vue\\\";\\nimport AccountsWorkingArea from \\\"./core/AccountsWorkingArea.vue\\\";\\nimport TopHeader from './core/TopHeader.vue';\\nimport DoctypeRender from '../html/doctype/DoctypeRender.vue';\\nimport FillForm from '../forms/FillForm.vue';\\nexport default {\\n  name: \\\"Main\\\",\\n  data: function () {\\n    return {\\n      title: \\\"Records\\\",\\n      selectedPatient: {},\\n      encounter: {},\\n      medicationOrder: {},\\n      unSubmittedProcedures: [],\\n      sideBarNormalSize: [12, 3, 3],\\n      wordkingAreaNormalSize: [12, 9, 9],\\n      fullScreenWorkArea: false,\\n      apiList: [],\\n      socket: null,\\n    };\\n  },\\n\\n  methods: {\\n    toggleWorkingAreaSpace(value) {\\n      this.fullScreenWorkArea = value;\\n    },\\n    maximize() {\\n      this.sideBarNormalSize = [12, 1, 1];\\n      this.wordkingAreaNormalSize = [12, 11, 11];\\n    },\\n    minimize() {\\n      this.sideBarNormalSize = [12, 3, 3];\\n      this.wordkingAreaNormalSize = [12, 9, 9];\\n    },\\n  },\\n\\n  watch: {\\n    fullScreenWorkArea(fullWorkSpace) {\\n      if (fullWorkSpace) {\\n        this.maximize();\\n      } else {\\n        this.minimize();\\n      }\\n    },\\n\\n    // $route() {\\n    //   frappe.router.current_route = frappe.router.parse();\\n    //   frappe.breadcrumbs.update();\\n    // },\\n  },\\n  created() {\\n  \\n  },\\n  computed: {},\\n  components: {\\n    SideBar,\\n    AccountsWorkingArea,\\n    TopHeader,\\n    DoctypeRender,\\n    FillForm,\\n  },\\n};\\n</script>\\n<style>\\n\\n@media only screen and (min-width: 767px) {\\n    .watu {\\n        overflow: hidden !important;\\n\\n    }\\n}\\n.main-container {\\n  height: 100vh;\\n  overflow-x: hidden;\\n  /* font-family: \\\"Nunito\\\", sans-serif; */\\n  /* font-size: smaller; */\\n}\\n\\n.top-menu {\\n  background: white;\\n  padding: 20px;\\n}\\n.no-left-padding {\\n  padding-left: 0px !important;\\n}\\n\\n.side-bar {\\n  background: rgba(0, 0, 0, 0.03);\\n  /* box-shadow: 0 0px 8px 0 rgba(0, 0, 0, 0.2); */\\n  border-right: 1px solid lightgray;\\n  transition: 0.3s;\\n}\\n.working-area {\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  height: 100vh;\\n  width: 100%;\\n  scrollbar-width: thin; /* \\\"auto\\\" or \\\"thin\\\" */\\n  scrollbar-color: lightgray transparent;\\n}\\n\\n.card {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.layout-main {\\n  height: calc(100vh - 60px);\\n}\\n.layout-main-section-wrapper {\\n  margin-bottom: 0px !important;\\n}\\n\\ndiv::-webkit-scrollbar {\\n  width: 0px; /* width of the entire scrollbar */\\n}\\n\\ndiv::-webkit-scrollbar-track {\\n  background: transparent; /* color of the tracking area */\\n}\\n\\ndiv::-webkit-scrollbar-thumb {\\n  background-color: grey; /* color of\u220F the scroll thumb */\\n  border-radius: 20px; /* roundness of the scroll thumb */\\n  border: 0px solid orange; /* creates padding around scroll thumb */\\n}\\n.main {\\n    width: 100%;\\n    height: 100%;\\n    overflow-x: hidden;\\n    overflow-y: auto;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "import Vuex from '../dist/vuex.common.js'\n\nconst {\n  Store,\n  install,\n  version,\n  mapState,\n  mapMutations,\n  mapGetters,\n  mapActions,\n  createNamespacedHelpers,\n  createLogger\n} = Vuex\n\nexport {\n  Vuex as default,\n  Store,\n  install,\n  version,\n  mapState,\n  mapMutations,\n  mapGetters,\n  mapActions,\n  createNamespacedHelpers,\n  createLogger\n}\n", "const getUserInfo = () => {\n    let userInfo = {};\n\n    return userInfo;\n};\n\nconst state = {\n    AppActiveUser: getUserInfo(),\n    tableData: []\n};\n\nexport default state;", "const getters = {\n    getUser: (state) => {\n        return state.AppActiveUser;\n    },\n    getTableData: (state) => {\n        return state.AppActiveUser;\n    },\n};\n\nexport default getters;", "const mutations = {\n    UPDATE_USER_INFO(state, payload) {\n        state.AppActiveUser = payload;\n    },\n    UPDATE_TABLE_DATA(state, payload) {\n        state.tableData = payload;\n    },\n}\n\nexport default mutations", "const actions = {\n    updateUserInfo({ commit }, payload) {\n        commit(\"UPDATE_USER_INFO\", payload);\n    },\n    updateTable({ commit }, payload) {\n        commit(\"UPDATE_TABLE_DATA\", payload);\n    },\n};\n\nexport default actions;", "export default {\n    patients: [],\n    patientSearchQuery: '',\n    patientFilter: null,\n    selectedPatientDetails: {},\n    selectedPatient: {},\n    timelineData: [],\n\n}", "export default {\n    SET_PATIENT_SEARCH_QUERY(state, query) {\n        state.patientSearchQuery = query;\n    },\n    UPDATE_PATIENT_FILTER(state, filter) {\n        state.patientFilter = filter;\n    },\n    SET_PATIENTS(state, patients) {\n        state.patients = patients;\n    },\n    ADD_PATIENT(state, patient) {\n        state.patients.unshift(patient);\n    },\n    UPDATE_PATIENT(state, patient) {\n        const patientIndex = state.patients.findIndex((t) => t.id == patient.id);\n        Object.assign(state.patients[patientIndex], patient);\n    },\n    SET_SELECTED_PATIENT(state, patient) {\n        state.selectedPatient = patient;\n    },\n    SET_SELECTED_PATIENT_DETAILS(state, patientDetails) {\n        state.selectedPatientDetails = patientDetails;\n    },\n    SET_TIMELINE_DATA(state, timelineData) {\n        state.timelineData = timelineData;\n    },\n\n};", "export const api = ({ method, args = {}, freeze=true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({\n            method,\n            args,\n            freeze,\n            callback: ({ message }) => resolve(message),\n            error: reject,\n        })\n    );\n\nexport const getPatientInfo = (patient_name) =>\n    api({\n        method: \"clinical.api.patients.get_patient_details\",\n        args: patient_name,\n    });\n\nexport const wavePatientRegistrationFee = (patient, reasons) =>\n    api({\n        method: \"clinical.api.patients.waive_patient_registration\",\n        args: { patient, reasons },\n    });\n\nexport const createAppointment = ({\n        patient,\n        service_unit,\n        practitioner,\n        department,\n        appointment_date,\n        appointment_time,\n        referring_practitioner,\n    }) =>\n    api({\n        method: \"clinical.api.patient_encounter.patient_encounter.create_appointment\",\n        args: {\n            patient,\n            service_unit,\n            practitioner,\n            department,\n            appointment_date,\n            appointment_time,\n            referring_practitioner,\n        },\n    });\n//erpnext.healthcare.doctype.inpatient_record.inpatient_record.schedule_discharge\nexport const scheduleDischarge = (args) =>\n    api({\n        method: \"clinical.api.patients.schedule_patient_discharge\",\n        args: { args },\n    });\nexport const getAvailabilityData = ({ practitioner, date }) =>\n    api({\n        method: \"erpnext.healthcare.doctype.patient_appointment.patient_appointment.get_availability_data\",\n        args: { practitioner, date },\n    });\n\nexport const billPatientStandingCharges = () =>\n    api({\n        method: \"billing.billing.api.patient.inpatient_standing_charges_billing.bill_patient_standing_charges\",\n    });\n\nexport const dischargeOrTransferBilling = (inpatient_record) =>\n    api({\n        method: \"billing.billing.api.patient.inpatient_standing_charges_billing.discharge_or_transfer_billing\",\n        args: inpatient_record,\n    });\n\nexport const manuallyDischargeAndVacateBed = (inpatient_record,patient) =>\n    api({\n        method: \"clinical.api.patients.manually_discharge_and_vacate_bed\",\n        args:{\n            inpatient_record,\n            patient\n        },\n    });\n\nexport const requestAmbulance = (payload) => {\nreturn api({\n    method: \"fleet.api.fleet_request.post_ambulance_request \",\n    args: {\n        payload\n    },\n});\n}\n\nexport const createDeathNotification = ({patient,immediate_cause,underlying_cause,pract}) =>\n    api({\n        method: \"clinical.clinical.doctype.death_notification.death_notification.insert_notification\",\n        args: {\n            patient,\n            immediate_cause,\n            underlying_cause,\n            pract\n        },\n    });", "import { getPatientsPerServiceUnit, transferPatient as transferPatientApi } from './.././../services/patient_chart/api';\nimport { getPatientInfo } from '../.././services/patient/patient.js'\n\nexport default {\n    setPatientSearchQuery({ commit }, query) {\n        commit('SET_PATIENT_SEARCH_QUERY', query);\n    },\n\n    fetchPatients({ commit }, payload) {\n        console.log(\"BACK AT IT\", payload)\n        if (!payload.serviceUnit) {\n            return;\n        }\n        payload.work = undefined\n        return getPatientsPerServiceUnit(payload)\n            .then((patients) => {\n                const inpatient_outpatient = [...patients.inpatients, ...patients.outpatients];\n                console.log('FETCH SUCCESS', inpatient_outpatient);\n\n                commit('SET_PATIENTS', inpatient_outpatient);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },\n    transferPatient: ({ commit }, { patient, callback, ...transfer_payload }) =>\n        transferPatientApi(transfer_payload).then(() => {\n            const newPatient = {...patient, bed: transfer_payload.service_unit, service_unit: transfer_payload.service_unit };\n            commit('UPDATE_PATIENT', newPatient);\n            callback();\n        }),\n\n    setSelectedPatient({ commit }, patient) {\n\n        return commit('SET_SELECTED_PATIENT', patient);\n    },\n    fetchSelectedPatientDetails({ commit }, payload) {\n        console.log(payload)\n        if (payload.patient_name) {\n            return getPatientInfo(payload)\n                .then((patientData) => {\n                    commit('SET_SELECTED_PATIENT_DETAILS', patientData);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n    },\n\n    setTimelineData({ commit }, timelineData) {\n        return commit('SET_TIMELINE_DATA', timelineData);\n    },\n\n};", "export default {\n    getPatients: (state) => state.patients,\n    getPatient: (state) => (patientName) =>\n        state.patients.find((patient) => patient.name == patientName),\n    getSelectedPatient: (state) => state.selectedPatient,\n    getSelectedPatientDetails: (state) => state.selectedPatientDetails || {},\n    getTimelineData: (state) => state.timelineData,\n};", "import state from './modulePatientState.js'\nimport mutations from './modulePatientMutations.js'\nimport actions from './modulePatientActions.js'\nimport getters from './modulePatientGetters.js'\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "export default {\n    procedureTemplates: [],\n    scheduledProcedures: [],\n    unScheduledProcedures: [],\n    procedureStatistics: [],\n    queryParams: {},\n    pagination:{\n        per_page: 12,\n        current_page: 1,\n        page_count: 12\n    }\n}", "// procedureTemplates: [],\n//     scheduledProcedures: [],\n//     unScheduledProcedures: [],\nexport default {\n    SET_PROCEDURE_TEMPLATES(state, templates){\n        state.procedureTemplates = templates\n    },\n    SET_UNSCHEDULED_PROCEDURES(state, unScheduledProcedures){\n        state.unScheduledProcedures = unScheduledProcedures\n    },\n    SET_SCHEDULED_PROCEDURES(state, scheduledTemplates){\n        state.scheduledProcedures = scheduledTemplates\n    },\n    SET_QUERY_PARAMS(state, query){\n        state.queryParams = {...state.queryParams, ...query}\n    },\n    SET_PAGINATION_META(state, pagination){\n        state.pagination = pagination\n    },\n    SET_PROCEDURE_STATISTICS(state, procedureStatistics){\n        state.procedureStatistics = procedureStatistics\n    }\n};", "export const api = ({ method, args = {}, freeze = true, }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, freeze, callback: ({ message }) => resolve(message), error: reject }),\n    );\n\n\nexport const getScheduledOrUnscheduledprocedures = (args) => {\n    return api({\n        method: 'clinical.api.clinical_procedure.clinical_procedure.get_clinical_procedures_per_service_unit',\n        args\n    })\n}\n\nexport const getClinicalProcedureTemplates = (args) => {\n    return api({\n        method: 'clinical.api.clinical_procedure.clinical_procedure.get_clinical_procedure_templates_per_service_unit',\n        args\n    })\n}\n\nexport const scheduleProcedure = (args) => {\n    return api({\n        method: 'clinical.api.clinical_procedure.clinical_procedure.schedule_procedure',\n        args\n    })\n}\n\nexport const getProcedureStatistics = (args) => {\n    return api({\n        method: 'clinical.api.clinical_procedure.clinical_procedure.get_procedure_statistics',\n        args\n    })\n}\n\nexport const getClinicalProcedure = (procedure, args) => {\n    return api({\n        method: 'clinical.api.clinical_procedure.clinical_procedure.get_procedure',\n        freeze: false,\n        args: {\n            procedure_name: procedure,\n        }\n    })\n}\nexport const getPatientNameAndCustomerNumber = (patient) => {\n    return api({\n        method: 'clinical.api.clinical_procedure.clinical_procedure.get_patient_name_and_number',\n        freeze: false,\n        args: {\n            patient: patient\n        }\n    })\n}", "\nimport { getScheduledOrUnscheduledprocedures, getClinicalProcedureTemplates, getProcedureStatistics } from './../../services/clinical_procedures/clinical_procedures'\n\nexport default {\n    fetchProcedures({commit}, query){\n        return getScheduledOrUnscheduledprocedures(query)\n        .then(({ scheduled_procedures, un_scheduled_procedures, pagination }) => {\n            commit('SET_UNSCHEDULED_PROCEDURES', un_scheduled_procedures);\n            commit('SET_SCHEDULED_PROCEDURES', scheduled_procedures);\n            commit('SET_PAGINATION_META', pagination);\n        })\n    },\n    fetchProcedureTemplates({ commit }, args){\n        return getClinicalProcedureTemplates(args).then((templates) => {\n            commit('SET_PROCEDURE_TEMPLATES', templates);\n        })\n    },\n    setQueryParams({commit }, payload) {\n        return commit('SET_QUERY_PARAMS', payload);\n    },\n    fetchProcedureStatistics({ commit }, args) {\n        return getProcedureStatistics(args)\n        .then((procedures) => {\n            commit('SET_PROCEDURE_STATISTICS', procedures)\n        })\n    }\n};", "export default {\n    getUnscheduledProcedures: (state) => state.unScheduledProcedures,\n    getScheduledProcedures: (state) => {\n        return state.scheduledProcedures\n    },\n    getProceduretemplates: (state) => state.procedureTemplates,\n    getQueryParams: (state) => state.queryParams,\n    getPaginationMeta: (state) => state.pagination,\n    getProcedureStatistics: (state) => state.procedureStatistics\n};", "import state from './procedureState'\nimport mutations from './procedureMutations'\nimport actions from './procedureActions'\nimport getters from './procedureGetters'\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "export default {\n    serviceUnits: [],\n    selectedServiceUnit: {},\n}", "export default {\n    SET_SERVICE_UNITS(state, serviceUnits) {\n        state.serviceUnits = serviceUnits;\n    },\n    SET_SELECTED_SERVICE_UNIT(state, selectedServiceUnit) {\n        state.selectedServiceUnit = selectedServiceUnit;\n    },\n}", "import { getMyServiceUnits } from \"./.././../services/patient_chart/api\";\nexport default {\n    setSelectedServiceUnit({ commit }, serviceUnit) {\n        commit(\"SET_SELECTED_SERVICE_UNIT\", serviceUnit);\n    },\n\n    fetchMyServiceUnits: ({ commit, state }, payload) => {\n        getMyServiceUnits()\n        .then((serviceUnits) => {\n            commit(\"SET_SERVICE_UNITS\", serviceUnits);\n            if (!state.selectedServiceUnit.name) {\n                if (serviceUnits.length) {\n                    commit(\"SET_SELECTED_SERVICE_UNIT\", serviceUnits[0]);\n                }\n            }\n        })\n    }\n};", "export default {\n    getServiceUnits: state => state.serviceUnits,\n    getSelectedServiceUnit: state => state.selectedServiceUnit,\n}", "import state from './moduleServiceUnitState.js'\nimport mutations from './moduleServiceUnitMutations.js'\nimport actions from './moduleServiceUnitActions.js'\nimport getters from './moduleServiceUnitGetters.js'\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters\n}", "export default {\n    servicePoints: [],\n    selectedServicePoint: {},\n    myLocation: \"\",\n}", "export default {\n    SET_SERVICE_POINTS(state, servicePoints) {\n        state.servicePoints = servicePoints;\n    },\n    SET_SELECTED_SERVICE_POINT(state, selectedServicePoint) {\n        state.selectedServicePoint = selectedServicePoint;\n    },\n    SET_MY_LOCATION(state, selectedLocation) {\n        state.myLocation = selectedLocation;\n    },\n}", "import { getMyServicePoints } from \"../../services/patient_chart/api\";\nimport { getMyLocation } from \"../../services/patient_chart/api\";\nexport default {\n    setSelectedServicePoint({ commit }, servicePoint) {\n        commit(\"SET_SELECTED_SERVICE_POINT\", servicePoint);\n    },\n    setMyLocation({ commit }, location) {\n        commit(\"SET_MY_LOCATION\", location);\n    },\n    fetchMyLocation: ({ commit, state }) => {\n        getMyLocation().then((location) => {\n            commit(\"SET_MY_LOCATION\", location);\n        })\n    },\n    fetchMyServicePoints: ({ commit, state }, payload) => {\n        getMyServicePoints(payload.service_unit)\n            .then((servicePoints) => {\n                commit(\"SET_SERVICE_POINTS\", servicePoints);\n                if (servicePoints.length) {\n                    commit(\"SET_SELECTED_SERVICE_POINT\", servicePoints[0]);\n                }\n            })\n    }\n};", "export default {\n    getServicePoints: state => state.servicePoints,\n    getSelectedServicePoint: state => state.selectedServicePoint,\n    getMyLocation: state => state.myLocation\n}", "import state from './moduleServicePointState.js'\nimport mutations from './moduleServicePointMutations.js'\nimport actions from './moduleServicePointActions.js'\nimport getters from './moduleServicePointGetters.js'\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters\n}", "export default {\n    socketData: {},\n\n}", "export default {\n    SET_SOCKET_DATA(state, socketData) {\n        state.socketData = socketData;\n    },\n};", "export default {\n    setSocketData({ commit }, socketData) {\n        console.log('RECIEVED SOCKED DATA', socketData)\n        return commit(\"SET_SOCKET_DATA\", socketData);\n    },\n};", "export default {\n    getSocketData: (state) => state.socketData,\n};", "import state from './moduleSocketState.js'\nimport mutations from './moduleSocketMutations.js'\nimport actions from './moduleSocketActions.js'\nimport getters from './moduleSocketGetters.js'\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "export default {\n    notificationList: [],\n\n}", "export default {\n    ADD_NOTIFICATION(state, notification) {\n        const exits = state.notificationList.find(item => item.name == notification.name);\n        if (!exits) {\n            state.notificationList.unshift(notification);\n        }\n\n    },\n    SET_NOTIFICATION_LIST(state, data) {\n        state.notificationList = data;\n    },\n    UPDATE_NOTIFICATION(state, notification) {\n        const notificationIndex = state.notificationList.findIndex(\n            (t) => t.name == notification.name\n        );\n        Object.assign(state.notificationList[notificationIndex], notification);\n    },\n    REMOVE_NOTIFICATION(state, notification) {\n        state.notificationList = state.notificationList.filter(\n            (item) => item.name !== notification.name\n        );\n    },\n};", "import { api } from \"./../patient/patient\";\nexport const fetchNotifications = (payload) =>\n    api({\n        method: \"clinical.api.notification.notification.get_notifications\",\n        args: { payload },\n    });\n\nexport const clearNotification = (payload) =>\n    api({\n        method: \"clinical.api.notification.notification.clear_notification\",\n        args: { payload },\n    });", "import { fetchNotifications, clearNotification } from './../../services/notification/notification.js'\n\n\nexport default {\n    setNotificationList({ commit }, data) {\n        return commit(\"SET_NOTIFICATION_LIST\", data);\n    },\n    addNotification({ commit }, data) {\n        return commit(\"ADD_NOTIFICATION\", data);\n    },\n\n    fetchNotifications({ commit }, payload) {\n\n        return fetchNotifications(payload)\n            .then((notification) => {\n                return commit(\"SET_NOTIFICATION_LIST\", notification)\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },\n\n    clearNotification({ commit }, payload) {\n\n        return clearNotification(payload)\n            .then((notification) => {\n                if (notification.name) {\n                    return commit(\"REMOVE_NOTIFICATION\", notification)\n                } else {\n                    return commit(\"SET_NOTIFICATION_LIST\", [])\n                }\n\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },\n};", "export default {\n    getNotificationList: (state) => state.notificationList,\n};", "import state from './moduleNotificationState.js'\nimport mutations from './moduleNotificationMutations.js'\nimport actions from './moduleNotificationActions.js'\nimport getters from './moduleNotificationGetters.js'\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "export default {\n    suppliers: [],\n    supplierSearchQuery: '',\n    supplierFilter: null,\n    selectedsupplierDetails: {},\n    selectedsupplier: {}\n\n}", "export default {\n\n    SET_SUPPLIERS(state, suppliers) {\n        state.suppliers = suppliers;\n    },\n    ADD_SUPPLIER(state, supplier) {\n        state.suppliers.unshift(supplier);\n    },\n    UPDATE_SUPPLIER(state, supplier) {\n        const supplierIndex = state.suppliers.findIndex((t) => t.id == supplier.id);\n        Object.assign(state.suppliers[supplierIndex], supplier);\n    },\n    SET_SELECTED_SUPPLIER(state, supplier) {\n        state.selectedSupplier = supplier;\n    },\n    SET_SELECTED_SUPPLIER_DETAILS(state, supplierDetails) {\n        state.selectedSupplierDetails = supplierDetails;\n    },\n\n};", "// import { getSuppliersPerServiceUnit, transferSupplier as transferSupplierApi } from './.././../services/patient_chart/api';\n// import { getSupplierInfo } from '../.././services/patient/patient.js'\n\nexport default {\n\n    fetchSuppliers({ commit }, payload) {\n        // return getSuppliersPerServiceUnit(payload)\n        //     .then((patients) => {\n        //         const inpatient_outpatient = [...patients.inpatients, ...patients.outpatients];\n        //         console.log('FETCH SUCCESS', inpatient_outpatient);\n\n        //         commit('SET_SUPPLIERS', inpatient_outpatient);\n        //     })\n        //     .catch((error) => {\n        //         console.log(error);\n        //     });\n    },\n\n\n\n    fetchSelectedSupplierDetails({ commit }, payload) {\n        console.log(payload)\n            // return getSupplierInfo(payload)\n            //     .then((patientData) => {\n            //         commit('SET_SELECTED_SUPPLIER_DETAILS', patientData);\n            //     })\n            //     .catch((error) => {\n            //         console.log(error);\n            //     });\n    },\n\n\n\n};", "export default {\n    getSuppliers: (state) => state.suppliers,\n    getSupplier: (state) => (supplierName) =>\n        state.suppliers.find((supplier) => supplier.name == supplierName),\n    getSelectedSupplier: (state) => state.selectedSupplier,\n    getSelectedSupplierDetails: (state) => state.selectedSupplierDetails || {},\n    getTimelineData: (state) => state.timelineData,\n};", "import state from './moduleSupplierState.js'\nimport mutations from './moduleSupplierMutations.js'\nimport actions from './moduleSupplierActions.js'\nimport getters from './moduleSupplierGetters.js'\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "export default {\n    context: {},\n};", "export default {\n    SET_CONTEXT(state, context) {\n        state.context = context;\n    },\n    SET_CONTEXT_ITEM(state, contextItem) {\n        state.context[contextItem.key] = contextItem.value;\n    },\n\n};", "export default {\n    setContextItem({ commit }, payload) {\n        commit(\"SET_CONTEXT_ITEM\", payload);\n    },\n};", "export default {\n    getContext: (state) => {\n        return state.context;\n    },\n    getContextItem: (state) => (key) => {\n        return state.context[key]\n      }\n    \n  \n};", "import state from \"./state.js\";\nimport mutations from \"./mutations.js\";\nimport actions from \"./actions.js\";\nimport getters from \"./getters.js\";\n\nexport default {\n    // isRegistered: false,\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters\n};", "const state = {\n    encounter: {},\n};\n\nexport default state;", "const getters = {\n    getEncounter: (state) => {\n        return state.encounter;\n    },\n\n};\n\nexport default getters;", "const mutations = {\n    SET_ENCOUNTER(state, payload) {\n        state.encounter = payload;\n    },\n}\n\nexport default mutations", "const actions = {\n    setEncounter({ commit }, payload) {\n        commit(\"SET_ENCOUNTER\", payload);\n    },\n};\n\nexport default actions;", "import state from \"./state\";\nimport getters from \"./getters\";\nimport mutations from \"./mutations\";\nimport actions from \"./actions\"\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "const state = {\n    appointments_count: null,\n};\n\nexport default state;", "const getters = {\n    getAppointmentsCount: (state) => {\n        return state.appointments_count;\n    },\n\n};\n\nexport default getters;", "const mutations = {\n    SET_APPOINTMENTS_COUNT(state, payload) {\n        state.appointments_count = payload;\n    },\n}\n\nexport default mutations", "const actions = {\n    setAppointmentsCount({ commit }, payload) {\n        commit(\"SET_APPOINTMENTS_COUNT\", payload);\n    },\n};\n\nexport default actions;", "import state from \"./state\";\nimport getters from \"./getters\";\nimport mutations from \"./mutations\";\nimport actions from \"./actions\"\n\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}", "window.process = {\n    env: {\n        NODE_ENV: \"production\",\n    },\n};\nimport Vuex from \"vuex\";\nimport state from \"./state\";\nimport getters from \"./getters\";\nimport mutations from \"./mutations\";\nimport actions from \"./actions\";\n\nVue.use(Vuex);\n\nimport patient from \"./patient/modulePatient.js\";\nimport procedures from \"./clinical_procedures/procedures\";\nimport serviceUnit from \"./serviceUnit/moduleServiceUnit.js\";\nimport servicePoint from \"./servicePoint/moduleServicePoint.js\";\nimport socket from \"./socket/moduleSocket.js\";\nimport notification from \"./notification/moduleNotification.js\";\nimport supplier from \"./supplier/moduleSupplier.js\";\nimport render from \"./render/module.js\";\nimport accounts from \"./accounts\";\nimport context from \"./context/index.js\";\nimport encounter from \"./patient-encounter/module.js\";\nimport appointments from \"./patient_appointments/module.js\"\nexport default new Vuex.Store({\n    getters,\n    mutations,\n    state,\n    actions,\n    modules: {\n        patient,\n        serviceUnit,\n        servicePoint,\n        socket,\n        supplier,\n        render,\n        notification,\n        accounts,\n        procedures,\n        context,\n        encounter,\n        appointments,\n    },\n});", "import Main from \"./Main.vue\";\nimport store from \"../state/store.js\";\n\nfrappe.provide(\"frappe.accounts\"); // create a namespace within the Frappe instance\n\nfrappe.accounts.Chart = class {\n\n    constructor({ parent }) {\n        this.$parent = $(parent);\n        this.page = parent.page;\n        this.make_body();\n    }\n\n    make_body() {\n        $(\".sticky-top\").addClass(\"hidden\");\n        this.$body = this.$parent.find(\".layout-main-section\");\n        this.$parent.find(\".page-head\").addClass(\"hidden\");\n        this.$parent.find(\".page-body\").removeClass(\"container\");\n        this.$parent.find(\".content\").removeClass(\"page-container\");\n        this.$parent.find(\".page-content\").removeClass(\"page-content\");\n        this.$parent\n            .find(\"layout-main-section-wrapper\")\n            .addClass(\"no-bottom-margin\");\n        this.$page_container = $('<div class=\"hub-page-container\">').appendTo(\n            this.$body\n        );\n\n        const myInstance = new Vue({\n            store,\n            router: frappe.custom.router,\n            el: \".hub-page-container\",\n            render: (h) => h(Main),\n        });\n    }\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAKA;AAEA,0BAAqB,MAAK;AACxB,YAAI,UAAU,OAAO,KAAI,QAAQ,MAAM,KAAK;AAE5C,YAAI,WAAW,GAAG;AAChB,eAAI,MAAM,CAAE,cAAc;AAAA,eACrB;AAGL,cAAI,QAAQ,KAAI,UAAU;AAC1B,eAAI,UAAU,QAAQ,SAAU,SAAS;AACvC,gBAAK,YAAY;AAAS,wBAAU;AAEpC,oBAAQ,OAAO,QAAQ,OACnB,CAAC,UAAU,OAAO,QAAQ,QAC1B;AACJ,kBAAM,KAAK,MAAM;AAAA;AAAA;AAQrB,4BAAqB;AACnB,cAAI,UAAU,KAAK;AAEnB,cAAI,QAAQ,OAAO;AACjB,iBAAK,SAAS,OAAO,QAAQ,UAAU,aACnC,QAAQ,UACR,QAAQ;AAAA,qBACH,QAAQ,UAAU,QAAQ,OAAO,QAAQ;AAClD,iBAAK,SAAS,QAAQ,OAAO;AAAA;AAAA;AAAA;AAKnC,UAAI,SAAS,OAAO,WAAW,cAC3B,SACA,OAAO,WAAW,cAChB,SACA;AACN,UAAI,cAAc,OAAO;AAEzB,6BAAwB,OAAO;AAC7B,YAAI,CAAC,aAAa;AAAE;AAAA;AAEpB,cAAM,eAAe;AAErB,oBAAY,KAAK,aAAa;AAE9B,oBAAY,GAAG,wBAAwB,SAAU,aAAa;AAC5D,gBAAM,aAAa;AAAA;AAGrB,cAAM,UAAU,SAAU,UAAU,QAAO;AACzC,sBAAY,KAAK,iBAAiB,UAAU;AAAA,WAC3C,CAAE,SAAS;AAEd,cAAM,gBAAgB,SAAU,QAAQ,QAAO;AAC7C,sBAAY,KAAK,eAAe,QAAQ;AAAA,WACvC,CAAE,SAAS;AAAA;AAWhB,oBAAe,MAAM,GAAG;AACtB,eAAO,KAAK,OAAO,GAAG;AAAA;AAYxB,wBAAmB,KAAK,OAAO;AAC7B,YAAK,UAAU;AAAS,kBAAQ;AAGhC,YAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;AAC3C,iBAAO;AAAA;AAIT,YAAI,MAAM,KAAK,OAAO,SAAU,GAAG;AAAE,iBAAO,EAAE,aAAa;AAAA;AAC3D,YAAI,KAAK;AACP,iBAAO,IAAI;AAAA;AAGb,YAAI,OAAO,MAAM,QAAQ,OAAO,KAAK;AAGrC,cAAM,KAAK;AAAA,UACT,UAAU;AAAA,UACV;AAAA;AAGF,eAAO,KAAK,KAAK,QAAQ,SAAU,KAAK;AACtC,eAAK,OAAO,SAAS,IAAI,MAAM;AAAA;AAGjC,eAAO;AAAA;AAMT,4BAAuB,KAAK,IAAI;AAC9B,eAAO,KAAK,KAAK,QAAQ,SAAU,KAAK;AAAE,iBAAO,GAAG,IAAI,MAAM;AAAA;AAAA;AAGhE,wBAAmB,KAAK;AACtB,eAAO,QAAQ,QAAQ,OAAO,QAAQ;AAAA;AAGxC,yBAAoB,KAAK;AACvB,eAAO,OAAO,OAAO,IAAI,SAAS;AAAA;AAGpC,sBAAiB,WAAW,KAAK;AAC/B,YAAI,CAAC,WAAW;AAAE,gBAAM,IAAI,MAAO,YAAY;AAAA;AAAA;AAGjD,uBAAkB,IAAI,KAAK;AACzB,eAAO,WAAY;AACjB,iBAAO,GAAG;AAAA;AAAA;AAKd,UAAI,SAAS,iBAAiB,WAAW,SAAS;AAChD,aAAK,UAAU;AAEf,aAAK,YAAY,OAAO,OAAO;AAE/B,aAAK,aAAa;AAClB,YAAI,WAAW,UAAU;AAGzB,aAAK,QAAS,QAAO,aAAa,aAAa,aAAa,aAAa;AAAA;AAG3E,UAAI,qBAAqB,CAAE,YAAY,CAAE,cAAc;AAEvD,yBAAmB,WAAW,MAAM,WAAY;AAC9C,eAAO,CAAC,CAAC,KAAK,WAAW;AAAA;AAG3B,aAAO,UAAU,WAAW,kBAAmB,KAAK,SAAQ;AAC1D,aAAK,UAAU,OAAO;AAAA;AAGxB,aAAO,UAAU,cAAc,qBAAsB,KAAK;AACxD,eAAO,KAAK,UAAU;AAAA;AAGxB,aAAO,UAAU,WAAW,kBAAmB,KAAK;AAClD,eAAO,KAAK,UAAU;AAAA;AAGxB,aAAO,UAAU,WAAW,kBAAmB,KAAK;AAClD,eAAO,OAAO,KAAK;AAAA;AAGrB,aAAO,UAAU,SAAS,iBAAiB,WAAW;AACpD,aAAK,WAAW,aAAa,UAAU;AACvC,YAAI,UAAU,SAAS;AACrB,eAAK,WAAW,UAAU,UAAU;AAAA;AAEtC,YAAI,UAAU,WAAW;AACvB,eAAK,WAAW,YAAY,UAAU;AAAA;AAExC,YAAI,UAAU,SAAS;AACrB,eAAK,WAAW,UAAU,UAAU;AAAA;AAAA;AAIxC,aAAO,UAAU,eAAe,sBAAuB,IAAI;AACzD,qBAAa,KAAK,WAAW;AAAA;AAG/B,aAAO,UAAU,gBAAgB,uBAAwB,IAAI;AAC3D,YAAI,KAAK,WAAW,SAAS;AAC3B,uBAAa,KAAK,WAAW,SAAS;AAAA;AAAA;AAI1C,aAAO,UAAU,gBAAgB,uBAAwB,IAAI;AAC3D,YAAI,KAAK,WAAW,SAAS;AAC3B,uBAAa,KAAK,WAAW,SAAS;AAAA;AAAA;AAI1C,aAAO,UAAU,kBAAkB,yBAA0B,IAAI;AAC/D,YAAI,KAAK,WAAW,WAAW;AAC7B,uBAAa,KAAK,WAAW,WAAW;AAAA;AAAA;AAI5C,aAAO,iBAAkB,OAAO,WAAW;AAE3C,UAAI,mBAAmB,2BAA2B,eAAe;AAE/D,aAAK,SAAS,IAAI,eAAe;AAAA;AAGnC,uBAAiB,UAAU,MAAM,aAAc,MAAM;AACnD,eAAO,KAAK,OAAO,SAAU,SAAQ,KAAK;AACxC,iBAAO,QAAO,SAAS;AAAA,WACtB,KAAK;AAAA;AAGV,uBAAiB,UAAU,eAAe,sBAAuB,MAAM;AACrE,YAAI,UAAS,KAAK;AAClB,eAAO,KAAK,OAAO,SAAU,WAAW,KAAK;AAC3C,oBAAS,QAAO,SAAS;AACzB,iBAAO,YAAa,SAAO,aAAa,MAAM,MAAM;AAAA,WACnD;AAAA;AAGL,uBAAiB,UAAU,SAAS,kBAAmB,eAAe;AACpE,eAAO,IAAI,KAAK,MAAM;AAAA;AAGxB,uBAAiB,UAAU,WAAW,kBAAmB,MAAM,WAAW,SAAS;AAC/E,YAAI,SAAS;AACb,YAAK,YAAY;AAAS,oBAAU;AAEtC,YAAK,MAAwC;AAC3C,0BAAgB,MAAM;AAAA;AAGxB,YAAI,YAAY,IAAI,OAAO,WAAW;AACtC,YAAI,KAAK,WAAW,GAAG;AACrB,eAAK,OAAO;AAAA,eACP;AACL,cAAI,UAAS,KAAK,IAAI,KAAK,MAAM,GAAG;AACpC,kBAAO,SAAS,KAAK,KAAK,SAAS,IAAI;AAAA;AAIzC,YAAI,UAAU,SAAS;AACrB,uBAAa,UAAU,SAAS,SAAU,gBAAgB,KAAK;AAC7D,mBAAO,SAAS,KAAK,OAAO,MAAM,gBAAgB;AAAA;AAAA;AAAA;AAKxD,uBAAiB,UAAU,aAAa,oBAAqB,MAAM;AACjE,YAAI,UAAS,KAAK,IAAI,KAAK,MAAM,GAAG;AACpC,YAAI,MAAM,KAAK,KAAK,SAAS;AAC7B,YAAI,QAAQ,QAAO,SAAS;AAE5B,YAAI,CAAC,OAAO;AACV,cAAK,MAAwC;AAC3C,oBAAQ,KACN,yCAAyC,MAAM;AAAA;AAInD;AAAA;AAGF,YAAI,CAAC,MAAM,SAAS;AAClB;AAAA;AAGF,gBAAO,YAAY;AAAA;AAGrB,uBAAiB,UAAU,eAAe,sBAAuB,MAAM;AACrE,YAAI,UAAS,KAAK,IAAI,KAAK,MAAM,GAAG;AACpC,YAAI,MAAM,KAAK,KAAK,SAAS;AAE7B,YAAI,SAAQ;AACV,iBAAO,QAAO,SAAS;AAAA;AAGzB,eAAO;AAAA;AAGT,sBAAiB,MAAM,cAAc,WAAW;AAC9C,YAAK,MAAwC;AAC3C,0BAAgB,MAAM;AAAA;AAIxB,qBAAa,OAAO;AAGpB,YAAI,UAAU,SAAS;AACrB,mBAAS,OAAO,UAAU,SAAS;AACjC,gBAAI,CAAC,aAAa,SAAS,MAAM;AAC/B,kBAAK,MAAwC;AAC3C,wBAAQ,KACN,wCAAwC,MAAM;AAAA;AAIlD;AAAA;AAEF,mBACE,KAAK,OAAO,MACZ,aAAa,SAAS,MACtB,UAAU,QAAQ;AAAA;AAAA;AAAA;AAM1B,UAAI,iBAAiB;AAAA,QACnB,QAAQ,SAAU,QAAO;AAAE,iBAAO,OAAO,WAAU;AAAA;AAAA,QACnD,UAAU;AAAA;AAGZ,UAAI,eAAe;AAAA,QACjB,QAAQ,SAAU,QAAO;AAAE,iBAAO,OAAO,WAAU,cAChD,OAAO,WAAU,YAAY,OAAO,OAAM,YAAY;AAAA;AAAA,QACzD,UAAU;AAAA;AAGZ,UAAI,cAAc;AAAA,QAChB,SAAS;AAAA,QACT,WAAW;AAAA,QACX,SAAS;AAAA;AAGX,+BAA0B,MAAM,WAAW;AACzC,eAAO,KAAK,aAAa,QAAQ,SAAU,KAAK;AAC9C,cAAI,CAAC,UAAU,MAAM;AAAE;AAAA;AAEvB,cAAI,gBAAgB,YAAY;AAEhC,uBAAa,UAAU,MAAM,SAAU,QAAO,MAAM;AAClD,mBACE,cAAc,OAAO,SACrB,qBAAqB,MAAM,KAAK,MAAM,QAAO,cAAc;AAAA;AAAA;AAAA;AAMnE,oCAA+B,MAAM,KAAK,MAAM,QAAO,UAAU;AAC/D,YAAI,MAAM,MAAM,gBAAgB,WAAW,WAAY,MAAM,MAAM,OAAO;AAC1E,YAAI,KAAK,SAAS,GAAG;AACnB,iBAAO,iBAAmB,KAAK,KAAK,OAAQ;AAAA;AAE9C,eAAO,SAAU,KAAK,UAAU,UAAU;AAC1C,eAAO;AAAA;AAGT,UAAI;AAEJ,UAAI,QAAQ,gBAAgB,SAAS;AACnC,YAAI,SAAS;AACb,YAAK,YAAY;AAAS,oBAAU;AAKpC,YAAI,CAAC,QAAO,OAAO,WAAW,eAAe,OAAO,KAAK;AACvD,kBAAQ,OAAO;AAAA;AAGjB,YAAK,MAAwC;AAC3C,iBAAO,MAAK;AACZ,iBAAO,OAAO,YAAY,aAAa;AACvC,iBAAO,gBAAgB,QAAO;AAAA;AAGhC,YAAI,UAAU,QAAQ;AAAS,YAAK,YAAY;AAAS,oBAAU;AACnE,YAAI,SAAS,QAAQ;AAAQ,YAAK,WAAW;AAAS,mBAAS;AAG/D,aAAK,cAAc;AACnB,aAAK,WAAW,OAAO,OAAO;AAC9B,aAAK,qBAAqB;AAC1B,aAAK,aAAa,OAAO,OAAO;AAChC,aAAK,kBAAkB,OAAO,OAAO;AACrC,aAAK,WAAW,IAAI,iBAAiB;AACrC,aAAK,uBAAuB,OAAO,OAAO;AAC1C,aAAK,eAAe;AACpB,aAAK,aAAa,IAAI;AACtB,aAAK,yBAAyB,OAAO,OAAO;AAG5C,YAAI,QAAQ;AACZ,YAAI,MAAM;AACV,YAAI,WAAW,IAAI;AACnB,YAAI,SAAS,IAAI;AACjB,aAAK,WAAW,uBAAwB,MAAM,SAAS;AACrD,iBAAO,SAAS,KAAK,OAAO,MAAM;AAAA;AAEpC,aAAK,SAAS,qBAAsB,MAAM,SAAS,UAAS;AAC1D,iBAAO,OAAO,KAAK,OAAO,MAAM,SAAS;AAAA;AAI3C,aAAK,SAAS;AAEd,YAAI,SAAQ,KAAK,SAAS,KAAK;AAK/B,sBAAc,MAAM,QAAO,IAAI,KAAK,SAAS;AAI7C,qBAAa,MAAM;AAGnB,gBAAQ,QAAQ,SAAU,QAAQ;AAAE,iBAAO,OAAO;AAAA;AAElD,YAAI,cAAc,QAAQ,aAAa,SAAY,QAAQ,WAAW,KAAI,OAAO;AACjF,YAAI,aAAa;AACf,wBAAc;AAAA;AAAA;AAIlB,UAAI,uBAAuB,CAAE,OAAO,CAAE,cAAc;AAEpD,2BAAqB,MAAM,MAAM,WAAY;AAC3C,eAAO,KAAK,IAAI,MAAM;AAAA;AAGxB,2BAAqB,MAAM,MAAM,SAAU,GAAG;AAC5C,YAAK,MAAwC;AAC3C,iBAAO,OAAO;AAAA;AAAA;AAIlB,YAAM,UAAU,SAAS,gBAAiB,OAAO,UAAU,UAAU;AACjE,YAAI,SAAS;AAGf,YAAI,MAAM,iBAAiB,OAAO,UAAU;AAC1C,YAAI,OAAO,IAAI;AACf,YAAI,UAAU,IAAI;AAClB,YAAI,UAAU,IAAI;AAEpB,YAAI,WAAW,CAAE,MAAY;AAC7B,YAAI,QAAQ,KAAK,WAAW;AAC5B,YAAI,CAAC,OAAO;AACV,cAAK,MAAwC;AAC3C,oBAAQ,MAAO,mCAAmC;AAAA;AAEpD;AAAA;AAEF,aAAK,YAAY,WAAY;AAC3B,gBAAM,QAAQ,wBAAyB,SAAS;AAC9C,oBAAQ;AAAA;AAAA;AAIZ,aAAK,aACF,QACA,QAAQ,SAAU,KAAK;AAAE,iBAAO,IAAI,UAAU,OAAO;AAAA;AAExD,YACG,AACD,WAAW,QAAQ,QACnB;AACA,kBAAQ,KACN,2BAA2B,OAAO;AAAA;AAAA;AAMxC,YAAM,UAAU,WAAW,kBAAmB,OAAO,UAAU;AAC3D,YAAI,SAAS;AAGf,YAAI,MAAM,iBAAiB,OAAO;AAChC,YAAI,OAAO,IAAI;AACf,YAAI,UAAU,IAAI;AAEpB,YAAI,SAAS,CAAE,MAAY;AAC3B,YAAI,QAAQ,KAAK,SAAS;AAC1B,YAAI,CAAC,OAAO;AACV,cAAK,MAAwC;AAC3C,oBAAQ,MAAO,iCAAiC;AAAA;AAElD;AAAA;AAGF,YAAI;AACF,eAAK,mBACF,QACA,OAAO,SAAU,KAAK;AAAE,mBAAO,IAAI;AAAA,aACnC,QAAQ,SAAU,KAAK;AAAE,mBAAO,IAAI,OAAO,QAAQ,OAAO;AAAA;AAAA,iBACtD,GAAP;AACA,cAAK,MAAwC;AAC3C,oBAAQ,KAAK;AACb,oBAAQ,MAAM;AAAA;AAAA;AAIlB,YAAI,SAAS,MAAM,SAAS,IACxB,QAAQ,IAAI,MAAM,IAAI,SAAU,SAAS;AAAE,iBAAO,QAAQ;AAAA,cAC1D,MAAM,GAAG;AAEb,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,iBAAO,KAAK,SAAU,KAAK;AACzB,gBAAI;AACF,qBAAO,mBACJ,OAAO,SAAU,KAAK;AAAE,uBAAO,IAAI;AAAA,iBACnC,QAAQ,SAAU,KAAK;AAAE,uBAAO,IAAI,MAAM,QAAQ,OAAO;AAAA;AAAA,qBACrD,GAAP;AACA,kBAAK,MAAwC;AAC3C,wBAAQ,KAAK;AACb,wBAAQ,MAAM;AAAA;AAAA;AAGlB,oBAAQ;AAAA,aACP,SAAU,OAAO;AAClB,gBAAI;AACF,qBAAO,mBACJ,OAAO,SAAU,KAAK;AAAE,uBAAO,IAAI;AAAA,iBACnC,QAAQ,SAAU,KAAK;AAAE,uBAAO,IAAI,MAAM,QAAQ,OAAO,OAAO;AAAA;AAAA,qBAC5D,GAAP;AACA,kBAAK,MAAwC;AAC3C,wBAAQ,KAAK;AACb,wBAAQ,MAAM;AAAA;AAAA;AAGlB,mBAAO;AAAA;AAAA;AAAA;AAKb,YAAM,UAAU,YAAY,mBAAoB,IAAI,SAAS;AAC3D,eAAO,iBAAiB,IAAI,KAAK,cAAc;AAAA;AAGjD,YAAM,UAAU,kBAAkB,yBAA0B,IAAI,SAAS;AACvE,YAAI,OAAO,OAAO,OAAO,aAAa,CAAE,QAAQ,MAAO;AACvD,eAAO,iBAAiB,MAAM,KAAK,oBAAoB;AAAA;AAGzD,YAAM,UAAU,QAAQ,eAAgB,QAAQ,IAAI,SAAS;AACzD,YAAI,SAAS;AAEf,YAAK,MAAwC;AAC3C,iBAAO,OAAO,WAAW,YAAY;AAAA;AAEvC,eAAO,KAAK,WAAW,OAAO,WAAY;AAAE,iBAAO,OAAO,OAAO,OAAO,OAAO;AAAA,WAAa,IAAI;AAAA;AAGlG,YAAM,UAAU,eAAe,sBAAuB,QAAO;AACzD,YAAI,SAAS;AAEf,aAAK,YAAY,WAAY;AAC3B,iBAAO,IAAI,MAAM,UAAU;AAAA;AAAA;AAI/B,YAAM,UAAU,iBAAiB,wBAAyB,MAAM,WAAW,SAAS;AAChF,YAAK,YAAY;AAAS,oBAAU;AAEtC,YAAI,OAAO,SAAS,UAAU;AAAE,iBAAO,CAAC;AAAA;AAExC,YAAK,MAAwC;AAC3C,iBAAO,MAAM,QAAQ,OAAO;AAC5B,iBAAO,KAAK,SAAS,GAAG;AAAA;AAG1B,aAAK,SAAS,SAAS,MAAM;AAC7B,sBAAc,MAAM,KAAK,OAAO,MAAM,KAAK,SAAS,IAAI,OAAO,QAAQ;AAEvE,qBAAa,MAAM,KAAK;AAAA;AAG1B,YAAM,UAAU,mBAAmB,0BAA2B,MAAM;AAChE,YAAI,SAAS;AAEf,YAAI,OAAO,SAAS,UAAU;AAAE,iBAAO,CAAC;AAAA;AAExC,YAAK,MAAwC;AAC3C,iBAAO,MAAM,QAAQ,OAAO;AAAA;AAG9B,aAAK,SAAS,WAAW;AACzB,aAAK,YAAY,WAAY;AAC3B,cAAI,cAAc,eAAe,OAAO,OAAO,KAAK,MAAM,GAAG;AAC7D,eAAI,OAAO,aAAa,KAAK,KAAK,SAAS;AAAA;AAE7C,mBAAW;AAAA;AAGb,YAAM,UAAU,YAAY,mBAAoB,MAAM;AACpD,YAAI,OAAO,SAAS,UAAU;AAAE,iBAAO,CAAC;AAAA;AAExC,YAAK,MAAwC;AAC3C,iBAAO,MAAM,QAAQ,OAAO;AAAA;AAG9B,eAAO,KAAK,SAAS,aAAa;AAAA;AAGpC,YAAM,UAAU,YAAY,mBAAoB,YAAY;AAC1D,aAAK,SAAS,OAAO;AACrB,mBAAW,MAAM;AAAA;AAGnB,YAAM,UAAU,cAAc,qBAAsB,IAAI;AACtD,YAAI,aAAa,KAAK;AACtB,aAAK,cAAc;AACnB;AACA,aAAK,cAAc;AAAA;AAGrB,aAAO,iBAAkB,MAAM,WAAW;AAE1C,gCAA2B,IAAI,MAAM,SAAS;AAC5C,YAAI,KAAK,QAAQ,MAAM,GAAG;AACxB,qBAAW,QAAQ,UACf,KAAK,QAAQ,MACb,KAAK,KAAK;AAAA;AAEhB,eAAO,WAAY;AACjB,cAAI,IAAI,KAAK,QAAQ;AACrB,cAAI,IAAI,IAAI;AACV,iBAAK,OAAO,GAAG;AAAA;AAAA;AAAA;AAKrB,0BAAqB,OAAO,KAAK;AAC/B,cAAM,WAAW,OAAO,OAAO;AAC/B,cAAM,aAAa,OAAO,OAAO;AACjC,cAAM,kBAAkB,OAAO,OAAO;AACtC,cAAM,uBAAuB,OAAO,OAAO;AAC3C,YAAI,SAAQ,MAAM;AAElB,sBAAc,OAAO,QAAO,IAAI,MAAM,SAAS,MAAM;AAErD,qBAAa,OAAO,QAAO;AAAA;AAG7B,4BAAuB,OAAO,QAAO,KAAK;AACxC,YAAI,QAAQ,MAAM;AAGlB,cAAM,UAAU;AAEhB,cAAM,yBAAyB,OAAO,OAAO;AAC7C,YAAI,iBAAiB,MAAM;AAC3B,YAAI,WAAW;AACf,qBAAa,gBAAgB,SAAU,IAAI,KAAK;AAI9C,mBAAS,OAAO,QAAQ,IAAI;AAC5B,iBAAO,eAAe,MAAM,SAAS,KAAK;AAAA,YACxC,KAAK,WAAY;AAAE,qBAAO,MAAM,IAAI;AAAA;AAAA,YACpC,YAAY;AAAA;AAAA;AAOhB,YAAI,SAAS,KAAI,OAAO;AACxB,aAAI,OAAO,SAAS;AACpB,cAAM,MAAM,IAAI,KAAI;AAAA,UAClB,MAAM;AAAA,YACJ,SAAS;AAAA;AAAA,UAEX;AAAA;AAEF,aAAI,OAAO,SAAS;AAGpB,YAAI,MAAM,QAAQ;AAChB,2BAAiB;AAAA;AAGnB,YAAI,OAAO;AACT,cAAI,KAAK;AAGP,kBAAM,YAAY,WAAY;AAC5B,oBAAM,MAAM,UAAU;AAAA;AAAA;AAG1B,eAAI,SAAS,WAAY;AAAE,mBAAO,MAAM;AAAA;AAAA;AAAA;AAI5C,6BAAwB,OAAO,WAAW,MAAM,SAAQ,KAAK;AAC3D,YAAI,SAAS,CAAC,KAAK;AACnB,YAAI,YAAY,MAAM,SAAS,aAAa;AAG5C,YAAI,QAAO,YAAY;AACrB,cAAI,MAAM,qBAAqB,cAAe,MAAwC;AACpF,oBAAQ,MAAO,gCAAgC,YAAY,gCAAiC,KAAK,KAAK;AAAA;AAExG,gBAAM,qBAAqB,aAAa;AAAA;AAI1C,YAAI,CAAC,UAAU,CAAC,KAAK;AACnB,cAAI,cAAc,eAAe,WAAW,KAAK,MAAM,GAAG;AAC1D,cAAI,aAAa,KAAK,KAAK,SAAS;AACpC,gBAAM,YAAY,WAAY;AAC5B,gBAAK,MAAwC;AAC3C,kBAAI,cAAc,aAAa;AAC7B,wBAAQ,KACL,yBAA0B,aAAa,yDAA4D,KAAK,KAAK,OAAQ;AAAA;AAAA;AAI5H,iBAAI,IAAI,aAAa,YAAY,QAAO;AAAA;AAAA;AAI5C,YAAI,QAAQ,QAAO,UAAU,iBAAiB,OAAO,WAAW;AAEhE,gBAAO,gBAAgB,SAAU,UAAU,KAAK;AAC9C,cAAI,iBAAiB,YAAY;AACjC,2BAAiB,OAAO,gBAAgB,UAAU;AAAA;AAGpD,gBAAO,cAAc,SAAU,QAAQ,KAAK;AAC1C,cAAI,OAAO,OAAO,OAAO,MAAM,YAAY;AAC3C,cAAI,UAAU,OAAO,WAAW;AAChC,yBAAe,OAAO,MAAM,SAAS;AAAA;AAGvC,gBAAO,cAAc,SAAU,QAAQ,KAAK;AAC1C,cAAI,iBAAiB,YAAY;AACjC,yBAAe,OAAO,gBAAgB,QAAQ;AAAA;AAGhD,gBAAO,aAAa,SAAU,OAAO,KAAK;AACxC,wBAAc,OAAO,WAAW,KAAK,OAAO,MAAM,OAAO;AAAA;AAAA;AAQ7D,gCAA2B,OAAO,WAAW,MAAM;AACjD,YAAI,cAAc,cAAc;AAEhC,YAAI,QAAQ;AAAA,UACV,UAAU,cAAc,MAAM,WAAW,SAAU,OAAO,UAAU,UAAU;AAC5E,gBAAI,OAAO,iBAAiB,OAAO,UAAU;AAC7C,gBAAI,UAAU,KAAK;AACnB,gBAAI,UAAU,KAAK;AACnB,gBAAI,OAAO,KAAK;AAEhB,gBAAI,CAAC,WAAW,CAAC,QAAQ,MAAM;AAC7B,qBAAO,YAAY;AACnB,kBAA+C,CAAC,MAAM,SAAS,OAAO;AACpE,wBAAQ,MAAO,uCAAwC,KAAK,OAAQ,oBAAoB;AACxF;AAAA;AAAA;AAIJ,mBAAO,MAAM,SAAS,MAAM;AAAA;AAAA,UAG9B,QAAQ,cAAc,MAAM,SAAS,SAAU,OAAO,UAAU,UAAU;AACxE,gBAAI,OAAO,iBAAiB,OAAO,UAAU;AAC7C,gBAAI,UAAU,KAAK;AACnB,gBAAI,UAAU,KAAK;AACnB,gBAAI,OAAO,KAAK;AAEhB,gBAAI,CAAC,WAAW,CAAC,QAAQ,MAAM;AAC7B,qBAAO,YAAY;AACnB,kBAA+C,CAAC,MAAM,WAAW,OAAO;AACtE,wBAAQ,MAAO,yCAA0C,KAAK,OAAQ,oBAAoB;AAC1F;AAAA;AAAA;AAIJ,kBAAM,OAAO,MAAM,SAAS;AAAA;AAAA;AAMhC,eAAO,iBAAiB,OAAO;AAAA,UAC7B,SAAS;AAAA,YACP,KAAK,cACD,WAAY;AAAE,qBAAO,MAAM;AAAA,gBAC3B,WAAY;AAAE,qBAAO,iBAAiB,OAAO;AAAA;AAAA;AAAA,UAEnD,OAAO;AAAA,YACL,KAAK,WAAY;AAAE,qBAAO,eAAe,MAAM,OAAO;AAAA;AAAA;AAAA;AAI1D,eAAO;AAAA;AAGT,gCAA2B,OAAO,WAAW;AAC3C,YAAI,CAAC,MAAM,uBAAuB,YAAY;AAC5C,cAAI,eAAe;AACnB,cAAI,WAAW,UAAU;AACzB,iBAAO,KAAK,MAAM,SAAS,QAAQ,SAAU,MAAM;AAEjD,gBAAI,KAAK,MAAM,GAAG,cAAc,WAAW;AAAE;AAAA;AAG7C,gBAAI,YAAY,KAAK,MAAM;AAK3B,mBAAO,eAAe,cAAc,WAAW;AAAA,cAC7C,KAAK,WAAY;AAAE,uBAAO,MAAM,QAAQ;AAAA;AAAA,cACxC,YAAY;AAAA;AAAA;AAGhB,gBAAM,uBAAuB,aAAa;AAAA;AAG5C,eAAO,MAAM,uBAAuB;AAAA;AAGtC,gCAA2B,OAAO,MAAM,SAAS,OAAO;AACtD,YAAI,QAAQ,MAAM,WAAW,SAAU,OAAM,WAAW,QAAQ;AAChE,cAAM,KAAK,gCAAiC,SAAS;AACnD,kBAAQ,KAAK,OAAO,MAAM,OAAO;AAAA;AAAA;AAIrC,8BAAyB,OAAO,MAAM,SAAS,OAAO;AACpD,YAAI,QAAQ,MAAM,SAAS,SAAU,OAAM,SAAS,QAAQ;AAC5D,cAAM,KAAK,8BAA+B,SAAS;AACjD,cAAI,MAAM,QAAQ,KAAK,OAAO;AAAA,YAC5B,UAAU,MAAM;AAAA,YAChB,QAAQ,MAAM;AAAA,YACd,SAAS,MAAM;AAAA,YACf,OAAO,MAAM;AAAA,YACb,aAAa,MAAM;AAAA,YACnB,WAAW,MAAM;AAAA,aAChB;AACH,cAAI,CAAC,UAAU,MAAM;AACnB,kBAAM,QAAQ,QAAQ;AAAA;AAExB,cAAI,MAAM,cAAc;AACtB,mBAAO,IAAI,MAAM,SAAU,KAAK;AAC9B,oBAAM,aAAa,KAAK,cAAc;AACtC,oBAAM;AAAA;AAAA,iBAEH;AACL,mBAAO;AAAA;AAAA;AAAA;AAKb,8BAAyB,OAAO,MAAM,WAAW,OAAO;AACtD,YAAI,MAAM,gBAAgB,OAAO;AAC/B,cAAK,MAAwC;AAC3C,oBAAQ,MAAO,kCAAkC;AAAA;AAEnD;AAAA;AAEF,cAAM,gBAAgB,QAAQ,uBAAwB,QAAO;AAC3D,iBAAO,UACL,MAAM,OACN,MAAM,SACN,OAAM,OACN,OAAM;AAAA;AAAA;AAKZ,gCAA2B,OAAO;AAChC,cAAM,IAAI,OAAO,WAAY;AAAE,iBAAO,KAAK,MAAM;AAAA,WAAW,WAAY;AACtE,cAAK,MAAwC;AAC3C,mBAAO,MAAM,aAAa;AAAA;AAAA,WAE3B,CAAE,MAAM,MAAM,MAAM;AAAA;AAGzB,8BAAyB,QAAO,MAAM;AACpC,eAAO,KAAK,OAAO,SAAU,QAAO,KAAK;AAAE,iBAAO,OAAM;AAAA,WAAS;AAAA;AAGnE,gCAA2B,MAAM,SAAS,SAAS;AACjD,YAAI,SAAS,SAAS,KAAK,MAAM;AAC/B,oBAAU;AACV,oBAAU;AACV,iBAAO,KAAK;AAAA;AAGd,YAAK,MAAwC;AAC3C,iBAAO,OAAO,SAAS,UAAW,2CAA4C,OAAO,OAAQ;AAAA;AAG/F,eAAO,CAAE,MAAY,SAAkB;AAAA;AAGzC,uBAAkB,MAAM;AACtB,YAAI,QAAO,SAAS,MAAK;AACvB,cAAK,MAAwC;AAC3C,oBAAQ,MACN;AAAA;AAGJ;AAAA;AAEF,eAAM;AACN,mBAAW;AAAA;AASb,UAAI,WAAW,mBAAmB,SAAU,WAAW,QAAQ;AAC7D,YAAI,MAAM;AACV,YAA+C,CAAC,WAAW,SAAS;AAClE,kBAAQ,MAAM;AAAA;AAEhB,qBAAa,QAAQ,QAAQ,SAAU,KAAK;AAC1C,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,IAAI;AAEd,cAAI,OAAO,uBAAwB;AACjC,gBAAI,SAAQ,KAAK,OAAO;AACxB,gBAAI,WAAU,KAAK,OAAO;AAC1B,gBAAI,WAAW;AACb,kBAAI,UAAS,qBAAqB,KAAK,QAAQ,YAAY;AAC3D,kBAAI,CAAC,SAAQ;AACX;AAAA;AAEF,uBAAQ,QAAO,QAAQ;AACvB,yBAAU,QAAO,QAAQ;AAAA;AAE3B,mBAAO,OAAO,QAAQ,aAClB,IAAI,KAAK,MAAM,QAAO,YACtB,OAAM;AAAA;AAGZ,cAAI,KAAK,OAAO;AAAA;AAElB,eAAO;AAAA;AAST,UAAI,eAAe,mBAAmB,SAAU,WAAW,YAAW;AACpE,YAAI,MAAM;AACV,YAA+C,CAAC,WAAW,aAAY;AACrE,kBAAQ,MAAM;AAAA;AAEhB,qBAAa,YAAW,QAAQ,SAAU,KAAK;AAC7C,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,IAAI;AAEd,cAAI,OAAO,0BAA2B;AACpC,gBAAI,OAAO,IAAI,MAAM,UAAU;AAC/B,mBAAQ;AAAQ,mBAAM,OAAQ,UAAW;AAGzC,gBAAI,SAAS,KAAK,OAAO;AACzB,gBAAI,WAAW;AACb,kBAAI,UAAS,qBAAqB,KAAK,QAAQ,gBAAgB;AAC/D,kBAAI,CAAC,SAAQ;AACX;AAAA;AAEF,uBAAS,QAAO,QAAQ;AAAA;AAE1B,mBAAO,OAAO,QAAQ,aAClB,IAAI,MAAM,MAAM,CAAC,QAAQ,OAAO,SAChC,OAAO,MAAM,KAAK,QAAQ,CAAC,KAAK,OAAO;AAAA;AAAA;AAG/C,eAAO;AAAA;AAST,UAAI,aAAa,mBAAmB,SAAU,WAAW,UAAS;AAChE,YAAI,MAAM;AACV,YAA+C,CAAC,WAAW,WAAU;AACnE,kBAAQ,MAAM;AAAA;AAEhB,qBAAa,UAAS,QAAQ,SAAU,KAAK;AAC3C,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,IAAI;AAGd,gBAAM,YAAY;AAClB,cAAI,OAAO,wBAAyB;AAClC,gBAAI,aAAa,CAAC,qBAAqB,KAAK,QAAQ,cAAc,YAAY;AAC5E;AAAA;AAEF,gBAA+C,CAAE,QAAO,KAAK,OAAO,UAAU;AAC5E,sBAAQ,MAAO,4BAA4B;AAC3C;AAAA;AAEF,mBAAO,KAAK,OAAO,QAAQ;AAAA;AAG7B,cAAI,KAAK,OAAO;AAAA;AAElB,eAAO;AAAA;AAST,UAAI,aAAa,mBAAmB,SAAU,WAAW,UAAS;AAChE,YAAI,MAAM;AACV,YAA+C,CAAC,WAAW,WAAU;AACnE,kBAAQ,MAAM;AAAA;AAEhB,qBAAa,UAAS,QAAQ,SAAU,KAAK;AAC3C,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,IAAI;AAEd,cAAI,OAAO,wBAAyB;AAClC,gBAAI,OAAO,IAAI,MAAM,UAAU;AAC/B,mBAAQ;AAAQ,mBAAM,OAAQ,UAAW;AAGzC,gBAAI,WAAW,KAAK,OAAO;AAC3B,gBAAI,WAAW;AACb,kBAAI,UAAS,qBAAqB,KAAK,QAAQ,cAAc;AAC7D,kBAAI,CAAC,SAAQ;AACX;AAAA;AAEF,yBAAW,QAAO,QAAQ;AAAA;AAE5B,mBAAO,OAAO,QAAQ,aAClB,IAAI,MAAM,MAAM,CAAC,UAAU,OAAO,SAClC,SAAS,MAAM,KAAK,QAAQ,CAAC,KAAK,OAAO;AAAA;AAAA;AAGjD,eAAO;AAAA;AAQT,UAAI,0BAA0B,SAAU,WAAW;AAAE,eAAQ;AAAA,UAC3D,UAAU,SAAS,KAAK,MAAM;AAAA,UAC9B,YAAY,WAAW,KAAK,MAAM;AAAA,UAClC,cAAc,aAAa,KAAK,MAAM;AAAA,UACtC,YAAY,WAAW,KAAK,MAAM;AAAA;AAAA;AAUpC,4BAAuB,KAAK;AAC1B,YAAI,CAAC,WAAW,MAAM;AACpB,iBAAO;AAAA;AAET,eAAO,MAAM,QAAQ,OACjB,IAAI,IAAI,SAAU,KAAK;AAAE,iBAAQ,CAAE,KAAU,KAAK;AAAA,aAClD,OAAO,KAAK,KAAK,IAAI,SAAU,KAAK;AAAE,iBAAQ,CAAE,KAAU,KAAK,IAAI;AAAA;AAAA;AAQzE,0BAAqB,KAAK;AACxB,eAAO,MAAM,QAAQ,QAAQ,SAAS;AAAA;AAQxC,kCAA6B,IAAI;AAC/B,eAAO,SAAU,WAAW,KAAK;AAC/B,cAAI,OAAO,cAAc,UAAU;AACjC,kBAAM;AACN,wBAAY;AAAA,qBACH,UAAU,OAAO,UAAU,SAAS,OAAO,KAAK;AACzD,yBAAa;AAAA;AAEf,iBAAO,GAAG,WAAW;AAAA;AAAA;AAWzB,oCAA+B,OAAO,QAAQ,WAAW;AACvD,YAAI,UAAS,MAAM,qBAAqB;AACxC,YAA+C,CAAC,SAAQ;AACtD,kBAAQ,MAAO,0CAA0C,SAAS,SAAS;AAAA;AAE7E,eAAO;AAAA;AAKT,4BAAuB,KAAK;AAC1B,YAAK,QAAQ;AAAS,gBAAM;AAC5B,YAAI,YAAY,IAAI;AAAW,YAAK,cAAc;AAAS,sBAAY;AACvE,YAAI,SAAS,IAAI;AAAQ,YAAK,WAAW;AAAS,mBAAS,SAAU,UAAU,aAAa,YAAY;AAAE,mBAAO;AAAA;AACjH,YAAI,cAAc,IAAI;AAAa,YAAK,gBAAgB;AAAS,wBAAc,SAAU,QAAO;AAAE,mBAAO;AAAA;AACzG,YAAI,sBAAsB,IAAI;AAAqB,YAAK,wBAAwB;AAAS,gCAAsB,SAAU,KAAK;AAAE,mBAAO;AAAA;AACvI,YAAI,eAAe,IAAI;AAAc,YAAK,iBAAiB;AAAS,yBAAe,SAAU,QAAQ,QAAO;AAAE,mBAAO;AAAA;AACrH,YAAI,oBAAoB,IAAI;AAAmB,YAAK,sBAAsB;AAAS,8BAAoB,SAAU,KAAK;AAAE,mBAAO;AAAA;AAC/H,YAAI,eAAe,IAAI;AAAc,YAAK,iBAAiB;AAAS,yBAAe;AACnF,YAAI,aAAa,IAAI;AAAY,YAAK,eAAe;AAAS,uBAAa;AAC3E,YAAI,SAAS,IAAI;AAAQ,YAAK,WAAW;AAAS,mBAAS;AAE3D,eAAO,SAAU,OAAO;AACtB,cAAI,YAAY,SAAS,MAAM;AAE/B,cAAI,OAAO,WAAW,aAAa;AACjC;AAAA;AAGF,cAAI,cAAc;AAChB,kBAAM,UAAU,SAAU,UAAU,QAAO;AACzC,kBAAI,YAAY,SAAS;AAEzB,kBAAI,OAAO,UAAU,WAAW,YAAY;AAC1C,oBAAI,gBAAgB;AACpB,oBAAI,oBAAoB,oBAAoB;AAC5C,oBAAI,WAAU,cAAe,SAAS,OAAQ;AAE9C,6BAAa,QAAQ,UAAS;AAC9B,uBAAO,IAAI,iBAAiB,qCAAqC,YAAY;AAC7E,uBAAO,IAAI,eAAe,qCAAqC;AAC/D,uBAAO,IAAI,iBAAiB,qCAAqC,YAAY;AAC7E,2BAAW;AAAA;AAGb,0BAAY;AAAA;AAAA;AAIhB,cAAI,YAAY;AACd,kBAAM,gBAAgB,SAAU,QAAQ,QAAO;AAC7C,kBAAI,aAAa,QAAQ,SAAQ;AAC/B,oBAAI,gBAAgB;AACpB,oBAAI,kBAAkB,kBAAkB;AACxC,oBAAI,WAAU,YAAa,OAAO,OAAQ;AAE1C,6BAAa,QAAQ,UAAS;AAC9B,uBAAO,IAAI,aAAa,qCAAqC;AAC7D,2BAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAOrB,4BAAuB,QAAQ,UAAS,WAAW;AACjD,YAAI,gBAAe,YACf,OAAO,iBACP,OAAO;AAGX,YAAI;AACF,wBAAa,KAAK,QAAQ;AAAA,iBACnB,GAAP;AACA,iBAAO,IAAI;AAAA;AAAA;AAIf,0BAAqB,QAAQ;AAC3B,YAAI;AACF,iBAAO;AAAA,iBACA,GAAP;AACA,iBAAO,IAAI;AAAA;AAAA;AAIf,kCAA6B;AAC3B,YAAI,OAAO,IAAI;AACf,eAAQ,QAAS,IAAI,KAAK,YAAY,KAAM,MAAO,IAAI,KAAK,cAAc,KAAM,MAAO,IAAI,KAAK,cAAc,KAAM,MAAO,IAAI,KAAK,mBAAmB;AAAA;AAGzJ,sBAAiB,KAAK,OAAO;AAC3B,eAAQ,IAAI,MAAM,QAAQ,GAAI,KAAK;AAAA;AAGrC,mBAAc,KAAK,WAAW;AAC5B,eAAO,OAAO,KAAK,YAAY,IAAI,WAAW,UAAU;AAAA;AAG1D,UAAI,YAAY;AAAA,QACd;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAGF,aAAO,UAAU;AAAA;AAAA;;;AC/hCjB,MAAM,iBAAiB;AAAA,IACrB,MAAM;AAAA,IACN,OAAO;AACL,aAAO;AAAA,QACL,QAAQ;AAAA;AAAA;AAAA,IAIZ,SAAS;AAAA,MACP,mBAAmB,aAAY;AAC7B,gBAAQ,IAAI;AAAA;AAAA;AAAA;AAMlB,MAAI,iBAAiB,WAAW;AAC9B,QAAI,MAAM;AACV,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI,MAAM,MAAM;AACzB,WAAO,GACL,eACA,CAAE,aAAa,uCACf;AAAA,MACE,GACE,OACA,CAAE,aAAa,iBACf;AAAA,QACE,GACE,SACA;AAAA,UACE,GACE,SACA,CAAE,OAAO,CAAE,MAAM,QACjB;AAAA,YACE,GACE,OACA,CAAE,aAAa,gBACf;AAAA,cACE,GACE,SACA;AAAA,gBACE,GACE,SACA,CAAE,OAAO,CAAE,MAAM,QACjB;AAAA,kBACE,GACE,SACA;AAAA,oBACE,GAAG,SAAS;AAAA,sBACV,GACE,MACA;AAAA,wBACE,aAAa;AAAA,0BACX,OAAO;AAAA,0BACP,eAAe;AAAA,0BACf,kBAAkB;AAAA;AAAA,yBAGtB;AAAA,wBACE,IAAI,GACF,uBACE,IAAI,GACF,IAAI,OAAO,QAAQ,iBAErB;AAAA;AAAA;AAAA,qBAMZ;AAAA,kBAEF,IAAI,GAAG;AAAA,kBACP,GACE,SACA;AAAA,oBACE,GAAG,SAAS;AAAA,sBACV,GACE,MACA,CAAE,aAAa,CAAE,OAAO,WACxB;AAAA,wBACE,IAAI,GACF,uBACE,IAAI,GACF,IAAI,OAAO,QAAQ,cAErB;AAAA;AAAA;AAAA,qBAMZ;AAAA,mBAGJ;AAAA,gBAEF,IAAI,GAAG;AAAA,gBACP,GAAG,UAAU;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM;AAAA,oBACN,SAAS;AAAA,oBACT,cAAc;AAAA;AAAA;AAAA,gBAGlB,IAAI,GAAG;AAAA,gBACP,GAAG;AAAA,iBAEL;AAAA,eAGJ;AAAA,YAEF,IAAI,GAAG;AAAA,YACP,GAAG,MAAM;AAAA,cACP,aAAa,CAAE,QAAQ,SAAS,gBAAgB;AAAA;AAAA,YAElD,IAAI,GAAG;AAAA,YACP,GACE,SACA,CAAE,aAAa,mBACf;AAAA,cACE,GACE,SACA,CAAE,aAAa,QAAQ,OAAO,CAAE,MAAM,OACtC;AAAA,gBACE,GACE,YACA;AAAA,kBACE,aAAa;AAAA,kBACb,aAAa,CAAE,OAAO;AAAA,mBAExB;AAAA,kBACE,GAAG,KAAK;AAAA,oBACN,aAAa;AAAA,oBACb,OAAO,CAAE,IAAI,OAAO,eAAe;AAAA;AAAA;AAAA,iBAK3C;AAAA,cAEF,IAAI,GAAG;AAAA,cACP,GACE,SACA,CAAE,aAAa,UACf;AAAA,gBACE,GACE,SACA;AAAA,kBACE,GACE,SACA;AAAA,oBACE,aAAa;AAAA,oBACb,OAAO,CAAE,MAAM;AAAA,qBAEjB;AAAA,oBACE,GACE,eACA;AAAA,sBACE,aAAa;AAAA,sBACb,OAAO,CAAE,IAAI,CAAE,MAAM;AAAA,uBAEvB;AAAA,sBACE,IAAI,GACF;AAAA;AAAA,qBAKR;AAAA,kBAEF,IAAI,GAAG;AAAA,kBACP,GACE,SACA;AAAA,oBACE,aAAa;AAAA,oBACb,OAAO,CAAE,MAAM;AAAA,qBAEjB;AAAA,oBACE,IAAI,GACF;AAAA;AAAA,mBAKR;AAAA,iBAGJ;AAAA,cAEF,IAAI,GAAG;AAAA,cACP,GACE,SACA;AAAA,gBACE,aAAa;AAAA,gBACb,OAAO,CAAE,MAAM;AAAA,iBAEjB;AAAA,gBACE,GAAG,KAAK;AAAA,kBACN,aACE;AAAA,kBACF,OAAO,CAAE,eAAe;AAAA;AAAA;AAAA,eAKhC;AAAA,YAEF,IAAI,GAAG;AAAA,YACP,GACE,SACA,CAAE,aAAa,mBACf;AAAA,cACE,GACE,SACA,CAAE,aAAa,QAAQ,OAAO,CAAE,MAAM,OACtC;AAAA,gBACE,GACE,YACA;AAAA,kBACE,aAAa;AAAA,kBACb,aAAa,CAAE,OAAO;AAAA,mBAExB;AAAA,kBACE,GAAG,KAAK;AAAA,oBACN,aAAa;AAAA,oBACb,OAAO,CAAE,IAAI,OAAO,eAAe;AAAA;AAAA;AAAA,iBAK3C;AAAA,cAEF,IAAI,GAAG;AAAA,cACP,GACE,SACA,CAAE,aAAa,UACf;AAAA,gBACE,GACE,SACA;AAAA,kBACE,GACE,SACA;AAAA,oBACE,aAAa;AAAA,oBACb,OAAO,CAAE,MAAM;AAAA,qBAEjB;AAAA,oBACE,GACE,eACA;AAAA,sBACE,aAAa;AAAA,sBACb,OAAO;AAAA,wBACL,IAAI,CAAE,MAAM;AAAA;AAAA,uBAGhB;AAAA,sBACE,IAAI,GACF;AAAA;AAAA,qBAKR;AAAA,kBAEF,IAAI,GAAG;AAAA,kBACP,GACE,SACA;AAAA,oBACE,aAAa;AAAA,oBACb,OAAO,CAAE,MAAM;AAAA,qBAEjB;AAAA,oBACE,IAAI,GACF;AAAA;AAAA,mBAKR;AAAA,iBAGJ;AAAA,cAEF,IAAI,GAAG;AAAA,cACP,GACE,SACA;AAAA,gBACE,aAAa;AAAA,gBACb,OAAO,CAAE,MAAM;AAAA,iBAEjB;AAAA,gBACE,GAAG,KAAK;AAAA,kBACN,aACE;AAAA,kBACF,OAAO,CAAE,eAAe;AAAA;AAAA;AAAA,eAKhC;AAAA,aAGJ;AAAA,WAGJ;AAAA,SAGJ;AAAA;AAAA;AAKR,MAAI,0BAA0B;AAC9B,iBAAe,gBAAgB;AAG7B,MAAM,wBAAwB,SAAU,QAAQ;AAC9C,QAAI,CAAC;AAAQ;AACb,WAAO,qBAAqB,CAAE,QAAQ,y1DAAy1D,KAAK,CAAC,WAAU,GAAE,WAAU,CAAC,6DAA4D,SAAQ,IAAG,YAAW,6wBAA4wB,QAAO,eAAc,kBAAioiQ,OAAO;AAAA;AAI90V,MAAM,mBAAmB;AAEzB,MAAM,4BAA4B;AAElC,MAAM,iCAAiC;AAEvC,6BACE,UAAU,OAAO,QACjB,OAAO,YAAY,kBAAkB,YACrC,gBAAgB,mBAAmB,sBACnC;AACA,UAAM,YAAa,QAAO,WAAW,aAAa,OAAO,UAAU,WAAW;AAG9E,cnB,QAAI,CAAC,UAAU,QAAQ;AACrB,gBAAU,SAAS,SAAS;AAC5B,gBAAU,kBAAkB,SAAS;AACrC,gBAAU,YAAY;AAEtB,UAAI;AAAY,kBAAU,aAAa;AAAA;AAGzC,cAAU,WAAW;AAErB,QAAI,MAAM;AACR,UAAI;AACJ,UAAI,OAAO;AAET,eAAO,SAAS,SAAS;AAEvB,oBACE,WACC,KAAK,UAAU,KAAK,OAAO,cAC3B,KAAK,UAAU,KAAK,OAAO,UAAU,KAAK,OAAO,OAAO;AAE3D,cAAI,CAAC,WAAW,OAAO,wBAAwB,aAAa;AAC1D,sBAAU;AAAA;AAGZ,cAAI,OAAO;AACT,kBAAM,KAAK,MAAM,kBAAkB;AAAA;AAGrC,cAAI,WAAW,QAAQ,uBAAuB;AAC5C,oBAAQ,sBAAsB,IAAI;AAAA;AAAA;AAKtC,kBAAU,eAAe;AAAA,iBAElB,OAAO;AACd,eAAO,aACH,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,qBAAqB,SAAS,KAAK,MAAM,SAAS;AAAA,YAErE,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,eAAe;AAAA;AAAA;AAIxC,UAAI,SAAS,QAAW;AACtB,YAAI,UAAU,YAAY;AAExB,gBAAM,iBAAiB,UAAU;AACjC,oBAAU,SAAS,kCAAkC,GAAG,SAAS;AAC/D,iBAAK,KAAK;AACV,mBAAO,eAAe,GAAG;AAAA;AAAA,eAEtB;AAEL,gBAAM,WAAW,UAAU;AAC3B,oBAAU,eAAe,WAAW,GAAG,OAAO,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAKvE,WAAO;AAAA;AAGT,qCAAmC;AACjC,UAAM,SAAS,wBAAwB,UAAW,yBAAwB,SAAS;AACnF,UAAM,UACJ,OAAO,cAAc,eACrB,gBAAgB,KAAK,UAAU,UAAU;AAE3C,WAAO,kBAAkB,IAAI,KAAK;AAChC,UAAI,SAAS,cAAc,6BAA6B,KAAK;AAAO;AAEpE,YAAM,QAAQ,UAAU,IAAI,SAAS,YAAY;AACjD,YAAM,QAAQ,OAAO,UAAW,QAAO,SAAS,CAAE,KAAK,IAAI,OAAO,IAAI,SAAS;AAE/E,UAAI,CAAC,MAAM,IAAI,SAAS,KAAK;AAC3B,YAAI,OAAO,IAAI;AACf,YAAI,QAAQ,MAAM,IAAI;AAEtB,cAAM,IAAI,KAAK;AAEf,YAAI,OAAkB;AAGpB,kBAAQ,qBAAqB,IAAI,IAAI,QAAQ,KAAK;AAElD,kBACE,yDACA,KAAK,SAAS,mBAAmB,KAAK,UAAU,IAAI,UACpD;AAAA;AAGJ,YAAI,SAAS;AACX,gBAAM,UAAU,MAAM,WAAW,SAAS,cAAc,sBAAsB,QAAQ;AAAA;AAGxF,YAAI,CAAC,MAAM,SAAS;AAClB,gBAAM,OAAO,SAAS,QAAQ,SAAS,qBAAqB,QAAQ;AACpE,gBAAM,KAAK,MAAM,UAAU,SAAS,cAAc;AAClD,aAAG,OAAO;AAEV,cAAI,IAAI;AAAO,eAAG,aAAa,SAAS,IAAI;AAC5C,cAAI,SAAS;AACX,eAAG,aAAa,cAAc;AAC9B,eAAG,aAAa,mBAAmB;AAAA;AAGrC,eAAK,YAAY;AAAA;AAGnB,YAAI,SAAS;AACX,kBAAQ,SAAS,MAAM,QAAQ,aAAa;AAC5C,gBAAM,QAAQ,aAAa,mBAAmB,QAAQ;AAAA;AAGxD,YAAI,MAAM,QAAQ,YAAY;AAC5B,gBAAM,MAAM,KAAK;AACjB,gBAAM,QAAQ,WAAW,UAAU,MAAM,MACtC,OAAO,SACP,KAAK;AAAA,eACH;AACL,gBAAM,WAAW,SAAS,eAAe;AACzC,gBAAM,QAAQ,MAAM,QAAQ;AAC5B,cAAI,MAAM;AAAQ,kBAAM,QAAQ,YAAY,MAAM;AAClD,cAAI,MAAM;AAAQ,kBAAM,QAAQ,aAAa,UAAU,MAAM;AAAA;AACxD,kBAAM,QAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAWvC,MAAM,oBAAiC,kCACrC,CAAE,QAAQ,gBAAgB,iBAAiB,0BAC3C,uBACA,gBACA,kBACA,gCACA,2BACA,OACA,yBACA,QACA;AAGF,MAAO,kBAAQ;;;AC1qBjB,MAAO,gBAAQ;AAAA,IACX,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,qBAAqB;AAAA;;;ACJzB,MAAO,oBAAQ;AAAA,IACX,YAAY,QAAO,KAAK;AACpB,aAAM,UAAU;AAAA;AAAA,IAEpB,4BAA4B,QAAO,SAAS;AACxC,aAAM,iBAAiB;AAAA;AAAA,IAE3B,+BAA+B,QAAO,OAAO;AACzC,aAAM,kBAAkB;AAAA;AAAA,IAE5B,yBAAyB,QAAO,eAAe;AAC3C,aAAM,sBAAsB;AAAA;AAAA;;;ACX7B,MAAM,MAAM,CAAC,CAAE,QAAQ,OAAO,IAAI,SAAS,UAC9C,IAAI,QAAQ,CAAC,SAAS,WAClB,OAAO,KAAK;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU,CAAC,CAAE,uBAAc,QAAQ;AAAA,IACnC,OAAO;AAAA;AAIZ,MAAM,aAAa,CAAC,CAAE,kBACzB,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAYL,MAAM,0BAA0B,CAAC,oBACpC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAcL,MAAM,oBAAoB,CAAC;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,QAEJ,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIL,MAAM,mBAAmB,CAAC;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,QAEJ,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAaL,MAAM,qBAAqB,CAAC,CAAE,sBACjC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAKL,MAAM,gCAAgC,CAAC,CAAE,sBAC5C,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,mBAAmB,CAAC,CAAE,sBAC/B,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,iBAAiB,CAAC;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,QAEJ,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIL,MAAM,sBAAsB,CAAC,CAAE,iBAAiB,QACnD,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,uBAAuB,CAAC,CAAE,kBACnC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,yBAAyB,CAAC,CAAE,uBAAuB,aAC5D,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA;AAAA;AAIL,MAAM,yBAAyB,CAAC,CAAE,2BACrC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,4BAA4B,CAAC,CAAE,kBACxC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,8BAA8B,CAAC,CAAE,oBAC1C,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,0BAA0B,CAAC,CAAE,kBACtC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,2BAA2B,CAAC;AAAA,IACjC;AAAA,IACA;AAAA,QAEJ,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA;AAAA;AAIL,MAAM,iBAAiB,CAAC,qBAC3B,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,wBAAwB,CAAC,qBAClC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,oBAAoB,CAAC,CAAE,cAAc,mBAC9C,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA;AAAA;AAsBL,MAAM,4BAA4B,CAAC,CAAE,uBACxC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,yBAAyB,CAAC;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,QAEJ,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIL,MAAM,oBAAoB,MAC7B,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA;AAqBP,MAAM,4BAA4B,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,MAAM;AAAA,QAEV,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAYL,MAAM,yBAAyB,CAAC,CAAE,sBACzC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAID,MAAM,6BAA6B,CAAC,CAAE,mBAC7C,IAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAKD,MAAM,2BAA2B,CAAC,SACzC,IAAI;AAAA,IACA,QAAQ;AAAA,IACR;AAAA;;;ACjWG,MAAM,OAAM,CAAC,CAAE,QAAQ,OAAO,IAAI,SAAO,UAC5C,IAAI,QAAQ,CAAC,SAAS,WAClB,OAAO,KAAK,CAAE,QAAQ,MAAM,QAAQ,UAAU;AA+B/C,MAAM,qBAAqB,CAAC;AAAA,IAC3B,iBAAiB;AAAA,IACjB,qBAAqB;AAAA,IACrB,mBAAmB;AAAA,QAEvB,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAwCtB,MAAM,uBAAuB,CAAC;AAAA,IAC7B,iBAAiB;AAAA,QAErB,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAYtB,MAAM,kBAAkB,CAAC,kBAC5B,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA,oBAAoB;AAAA;AAAA,KAEzB,KAAK,CAAC,CAAE,uBAAc;AActB,MAAM,4BAA4B,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAEtB,MAAM,6BAA6B,CAAC;AAAA,IACnC;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAetB,MAAM,6BAA6B,CAAC;AAAA,IACnC;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAEtB,MAAM,uBAAuB,CAAC;AAAA,IAC7B;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAEtB,MAAM,eAAe,CAAC;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEJ,QAAQ;AAAA,IACR,gBAAgB;AAAA,KACjB,KAAK,CAAC,CAAE,uBAAc;AACtB,MAAM,2BAA2B,CAAC;AAAA,IACjC;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAEtB,MAAM,8BAA8B,CAAC;AAAA,IACpC;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AACtB,MAAM,iBAAiB,CAAC;AAAA,IACvB;AAAA,IACA;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AACtB,MAAM,iCAAiC,CAAC;AAAA,IACvC;AAAA,QAEJ,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;AAEtB,MAAM,qCAAqC,CAAC;AAAA,IAC3C;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,aAAa;AAAA,QAEjB,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,KAEL,KAAK,CAAC,CAAE,uBAAc;;;AClP7B,MAAO,kBAAQ;AAAA,IACX,aAAa,CAAE,SAAU,aAAa;AAClC,iBAAW,CAAE,cAAc,cAAe,KAAK,YAAU;AACrD,YAAI,QAAQ;AACR,iBAAO,eAAe;AAAA;AAAA;AAAA;AAAA,IAKlC,2BAA2B,CAAE,SAAU,aAAa;AAChD,2BAAqB,CAAE,gBAAgB,cAAe,KAAK,YAAU;AACjE,YAAI,QAAQ;AACR,iBAAO,+BAA+B;AAAA;AAAA;AAAA;AAAA,IAIlD,8BAA8B,CAAE,SAAU,aAAa;AACnD,kCAA4B,CAAE,gBAAgB,cAAe,KAAK,YAAU;AACxE,YAAI,QAAQ;AACR,iBAAO,kCAAkC;AAAA;AAAA;AAAA;AAAA,IAIrD,0BAA0B,CAAE,SAAU,cAAc;AAChD,8BAAwB,CAAE,iBAAiB,eAAgB,KAAK,YAAU;AACtE,YAAI,QAAQ;AACR,gBAAM;AACN,kBAAQ,IAAI,KAAK,UAAU;AAC3B,iBAAO,4BAA4B;AAAA;AAAA;AAAA;AAAA;;;AC9CnD,MAAO,kBAAQ;AAAA,IACX,SAAS,YAAS,OAAM;AAAA,IACxB,gBAAgB,YAAS,OAAM;AAAA,IAC/B,iBAAiB,YAAS,OAAM;AAAA,IAChC,qBAAqB,YAAS,OAAM;AAAA;;;ACCxC,MAAO,mBAAQ;AAAA,IAEX,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;;;ACXG,MAAM,OAAM,CAAC,CAAE,QAAQ,OAAO,IAAI,SAAS,UAC9C,IAAI,QAAQ,CAAC,SAAS,WAClB,OAAO,KAAK;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU,CAAC,CAAE,uBAAc,QAAQ;AAAA,IACnC,OAAO;AAAA;AAQZ,MAAM,4BAA4B,CAAC;AAAA,IAClC,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,QAEf,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEJ,QAAO;AAAA;AAMR,MAAM,oBAAoB,MAC7B,KAAI;AAAA,IACA,QAAQ;AAAA;AAGT,MAAM,qBAAqB,CAAC,iBAC/B,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AAIL,MAAM,gBAAgB,MACzB,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA;AAgbP,MAAM,uBAAuB,CAAC,YACjC,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;AA+ML,MAAM,kBAAkB,CAAC,SAC5B,KAAI;AAAA,IACA,QAAQ;AAAA,IACR;AAAA;AAqBD,MAAM,mBAAmB,CAAC,CAAE,aAC/B,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA;AAAA;;;ACltBL,MAAM,OAAM,CAAC,CAAE,QAAQ,OAAO,IAAI,SAAO,UAC5C,IAAI,QAAQ,CAAC,SAAS,WAClB,OAAO,KAAK,CAAE,QAAQ,MAAM,QAAQ,UAAU;AAI/C,MAAM,4BAA4B,CAAC;AAAA,IACtC;AAAA,IAAU;AAAA,QAEd,KAAI;AAAA,IACA,QAAQ;AAAA,IACR,MAAM;AAAA,MACF;AAAA,MAAU;AAAA;AAAA,KAEf,KAAK,CAAC,CAAE,uBAAc;;;AC6MzB,MAAM,kBAAiB;AAAA,IACnB,MAAM;AAAA,IACN,OAAO;AAAA,MACH,gBAAgB;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAEd,gBAAgB;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAEd,aAAa;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA;AAAA,IAGlB,OAAO;AACH,aAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,gBAAgB;AAAA,QAChB,mBAAmB;AAAA,QACnB,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,uBAAuB;AAAA,QACvB,iBAAiB;AAAA,QACjB,gBAAe;AAAA,QACf,gBAAe;AAAA,UACX;AAAA,UAA+B;AAAA,UAAkB;AAAA,UAA0B;AAAA,UAAoB;AAAA,UAAqB;AAAA,UACpH;AAAA,UAAgB;AAAA,UAAkB;AAAA,UAAsB;AAAA,UAAW;AAAA,UAAgB;AAAA,UAA0B;AAAA,UAAwB;AAAA,UACrI;AAAA,UAAc;AAAA,UAAO;AAAA,UAAc;AAAA,UAAU;AAAA,UAAsB;AAAA,UAAe;AAAA,UAAqC;AAAA,UACvH;AAAA,UAA6B;AAAA,UAAoB;AAAA,UAAoB;AAAA,UAAc;AAAA,UAAwB;AAAA,UAAa;AAAA,UAAa;AAAA,UACrI;AAAA,UAAe;AAAA,UAAW;AAAA,UAA4B;AAAA,UAAiB;AAAA,UAAmC;AAAA,UAAyB;AAAA,UACnI;AAAA,UAAmC;AAAA,UAAwB;AAAA,UAAY;AAAA,UAAsB;AAAA,UAA+B;AAAA,UAC5H;AAAA,UAAsB;AAAA,UAA+B;AAAA,UAAsC;AAAA,UAA2B;AAAA,UACtH;AAAA,UAAqB;AAAA,UAAqB;AAAA,UAAyB;AAAA,UAAQ;AAAA,UAAkB;AAAA,UAAsB;AAAA,UAAwB;AAAA,UAC3I;AAAA,UAAsB;AAAA,UAAgB;AAAA,UAAY;AAAA,UAAwB;AAAA,UAAc;AAAA,UAAU;AAAA,UAAa;AAAA,UAC/G;AAAA,UAA4B;AAAA,UAAW;AAAA,UAAW;AAAA,UAAmB;AAAA,UAAyB;AAAA,UAAO;AAAA,UAAW;AAAA,UAAqB;AAAA,UACrI;AAAA,UAA4B;AAAA,UAAkC;AAAA,UAAa;AAAA,UAAY;AAAA,UAAc;AAAA,UACrG;AAAA,UAA0B;AAAA,UAA0B;AAAA,UAAyB;AAAA,UAAsB;AAAA,UAAkC;AAAA,UACrI;AAAA,UAAmB;AAAA,UAAsB;AAAA,UAAiB;AAAA,UAAoB;AAAA,UAAW;AAAA,UAAgB;AAAA,UAAyB;AAAA,UAClI;AAAA,UAAiB;AAAA,UAA6B;AAAA,UAAoD;AAAA,UAClG;AAAA;AAAA;AAAA;AAAA,IAIZ,SAAS;AAAA,MAER,+BAA+B;AAC5B,YAAI,KAAK;AACT,YAAI,iBAAiB,OAAO,GAAG,KAAK,aAAa;AAAA,UAC7C,IAAI;AAAA,YACJ,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS;AAAA,YACT,aAAa,GAAG;AAAA,YAEhB,UAAU,WAAW;AACjB,kBAAI,KAAK,OAAO;AACZ,wBAAQ,IAAI,KAAK;AAAA;AAAA;AAAA;AAAA,UAKzB,QAAQ,KAAK,MAAM;AAAA,UACnB,cAAc;AAAA;AAGlB,uBAAe,aAAa;AAC5B,UAAE,eACG,KAAK,oBACL,YAAY;AAAA;AAAA,MAEjB,gBAAe;AAEV,mCAA2B;AAAA,UACxB,eAAe,KAAK;AAAA,WACrB,KAAK,CAAC,SAAS;AACd,eAAK;AACH,iBAAO,WAAW;AAAA,YAChB,SAAS;AAAA,YACT,WAAW;AAAA,aACZ;AAAA;AAAA;AAAA,MAGX,eAAe,gBAAe;AAC1B,+BAAuB;AAAA,UACnB,kBAAkB,eAAe;AAAA,WAClC,KAAK,CAAC,SAAS;AACd,eAAK;AACH,iBAAO,WAAW;AAAA,YAChB,SAAS;AAAA,YACT,WAAW;AAAA,aACZ;AAAA;AAAA;AAAA,MAGX,iBAAiB,MAAM;AACnB,YAAI;AACJ,YAAI,UAAS;AAGb,YAAI,SAAS;AAAA,UAAC;AAAA,YACN,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,SAAS;AAAA,YACT,MAAM;AAAA,YACN,cAAc;AAAA,YACd,SAAS,SAAS,YAAY,CAAE,eAAe,GAAG,UAAU,GAAG,cAAc,MAAK,YAAY,CAAC,UAAU,QAAO,mBAAoB,CAAE,eAAe,GAAG,UAAU,GAAG,cAAc,MAAK,YAAY,CAAC,UAAU,QAAO;AAAA,YACtN,UAAU,SAAS,GAAG;AAClB,kBAAI,UAAS;AACb,sBAAO,eAAe,QAAQ,SAAQ;AAAA;AAAA;AAAA,UAG9C;AAAA,YACI,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,MAAM;AAAA,YACN,cAAc;AAAA,YACd,UAAU,SAAS,GAAG;AAClB,kBAAI,UAAS;AACb,sBAAO,eAAe,QAAQ,SAAQ;AAAA;AAAA;AAAA,UAI9C;AAAA,YACI,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,cAAc;AAAA;AAAA,UAGlB;AAAA,YACI,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,cAAc;AAAA;AAAA,UAGlB;AAAA,YACI,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,cAAc;AAAA;AAAA,UAGlB;AAAA,YACI,OAAO;AAAA,YACP,WAAW;AAAA,YACX,WAAW;AAAA,YACX,cAAc;AAAA;AAAA;AAItB,iBAAS,IAAI,OAAO,GAAG,OAAO;AAAA,UAC1B,OAAO;AAAA,UACP,QAAQ;AAAA,YAAC;AAAA,cACD,OAAO;AAAA,cACP,WAAW;AAAA,cACX,SAAS;AAAA,cACT,WAAW;AAAA;AAAA,YAEf;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS,QAAO;AAAA,cAChB,SAAS,QAAO;AAAA,cAChB,sBAAsB;AAAA,cACtB,YAAY;AAAA,cACZ,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,WAAW;AAAA,cACX,WAAW;AAAA,cACX,OAAO;AAAA,cACP,iBAAiB;AAAA,cACjB,eAAe;AAAA,cACf,MAAM;AAAA,cACN,MAAM;AAAA,cACN;AAAA;AAAA,YAEJ;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,cAAc;AAAA;AAAA;AAAA,UAItB,sBAAsB;AAAA,UACtB,gBAAgB,CAAC,WAAW;AAExB,mBAAO,WAAW;AAAA,cACd,cAAc;AAAA;AAGlB,gBAAI,cAAc;AAClB,mBAAO,UAAU,QAAQ,CAAC,MAAM,UAAU;AACtC,eAAC,KAAK,OAAO,cAAc,IAAI,cAAc;AAAA;AAG7C,gBAAI,CAAC,aAAa;AAEZ,qCAAuB;AAAA,gBACb,OAAO,OAAO;AAAA,gBACd,WAAW,OAAO,aAAa;AAAA,gBAC/B,eAAe,QAAO;AAAA,gBACtB,SAAS,QAAO;AAAA,iBACjB,KAAK,OAAK;AAGT,oBAAI,EAAE,SAAS,GAAG;AACd,0BAAO;AAAA;AAEX,uBAAO,SAAS;AAAA,kBACZ,OAAO,GAAG;AAAA,kBACV,WAAW;AAAA,kBACX,SAAS,GAAG;AAAA;AAGhB,uBAAO,WAAW;AAAA,kBACd,cAAc;AAAA;AAAA,iBAGnB,MAAM,MAAM;AACP,uBAAO,WAAW;AAAA,kBACd,cAAc;AAAA;AAAA;AAAA,mBAIjC;AAED,qBAAO,WAAW;AAAA,gBACd,cAAc;AAAA;AAGlB,qBAAO,SAAS;AAAA,gBACA,OAAO,GAAG;AAAA,gBACV,WAAW;AAAA,gBACX,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA,UASxC,wBAAwB;AAAA,UACxB,mBAAmB;AACf,mBAAO;AAAA;AAAA;AAGf,eAAO,YAAY,aAAa,GAAG,WAAW,MAAM;AAChD,gBAAM;AAAA;AAQV,eAAO;AACP,eAAO,SAAS,KAAK,kBAAkB,IAAI,SAAS;AACpD,eAAO,SAAS,KAAK,kBAAkB,IAAI,eAAe;AAC1D,eAAO,SAAS,KAAK,kBAAkB,IAAI,YAAY;AACvD,eAAO,SAAS,KAAK,kBAAkB,IAAI,YAAY;AAEvD,UAAE,iBAAiB,MAAM;AAAA,UACrB,UAAU;AAAA,UACV,UAAU;AAAA;AAAA;AAAA,MAIlB,eAAe,QAAQ,SAAQ,SAAQ;AACnC,cAAM,OAAO,OAAO,OAAO,GAAG,QAAQ;AACtC,YAAI,QAAQ;AACZ,cAAM,WAAW,KAAK,IAAI,CAAC,WAAU;AACjC,gBAAM,CAAE,WAAW,KAAK,YAAa;AAGrC,iBAAO,aAAa,0BAA0B;AAAA,YAC1C;AAAA,YACA,UAAU,QAAO;AAAA,YACjB,SAAQ,QAAO;AAAA,aAChB,KAAK,SAAO;AACX,gBAAG,OAAO,UAAU,cAAa;AAC7B,wCAA0B;AAAA,gBACtB;AAAA,gBACA,WAAW,OAAO,UAAU;AAAA,iBAC7B,KAAK,WAAO;AACX,wBAAQ,IAAI;AACZ,oBAAG,SAAS,MAAM,SAAO,GAAE;AACvB,yBAAM,QAAQ,MAAM,GAAG;AAAA,uBAEvB;AACJ,yBAAM,QAAQ;AAAA;AAAA;AAAA;AAItB,gBAAI,IAAI,SAAS,WAAW;AACxB,kBAAI,QAAQ,IAAI;AAChB,kBAAI,SAAS,KAAK,KAAM,QAAQ;AAChC,qBAAM,OAAO;AACb,qBAAM,SAAS;AACf,sBAAQ,QAAQ;AAChB,qBAAM,QAAQ,IAAI;AAClB,qBAAO,WAAW;AAAA,gBACd;AAAA;AAGJ,kBAAI,IAAI,YAAY,QAAQ,YAAW,MAAM;AACzC,uBAAO,SAAS;AAAA,kBACZ,OAAO,GAAG;AAAA,kBACV,SAAS,GAAG;AAAA,kBACZ,gBAAgB;AAAA;AAAA;AAAA,uBAKjB,IAAI,SAAS,SAAS;AAC7B,kBAAI,QAAQ,IAAI;AAChB,kBAAI,SAAS,KAAK,KAAM,QAAU,KAAI,qBAAsB;AAC5D,qBAAM,OAAO;AACb,qBAAM,SAAS;AACf,sBAAQ,QAAQ;AAChB,qBAAM,QAAQ,qBAA2B,QAAU,KAAI,mBAAoB,YAAa;AACxF,qBAAO,WAAW;AAAA,gBACd;AAAA;AAAA,uBAEG,IAAI,SAAS,aAAa;AACjC,kBAAI,QAAQ,IAAI;AAChB,kBAAI,SAAS,KAAK,KAAM,QAAQ;AAChC,qBAAM,OAAO;AACb,qBAAM,SAAS;AACf,sBAAQ,QAAQ;AAChB,qBAAM,QAAQ,iBAAsB,SAAS;AAC7C,qBAAO,WAAW;AAAA,gBACd;AAAA;AAAA,uBAGG,IAAI,SAAS,sBAAsB;AAC1C,kBAAI,QAAQ,IAAI;AAChB,kBAAI,SAAS,KAAK,KAAM,QAAQ;AAChC,qBAAM,OAAO;AACb,qBAAM,SAAS;AACf,sBAAQ,QAAQ;AAChB,qBAAM,QAAQ,0BAA+B,SAAS;AACtD,qBAAO,WAAW;AAAA,gBACd;AAAA;AAAA,uBAEG,IAAI,SAAS,kBAAkB;AACtC,kBAAI,QAAQ,IAAI;AAChB,kBAAI,SAAS,KAAK,KAAM,QAAU,KAAI,qBAAsB;AAC5D,qBAAM,OAAO;AACb,qBAAM,SAAS;AACf,sBAAQ,QAAQ;AAChB,qBAAM,QAAQ,sBAA4B,QAAU,KAAI,mBAAoB,YAAa;AACzF,qBAAO,WAAW;AAAA,gBACd;AAAA;AAAA;AAAA;AAAA;AAKhB,gBAAQ,IAAI,UAAU,KAAK,MAAM;AAC7B,iBAAO;AAAA;AAAA;AAAA,MAIf,0BAA0B,gBAAgB;AAAA;AAAA,MAC1C,iBAAiB,gBAAgB;AAC7B,yBAAiB,CAAE,kBAAkB,eAAe,SAAU,KAAK,OAAK;AACpE,eAAK;AAAA;AAAA;AAAA,MAGb,YAAY,gBAAgB;AACxB,YAAI,UAAS;AACb,YAAI,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,UAC9B,OAAO,yBAAyB,QAAO;AAAA,UACvC,QAAQ;AAAA,YAAC;AAAA,cACD,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cACT,SAAS,GAAG,QAAO,gBAAgB,QAAO;AAAA,cAC1C,UAAU;AAAA;AAAA,YAEd;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cACT,SAAS,eAAe;AAAA,cACxB,UAAU;AAAA,cACV,SAAS,CAAE,UAAU,QAAO,gBAAgB,QAAQ,CAAC,UAAU,CAAC,aAAa;AAAA;AAAA,YAUjF;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cAET,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA,cACN,SAAS,KAAK,MAAM,KAAK,OAAO,SAAS,IAAI,cAAc;AAAA;AAAA,YAE/D;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA,cACN,SAAS,eAAe;AAAA;AAAA,YAE5B;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cACT,SAAS;AAAA;AAAA;AAAA,UAGjB,sBAAsB;AAAA,UACtB,eAAe,QAAQ;AAEnB,gBAAI,OAAO,OAAO,cAAc,OAAO;AACvC,uBAAW,OAAO,oBAAoB,WAAW,OAAO,eAAe,OAAO,MAAM,uDAAuD,UACvI,iBAAiB;AAAA,cACb,SAAS,OAAO;AAAA,cAChB,SAAS;AAAA,cACT,QAAQ,OAAO;AAAA,cACf,eAAe,OAAO;AAAA,cACtB,iBAAiB,OAAO;AAAA,cACxB,cAAc,OAAO;AAAA,cAErB,iBAAiB,OAAO;AAAA,eACzB,KAAK,OAAK;AACT,sBAAO,MAAM;AACb,qBAAO,WAAW;AAAA,gBACd,SAAS;AAAA,gBACT,WAAW;AAAA,iBACZ;AACH,sBAAO;AAAA;AAEf,mBAAO;AAAA;AAAA,UAEX,wBAAwB;AAAA,UACxB,mBAAmB;AACf,mBAAO;AAAA;AAAA;AAGf,eAAO,YAAY,mBAAmB,GAAG,WAAW,MAAM;AAGtD,cAAI,OAAO,UAAU,mBAAmB,OAAO,UAAU,mBAAmB;AACxE,gBAAI,OAAO,UAAU,sBAAsB,OAAO,UAAU,gBAAgB;AACxE,qBAAO,WAAW,CAAE,eAAe,OAAO,UAAU,qBAAqB,OAAO,UAAU;AAAA,mBACvF;AACH,kBAAI,OAAO,OAAO,UAAU,qBAAqB,OAAO,UAAU;AAClE,qBAAO,kBAAkB,KAAK,YAAY;AAC1C,qBAAO,SAAS,yDAAyD,KAAK,QAAQ;AAAA;AAAA;AAAA;AAIlG,eAAO,kBAAkB,KAAK,YAAY;AAC1C,eAAO,YAAY,eAAe,GAAG,WAAW,MAAM;AAClD,iBAAO,kBAAkB,KAAK,YAAY,OAAO,UAAU,mBAAmB,OAAO,UAAU;AAAA;AAEnG,eAAO,YAAY,kBAAkB,GAAG,WAAW,MAAM;AACrD,iBAAO,kBAAkB,KAAK,YAAY,OAAO,UAAU,mBAAmB,OAAO,UAAU;AAAA;AAEnG,eAAO;AAAA;AAAA,MAEX,WAAW,KAAK;AACZ,cAAM,KAAK;AACX,YAAI,OAAO,GAAG,mBAAmB;AAAA,UAC7B,SAAS;AAAA,UACT,SAAS,IAAI;AAAA,UACb,WAAW,UAAU;AACjB,+BAAmB,CAAE,kBAAkB,IAAI,SAAU,KAAK,OAAK;AAC3D,qBAAO,WAAW;AAAA,gBACd,SAAS;AAAA,gBACT,WAAW;AAAA,iBACZ;AAAA;AAEP,eAAG;AAAA;AAAA;AAAA;AAAA,MAIf,8BAA8B;AAC1B,aAAK,oBAAoB;AACzB,YAAG,KAAK,mBAAmB,IAAG;AAC1B,oCAA0B;AAAA,YACtB,cAAc,KAAK;AAAA,aACpB,KAAK,CAAC,SAAS;AACd,iBAAK,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,IAazC,OAAO;AAAA,MACH,eAAe,QAAO;AAClB,6BAAqB,QAAO,KAAK,SAAO;AACxC,cAAI,QAAQ,MAAM;AACd,iBAAK,wBAAwB;AAAA;AAAA;AAIjC,aAAK;AAAA;AAAA;AAAA,IAIb,UAAU;AAYN,UAAI,KAAK,kBAAkB,IAAI;AAC3B,6BAAqB,KAAK,gBAAgB,KAAK,SAAO;AACtD,cAAI,QAAQ,MAAM;AACd,iBAAK,wBAAwB;AAAA;AAAA;AAAA;AAMrC,WAAK;AACL,0BAAoB,KAAK,OAAK;AAC1B,UAAE,IAAI,eAAa;AACf,eAAK,WAAW,KAAK,UAAU;AAC/B,kBAAQ,IAAI,KAAK;AAAA;AAAA;AAAA;AAAA,IAK7B,UAAS;AACL,WAAK;AAAA;AAAA,IAET,SAAS;AAAA,MAEL,WAAW,MAAM;AACb,YAAI,mBAAmB,IAAI,KAAK;AAChC,eAAO,iBAAiB,gBAAgB,MAAO,kBAAiB,aAAa,KAAK,MAAM,iBAAiB,YAAY,MACjH,iBAAiB,aAAa,MAAM,iBAAiB,eAAe,MAAM,iBAAiB;AAAA;AAAA,MAEnG,MAAM,QAAO;AACT,eAAO,OAAM;AAAA;AAAA,MAEjB,iBAAiB,GAAG;AAChB,YAAI,GAAG;AACH,iBAAO,EAAE,WAAW,QAAQ,yBAAyB;AAAA;AAEzD,eAAO;AAAA;AAAA;AAAA;AAMnB,MAAI,kBAAiB,WAAW;AAC9B,QAAI,MAAM;AACV,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI,MAAM,MAAM;AACzB,WAAO,GACL,OACA;AAAA,MACE,CAAC,IAAI,wBACD,GACE,SACA,CAAE,aAAa,CAAE,cAAc,UAC/B;AAAA,QACE,GACE,SACA;AAAA,UACE,GAAG,WAAW,CAAE,OAAO,CAAE,SAAS,UAAU,MAAM,MAAQ;AAAA,YACxD,IAAI,GACF;AAAA;AAAA,WAIN;AAAA,SAGJ,KAEF,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,GACE,SACA;AAAA,QACE,GAAG,SAAS,CAAE,OAAO,CAAE,IAAI,OAAS;AAAA,UAClC,GAAG,OAAO,IAAI;AAAA,YACZ,GAAG,OAAO,CAAE,aAAa,CAAE,OAAO,UAAY;AAAA,cAC5C,GAAG,OAAO;AAAA,gBACR,KAAK;AAAA,gBACL,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,QAKrB,IAAI,GAAG;AAAA,QACP,GAAG,SAAS,CAAE,OAAO,CAAE,IAAI,OAAS;AAAA,UAClC,GACE,OACA;AAAA,YACE,aAAa,CAAE,SAAS,QAAQ,mBAAmB;AAAA,aAErD;AAAA,YACE,GACE,kBACA;AAAA,cACE,aAAa,CAAE,gBAAgB,QAAQ,cAAc;AAAA,eAEvD;AAAA,cACE,IAAI,wBACA,GAAG,OAAO,CAAE,aAAa,cAAe;AAAA,gBACtC,GACE,UACA;AAAA,kBACE,aAAa;AAAA,kBACb,OAAO;AAAA,oBACL,MAAM;AAAA,oBACN,eAAe;AAAA,oBACf,iBAAiB;AAAA,oBACjB,iBAAiB;AAAA;AAAA,mBAGrB;AAAA,kBACE,IAAI,GACF;AAAA;AAAA,gBAIN,IAAI,GAAG;AAAA,gBACP,GAAG,OAAO,CAAE,aAAa,kBAAmB;AAAA,kBAC1C,GACE,KACA;AAAA,oBACE,aAAa;AAAA,oBACb,OAAO,CAAE,MAAM;AAAA,oBACf,IAAI;AAAA,sBACF,OAAO,SAAS,QAAQ;AACtB,+BAAO,IAAI,iBAAiB;AAAA;AAAA;AAAA,qBAIlC,CAAC,IAAI,GAAG;AAAA,kBAEV,IAAI,GAAG;AAAA,kBACP,GACE,KACA;AAAA,oBACE,aAAa;AAAA,oBACb,OAAO,CAAE,MAAM;AAAA,oBACf,IAAI;AAAA,sBACF,OAAO,SAAS,QAAQ;AACtB,+BAAO,IAAI,iBAAiB;AAAA;AAAA;AAAA,qBAIlC,CAAC,IAAI,GAAG;AAAA;AAAA,mBAId,IAAI;AAAA,cACR,IAAI,GAAG;AAAA,cACP,GACE,YACA;AAAA,gBACE,aAAa,CAAE,gBAAgB;AAAA,gBAC/B,OAAO,CAAE,MAAM,MAAM,SAAS;AAAA,gBAC9B,IAAI,CAAE,OAAO,IAAI;AAAA,iBAEnB,CAAC,IAAI,GAAG;AAAA,cAEV,IAAI,GAAG;AAAA,cACP,GACE,SACA;AAAA,gBACE,OAAO,CAAE,SAAS,WAAW,MAAM;AAAA,gBACnC,IAAI,CAAE,OAAO,IAAI;AAAA,iBAEnB,CAAC,IAAI,GAAG;AAAA,eAGZ;AAAA,aAGJ;AAAA;AAAA,SAIN;AAAA,MAEF,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,gBAAgB,SAClC,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,SACA,CAAE,aAAa,6CACf;AAAA,YACE,GAAG,SAAS;AAAA,cACV,GAAG;AAAA,cACH,GAAG,MAAM;AAAA,gBACP,GAAG,MAAM,CAAE,OAAO,CAAE,SAAS,OAAS;AAAA,kBACpC,IAAI,GACF,qBACE,IAAI,GACF,IAAI,kBAAkB,gBAAgB,UACpC,KAEJ;AAAA;AAAA;AAAA,cAIR,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA,YAEnB,IAAI,GAAG;AAAA,YACP,IAAI,GAAG,IAAI,kBAAkB,iBAAiB,SAC5C,gBACA;AACA,qBAAO,GAAG,MAAM,CAAE,KAAK,eAAe,OAAQ;AAAA,gBAC5C,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,cAAc,eAAe;AAAA;AAAA;AAAA,gBAK5C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,UAAU;AAAA,sBACR,WAAW,IAAI,GAAG,eAAe;AAAA;AAAA;AAAA;AAAA,gBAIvC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA,gBAE/B,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA,gBAE3C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,kBACnD,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,eAAe,OAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,aAS9C;AAAA;AAAA,SAIN,KAEF,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,mBAAmB,SACrC,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,SACA,CAAE,aAAa,6CACf;AAAA,YACE,GAAG,SAAS;AAAA,cACV,GAAG;AAAA,cACH,GAAG,MAAM;AAAA,gBACP,GAAG,MAAM,CAAE,OAAO,CAAE,SAAS,OAAS;AAAA,kBACpC,IAAI,GACF,wBACE,IAAI,GACF,IAAI,kBAAkB,mBACnB,UAAU;AAAA;AAAA;AAAA,cAKvB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA,YAEnB,IAAI,GAAG;AAAA,YACP,IAAI,GAAG,IAAI,kBAAkB,oBAAoB,SAC/C,gBACA;AACA,qBAAO,GAAG,MAAM,CAAE,KAAK,eAAe,OAAQ;AAAA,gBAC5C,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,cAAc,eAAe;AAAA;AAAA;AAAA,gBAK5C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,UAAU;AAAA,sBACR,WAAW,IAAI,GAAG,eAAe;AAAA;AAAA;AAAA;AAAA,gBAIvC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA,gBAE/B,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA,gBAE3C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,kBACnD,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,eAAe,OAAO,QAAQ;AAAA;AAAA;AAAA,gBAMxC,IAAI,GAAG;AAAA,gBACP,GACE,MACA;AAAA,kBACE,GACE,cACA;AAAA,oBACE,OAAO;AAAA,sBACL,MAAM;AAAA,sBACN,SAAS;AAAA;AAAA,qBAGb;AAAA,oBACE,eAAe,mBACf,yCACI,GACE,SACA;AAAA,sBACE,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,MAAM;AAAA;AAAA,sBAER,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,WACT;AAAA;AAAA;AAAA,uBAKR,CAAC,IAAI,GAAG,0BAEV,IAAI;AAAA,oBACR,IAAI,GAAG;AAAA,oBACP,eAAe,WAAW,YACtB,GACE,mBACA;AAAA,sBACE,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,MAAM;AAAA;AAAA,sBAER,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,YACT;AAAA;AAAA;AAAA,uBAKR,CAAC,IAAI,GAAG,oBAEV,IAAI;AAAA,oBACR,IAAI,GAAG;AAAA,oBACP,eAAe,WAAW,YACtB,GACE,mBACA;AAAA,sBACE,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,MAAM;AAAA;AAAA,sBAER,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,eACT;AAAA;AAAA;AAAA,uBAKR,CAAC,IAAI,GAAG,sBAEV,IAAI;AAAA,oBACR,IAAI,GAAG;AAAA,oBACP,eAAe,WAAW,UACtB,GACE,mBACA;AAAA,sBACE,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,MAAM;AAAA;AAAA,sBAER,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,iBACT;AAAA;AAAA;AAAA,uBAKR,CAAC,IAAI,GAAG,cAEV,IAAI;AAAA,qBAEV;AAAA,mBAGJ;AAAA;AAAA;AAAA,aAKR;AAAA;AAAA,SAIN,KAEF,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,mBAAmB,SACrC,GAAG,SAAS,CAAE,aAAa,QAAS;AAAA,QAClC,GAAG,KAAK;AAAA,UACN,IAAI,GACF,WACE,IAAI,GACF,IAAI,kBAAkB,mBACnB,IAAI,SAAS,MAAM;AAClB,mBAAO,KAAK,OAAO,QAAQ;AAAA,aAE5B,OAAO,SAAS,YAAY,GAAG;AAC9B,mBAAO,WAAW,cAAc,WAAW;AAAA,aAC1C,MAEP;AAAA;AAAA,WAIR,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,0BAA0B,UAChD,IAAI,kBAAkB,6BAA6B,SAC/C,GAAG,KAAK;AAAA,QACN,GACE,KACA,CAAE,aAAa,CAAE,cAAc,SAAS,OAAO,aAC/C,CAAC,IAAI,GAAG;AAAA,WAGZ,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,0BAA0B,SAC5C,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,SACA,CAAE,aAAa,6CACf;AAAA,YACE,GAAG,SAAS;AAAA,cACV,GAAG;AAAA,cACH,GAAG,MAAM;AAAA,gBACP,GAAG,MAAM,CAAE,OAAO,CAAE,SAAS,OAAS;AAAA,kBACpC,IAAI,GACF,wBACE,IAAI,GACF,IAAI,kBAAkB,0BACnB,UAAU,KAEf;AAAA;AAAA;AAAA,cAIR,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA,YAEnB,IAAI,GAAG;AAAA,YACP,IAAI,GACF,IAAI,kBAAkB,2BACtB,SAAS,gBAAgB;AACvB,qBAAO,GAAG,MAAM,CAAE,KAAK,eAAe,OAAQ;AAAA,gBAC5C,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,cAAc,eAAe;AAAA;AAAA;AAAA,gBAK5C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,UAAU;AAAA,sBACR,WAAW,IAAI,GAAG,eAAe;AAAA;AAAA;AAAA;AAAA,gBAIvC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA,gBAE/B,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA;AAAA,gBAGjC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,kBACnD,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,eAAe,OAAO,QAAQ;AAAA;AAAA;AAAA,gBAMxC,IAAI,GAAG;AAAA,gBACP,GACE,MACA;AAAA,kBACE,GACE,cACA;AAAA,oBACE,OAAO;AAAA,sBACL,MAAM;AAAA,sBACN,SAAS;AAAA;AAAA,qBAGb;AAAA,oBACE,eAAe,WAAW,YACtB,GACE,mBACA;AAAA,sBACE,OAAO;AAAA,wBACL,SAAS;AAAA,wBACT,MAAM;AAAA;AAAA,sBAER,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,eACT;AAAA;AAAA;AAAA,uBAKR,CAAC,IAAI,GAAG,sBAEV,IAAI;AAAA,oBACR,IAAI,GAAG;AAAA,oBACP,GACE,mBACA,CAAE,OAAO,CAAE,SAAS,aACpB;AAAA,sBACE,IAAI,GAAG;AAAA,sBACP,GAAG,QAAQ;AAAA,wBACT,UAAU;AAAA,0BACR,WAAW,IAAI,GACb,eAAe;AAAA;AAAA;AAAA;AAAA,qBAO3B;AAAA,mBAGJ;AAAA;AAAA;AAAA,aAMV;AAAA;AAAA,SAIN,KAEF,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,0BAA0B,SAC5C,GAAG,SAAS,CAAE,aAAa,QAAS;AAAA,QAClC,GAAG,KAAK;AAAA,UACN,IAAI,GACF,WACE,IAAI,GACF,IAAI,kBAAkB,0BACnB,IAAI,SAAS,MAAM;AAClB,mBAAO,KAAK,OAAO,QAAQ;AAAA,aAE5B,OAAO,SAAS,YAAY,GAAG;AAC9B,mBAAO,WAAW,cAAc,WAAW;AAAA,aAC1C,MAEP;AAAA;AAAA,WAIR,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,6BAA6B,SAC/C,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,SACA,CAAE,aAAa,6CACf;AAAA,YACE,GAAG,SAAS;AAAA,cACV,GAAG;AAAA,cACH,GAAG,MAAM;AAAA,gBACP,GAAG,MAAM,CAAE,OAAO,CAAE,SAAS,OAAS;AAAA,kBACpC,IAAI,GACF,qBACE,IAAI,GACF,IAAI,kBACD,6BAA6B,UAAU;AAAA;AAAA;AAAA,cAKpD,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA,YAEnB,IAAI,GAAG;AAAA,YACP,IAAI,GACF,IAAI,kBAAkB,8BACtB,SAAS,gBAAgB;AACvB,qBAAO,GAAG,MAAM,CAAE,KAAK,eAAe,OAAQ;AAAA,gBAC5C,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,cAAc,eAAe;AAAA;AAAA;AAAA,gBAK5C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,UAAU;AAAA,sBACR,WAAW,IAAI,GAAG,eAAe;AAAA;AAAA;AAAA;AAAA,gBAIvC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA,gBAE/B,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GAAG,IAAI,GAAG,eAAe;AAAA;AAAA;AAAA,gBAGjC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,kBACnD,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,eAAe,OAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,aAUhD;AAAA;AAAA,SAIN,KAEF,IAAI;AAAA,MACR,IAAI,GAAG;AAAA,MACP,IAAI,kBAAkB,6BAA6B,SAC/C,GAAG,SAAS,CAAE,aAAa,QAAS;AAAA,QAClC,GAAG,KAAK;AAAA,UACN,IAAI,GACF,WACE,IAAI,GACF,IAAI,kBAAkB,6BACnB,IAAI,SAAS,MAAM;AAClB,mBAAO,KAAK,OAAO,QAAQ;AAAA,aAE5B,OAAO,SAAS,YAAY,GAAG;AAC9B,mBAAO,WAAW,cAAc,WAAW;AAAA,aAC1C,MAEP;AAAA;AAAA,WAIR,IAAI;AAAA,OAEV;AAAA;AAGJ,MAAI,2BAA0B;AAC9B,kBAAe,gBAAgB;AAG7B,MAAM,yBAAwB;AAE9B,MAAM,oBAAmB;AAEzB,MAAM,6BAA4B;AAElC,MAAM,kCAAiC;AAEvC,8BACE,UAAU,OAAO,QACjB,OAAO,YAAY,kBAAkB,YACrC,gBAAgB,mBAAmB,sBACnC;AACA,UAAM,YAAa,QAAO,WAAW,aAAa,OAAO,UAAU,WAAW;AAG9E,cnB,QAAI,CAAC,UAAU,QAAQ;AACrB,gBAAU,SAAS,SAAS;AAC5B,gBAAU,kBAAkB,SAAS;AACrC,gBAAU,YAAY;AAEtB,UAAI;AAAY,kBAAU,aAAa;AAAA;AAGzC,cAAU,WAAW;AAErB,QAAI,OAAO;AACT,UAAI;AACJ,UAAI,OAAO;AAET,eAAO,SAAS,SAAS;AAEvB,oBACE,WACC,KAAK,UAAU,KAAK,OAAO,cAC3B,KAAK,UAAU,KAAK,OAAO,UAAU,KAAK,OAAO,OAAO;AAE3D,cAAI,CAAC,WAAW,OAAO,wBAAwB,aAAa;AAC1D,sBAAU;AAAA;AAGZ,cAAI,OAAO;AACT,kBAAM,KAAK,MAAM,kBAAkB;AAAA;AAGrC,cAAI,WAAW,QAAQ,uBAAuB;AAC5C,oBAAQ,sBAAsB,IAAI;AAAA;AAAA;AAKtC,kBAAU,eAAe;AAAA,iBAElB,OAAO;AACd,eAAO,aACH,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,qBAAqB,SAAS,KAAK,MAAM,SAAS;AAAA,YAErE,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,eAAe;AAAA;AAAA;AAIxC,UAAI,SAAS,QAAW;AACtB,YAAI,UAAU,YAAY;AAExB,gBAAM,iBAAiB,UAAU;AACjC,oBAAU,SAAS,kCAAkC,GAAG,SAAS;AAC/D,iBAAK,KAAK;AACV,mBAAO,eAAe,GAAG;AAAA;AAAA,eAEtB;AAEL,gBAAM,WAAW,UAAU;AAC3B,oBAAU,eAAe,WAAW,GAAG,OAAO,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAKvE,WAAO;AAAA;AAUT,MAAM,qBAAiC,mCACrC,CAAE,QAAQ,iBAAgB,iBAAiB,2BAC3C,wBACA,iBACA,mBACA,iCACA,4BACA,OACA,QACA,QACA;AAGF,MAAO,qBAAQ;;;AChkDjB,MAAM,kBAAiB;AAAA,IACnB,MAAM;AAAA,IACN,OAAO;AAAA,MACH,gBAAgB;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAEd,gBAAgB;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAEd,aAAa;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA;AAAA,IAGlB,OAAO;AACH,aAAO;AAAA,QACH,cAAc;AAAA;AAAA;AAAA,IAGtB,SAAS;AAAA,MACL,qBAAoB;AACf,eAAO,QAAQ,uCAAuC,MAAM;AAEzD,kBAAQ,IAAI;AACZ,sBAAY,KAAK;AAAA;AAAA;AAAA,MAGzB,aAAa,aAAY;AACnB,YAAI,IAAI,OAAO,KAAK,OAAO,OAAO,aAAa,wBAChC,mBAAmB,mBAChC,WAAW,mBAAmB,YAAY,QAC1C;AAEJ,YAAI,CAAC,GAAG;AACJ,mBAAS,GAAG;AACZ;AAAA;AAAA;AAAA,MAGR,qBAAqB;AACjB,YAAI,UAAS;AACb,YAAI,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,UAC9B,OAAO,yBAAyB,QAAO;AAAA,UACvC,QAAQ;AAAA,YAAC;AAAA,cACD,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cACT,SAAS,GAAG,QAAO,gBAAgB,QAAO;AAAA,cAC1C,UAAU;AAAA;AAAA,YAEd;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cAET,SAAS,CAAE,UAAU,QAAO,gBAAgB,QAAQ,CAAC,UAAU,CAAC,aAAa;AAAA;AAAA,YAEjF;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cAET,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA,cACN,SAAQ,KAAK,MAAM,KAAK,OAAO,SAAS,IAAI,cAAc;AAAA;AAAA,YAE9D;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA;AAAA,YAEV;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cACT,SAAS;AAAA;AAAA;AAAA,UAWjB,sBAAsB;AAAA,UACtB,eAAe,QAAQ;AAEnB,oBAAQ,IAAI,KAAK,UAAU,OAAO;AAClC,gBAAI,OAAO,aAAa;AAEpB,kBAAI,OAAO,OAAO,cAAc,OAAO;AACvC,yBAAW,OAAO,oBAAoB,WAAW,OAAO,eAAe,OAAO,MAAM,uDAAuD,UACvI,iBAAiB;AAAA,gBACb,SAAS,OAAO;AAAA,gBAChB,SAAS;AAAA,gBACT,QAAQ,OAAO;AAAA,gBAEf,eAAe,OAAO;AAAA,gBACtB,iBAAiB,OAAO;AAAA,gBACxB,cAAc,OAAO;AAAA,gBAErB,iBAAgB,OAAO;AAAA,iBACxB,KAAK,OAAK;AACT,wBAAO,MAAM;AACb,uBAAO,WAAW;AAAA,kBACd,SAAS;AAAA,kBACT,WAAW;AAAA,mBACZ;AAEH,wBAAO;AAAA;AAEX,qBAAO;AAAA,mBACR;AACH,qBAAO;AACP,6BAAe;AAAA,gBACX,eAAe,QAAO;AAAA,gBACtB,QAAQ,OAAO;AAAA,gBAEf,eAAe,OAAO;AAAA,gBACtB,iBAAiB,OAAO;AAAA,gBACxB,cAAc,OAAO;AAAA,gBAEpB,iBAAgB,OAAO;AAAA,iBACzB,KAAK,OAAK;AACT,wBAAO,MAAM;AACb,uBAAO,WAAW;AAAA,kBACd,SAAS;AAAA,kBACT,WAAW;AAAA,mBACZ;AACH,wBAAO;AAAA;AAAA;AAAA;AAAA,UAInB,wBAAwB;AAAA,UACxB,mBAAmB;AACf,mBAAO;AAAA;AAAA;AAGf,eAAO,YAAY,mBAAmB,GAAG,WAAW,MAAM;AAGtD,cAAI,OAAO,UAAU,mBAAmB,OAAO,UAAU,mBAAmB;AACxE,gBAAI,OAAO,UAAU,sBAAsB,OAAO,UAAU,gBAAgB;AACxE,qBAAO,WAAW,CAAE,eAAe,OAAO,UAAU,qBAAqB,OAAO,UAAU;AAAA,mBACvF;AACH,kBAAI,OAAO,OAAO,UAAU,qBAAqB,OAAO,UAAU;AAClE,qBAAO,kBAAkB,KAAK,YAAY;AAC1C,qBAAO,SAAS,yDAAyD,KAAK,QAAQ;AAAA;AAAA,iBAEvF;AACH,mBAAO,kBAAkB,KAAK,YAAY;AAAA;AAAA;AAGlD,eAAO,kBAAkB,KAAK,YAAY;AAC1C,eAAO,YAAY,eAAe,GAAG,WAAW,MAAM;AAClD,iBAAO,kBAAkB,KAAK,YAAY,OAAO,UAAU,mBAAmB,OAAO,UAAU;AAAA;AAEnG,eAAO,YAAY,kBAAkB,GAAG,WAAW,MAAM;AACrD,iBAAO,kBAAkB,KAAK,YAAY,OAAO,UAAU,mBAAmB,OAAO,UAAU;AAAA;AAEnG,eAAO;AAAA;AAAA,MAEX,cAAc;AACV,2BAAmB;AAAA,UACf,gBAAgB,KAAK;AAAA,UACrB,oBAAoB,KAAK;AAAA,UACzB,kBAAkB,KAAK;AAAA,WACxB,KAAK,CAAC,SAAS;AACd,eAAK,eAAe;AAAA;AAAA;AAAA;AAAA,IAKhC,OAAO;AAAA,MACH,iBAAiB;AACb,aAAK;AAAA;AAAA;AAAA,IAGb,UAAU;AACN,WAAK;AAAA;AAAA,IAET,SAAS;AAAA,MAEL,WAAW,MAAM;AACb,YAAI,mBAAmB,IAAI,KAAK;AAChC,eAAO,iBAAiB,gBAAgB,MAAO,kBAAiB,aAAa,KAAK,MAAM,iBAAiB,YAAY,MACjH,iBAAiB,aAAa,MAAM,iBAAiB,eAAe,MAAM,iBAAiB;AAAA;AAAA;AAAA;AAM3G,MAAI,kBAAiB,WAAW;AAC9B,QAAI,MAAM;AACV,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI,MAAM,MAAM;AACzB,WAAO,GACL,OACA;AAAA,MACE,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,OACA;AAAA,YACE,aAAa,CAAE,SAAS,QAAQ,mBAAmB;AAAA,aAErD;AAAA,YACE,GACE,kBACA;AAAA,cACE,aAAa,CAAE,gBAAgB,QAAQ,cAAc;AAAA,eAEvD;AAAA,cACE,GACE,YACA;AAAA,gBACE,aAAa,CAAE,gBAAgB;AAAA,gBAC/B,OAAO,CAAE,MAAM,MAAM,SAAS;AAAA,gBAC9B,IAAI,CAAE,OAAO,IAAI;AAAA,iBAEnB,CAAC,IAAI,GAAG;AAAA,cAEV,IAAI,GAAG;AAAA,cACP,GACE,YACA;AAAA,gBACE,aAAa,CAAE,gBAAgB;AAAA,gBAC/B,OAAO,CAAE,MAAM,MAAM,SAAS;AAAA,gBAC9B,IAAI,CAAE,OAAO,IAAI;AAAA,iBAEnB,CAAC,IAAI,GAAG;AAAA,eAGZ;AAAA,aAGJ;AAAA;AAAA,SAIN;AAAA,MAEF,IAAI,GAAG;AAAA,MACP,GACE,SACA,CAAE,aAAa,uCACf;AAAA,QACE,IAAI,GAAG;AAAA,QACP,IAAI,GAAG;AAAA,QACP,IAAI,GAAG,IAAI,cAAc,SAAS,aAAa;AAC7C,iBAAO,GAAG,MAAM,CAAE,KAAK,YAAY,OAAQ;AAAA,YACzC,GAAG,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;AAAA,YAChD,IAAI,GAAG;AAAA,YACP,GAAG,MAAM;AAAA,cACP,GAAG,QAAQ;AAAA,gBACT,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,cAAc,YAAY;AAAA;AAAA;AAAA,YAGnD,IAAI,GAAG;AAAA,YACP,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;AAAA,YACpC,IAAI,GAAG;AAAA,YACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,cACnD,GAAG,QAAQ;AAAA,gBACT,IAAI,GAAG,IAAI,GAAG,YAAY,gBAAgB,QAAQ;AAAA;AAAA;AAAA,YAGtD,IAAI,GAAG;AAAA,YACP,GAAG,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;AAAA,YAChD,IAAI,GAAG;AAAA,YACP,GACE,MACA;AAAA,cACE,GACE,YACA;AAAA,gBACE,OAAO,CAAE,SAAS;AAAA,gBAClB,IAAI;AAAA,kBACF,OAAO,SAAS,QAAQ;AACtB,2BAAO,IAAI,aAAa;AAAA;AAAA;AAAA,iBAI9B;AAAA,gBACE,GAAG,KAAK;AAAA,kBACN,aAAa;AAAA,kBACb,OAAO,CAAE,eAAe;AAAA;AAAA,gBAE1B,IAAI,GAAG;AAAA;AAAA,eAIb;AAAA;AAAA;AAAA,SAKR;AAAA,OAGJ;AAAA;AAGJ,MAAI,2BAA0B;AAAA,IAC5B,WAAW;AACT,UAAI,MAAM;AACV,UAAI,KAAK,IAAI;AACb,UAAI,KAAK,IAAI,MAAM,MAAM;AACzB,aAAO,GAAG,SAAS;AAAA,QACjB,GAAG,MAAM;AAAA,UACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,UACjB,IAAI,GAAG;AAAA,UACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,UACjB,IAAI,GAAG;AAAA,UACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,UACjB,IAAI,GAAG;AAAA,UACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,UACjB,IAAI,GAAG;AAAA,UACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,UACjB,IAAI,GAAG;AAAA,UACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAKzB,kBAAe,gBAAgB;AAG7B,MAAM,yBAAwB;AAE9B,MAAM,oBAAmB;AAEzB,MAAM,6BAA4B;AAElC,MAAM,kCAAiC;AAEvC,8BACE,UAAU,OAAO,QACjB,OAAO,YAAY,kBAAkB,YACrC,gBAAgB,mBAAmB,sBACnC;AACA,UAAM,YAAa,QAAO,WAAW,aAAa,OAAO,UAAU,WAAW;AAG9E,cnB,QAAI,CAAC,UAAU,QAAQ;AACrB,gBAAU,SAAS,SAAS;AAC5B,gBAAU,kBAAkB,SAAS;AACrC,gBAAU,YAAY;AAEtB,UAAI;AAAY,kBAAU,aAAa;AAAA;AAGzC,cAAU,WAAW;AAErB,QAAI,OAAO;AACT,UAAI;AACJ,UAAI,OAAO;AAET,eAAO,SAAS,SAAS;AAEvB,oBACE,WACC,KAAK,UAAU,KAAK,OAAO,cAC3B,KAAK,UAAU,KAAK,OAAO,UAAU,KAAK,OAAO,OAAO;AAE3D,cAAI,CAAC,WAAW,OAAO,wBAAwB,aAAa;AAC1D,sBAAU;AAAA;AAGZ,cAAI,OAAO;AACT,kBAAM,KAAK,MAAM,kBAAkB;AAAA;AAGrC,cAAI,WAAW,QAAQ,uBAAuB;AAC5C,oBAAQ,sBAAsB,IAAI;AAAA;AAAA;AAKtC,kBAAU,eAAe;AAAA,iBAElB,OAAO;AACd,eAAO,aACH,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,qBAAqB,SAAS,KAAK,MAAM,SAAS;AAAA,YAErE,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,eAAe;AAAA;AAAA;AAIxC,UAAI,SAAS,QAAW;AACtB,YAAI,UAAU,YAAY;AAExB,gBAAM,iBAAiB,UAAU;AACjC,oBAAU,SAAS,kCAAkC,GAAG,SAAS;AAC/D,iBAAK,KAAK;AACV,mBAAO,eAAe,GAAG;AAAA;AAAA,eAEtB;AAEL,gBAAM,WAAW,UAAU;AAC3B,oBAAU,eAAe,WAAW,GAAG,OAAO,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAKvE,WAAO;AAAA;AAUT,MAAM,qBAAiC,mCACrC,CAAE,QAAQ,iBAAgB,iBAAiB,2BAC3C,wBACA,iBACA,mBACA,iCACA,4BACA,OACA,QACA,QACA;AAGF,MAAO,mBAAQ;;;AC5ejB,MAAM,kBAAiB;AAAA,IACrB,MAAM;AAAA,IACN,OAAO;AACL,aAAO;AAAA;AAAA,IAET,UAAU;AAAA;AAAA,IACV,OAAO;AAAA,MACH,SAAS;AAAA,QACH,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA;AAAA,IAIpB,SAAS;AAAA,MACP,aAAa;AACX,yBAAiB;AAAA,UACf,SAAS,KAAK;AAAA,WACb,KAAK,CAAC,SAAS;AAAA;AAAA;AAAA;AAAA;AASxB,MAAI,kBAAiB,WAAW;AAC9B,QAAI,MAAM;AACV,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI,MAAM,MAAM;AACzB,WAAO,GACL,OACA;AAAA,MACE,GACE,YACA;AAAA,QACE,aAAa;AAAA,QACb,OAAO,CAAE,SAAS;AAAA,QAClB,IAAI;AAAA,UACF,OAAO,SAAS,QAAQ;AACtB,mBAAO,IAAI;AAAA;AAAA;AAAA,SAIjB,CAAC,IAAI,GAAG;AAAA,OAGZ;AAAA;AAGJ,MAAI,2BAA0B;AAC9B,kBAAe,gBAAgB;AAG7B,MAAM,yBAAwB,SAAU,QAAQ;AAC9C,QAAI,CAAC;AAAQ;AACb,WAAO,qBAAqB,CAAE,QAAQ,0FAA0F,KAAK,CAAC,WAAU,GAAE,WAAU,IAAG,SAAQ,IAAG,YAAW,IAAG,QAAO,iBAAiB,OAAO;AAAA;AAIzN,MAAM,oBAAmB;AAEzB,MAAM,6BAA4B;AAElC,MAAM,kCAAiC;AAEvC,8BACE,UAAU,OAAO,QACjB,OAAO,YAAY,kBAAkB,YACrC,gBAAgB,mBAAmB,sBACnC;AACA,UAAM,YAAa,QAAO,WAAW,aAAa,OAAO,UAAU,WAAW;AAG9E,cAAU,SAAS;AAEnB,QAAI,CAAC,UAAU,QAAQ;AACrB,gBAAU,SAAS,SAAS;AAC5B,gBAAU,kBAAkB,SAAS;AACrC,gBAAU,YAAY;AAEtB,UAAI;AAAY,kBAAU,aAAa;AAAA;AAGzC,cAAU,WAAW;AAErB,QAAI,MAAM;AACR,UAAI;AACJ,UAAI,OAAO;AAET,eAAO,SAAS,SAAS;AAEvB,oBACE,WACC,KAAK,UAAU,KAAK,OAAO,cAC3B,KAAK,UAAU,KAAK,OAAO,UAAU,KAAK,OAAO,OAAO;AAE3D,cAAI,CAAC,WAAW,OAAO,wBAAwB,aAAa;AAC1D,sBAAU;AAAA;AAGZ,cAAI,OAAO;AACT,kBAAM,KAAK,MAAM,kBAAkB;AAAA;AAGrC,cAAI,WAAW,QAAQ,uBAAuB;AAC5C,oBAAQ,sBAAsB,IAAI;AAAA;AAAA;AAKtC,kBAAU,eAAe;AAAA,iBAElB,OAAO;AACd,eAAO,aACH,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,qBAAqB,SAAS,KAAK,MAAM,SAAS;AAAA,YAErE,SAAS,SAAS;AAChB,gBAAM,KAAK,MAAM,eAAe;AAAA;AAAA;AAIxC,UAAI,SAAS,QAAW;AACtB,YAAI,UAAU,YAAY;AAExB,gBAAM,iBAAiB,UAAU;AACjC,oBAAU,SAAS,kCAAkC,GAAG,SAAS;AAC/D,iBAAK,KAAK;AACV,mBAAO,eAAe,GAAG;AAAA;AAAA,eAEtB;AAEL,gBAAM,WAAW,UAAU;AAC3B,oBAAU,eAAe,WAAW,GAAG,OAAO,UAAU,QAAQ,CAAC;AAAA;AAAA;AAAA;AAKvE,WAAO;AAAA;AAGT,sCAAmC;AACjC,UAAM,SAAS,yBAAwB,UAAW,0BAAwB,SAAS;AACnF,UAAM,UACJ,OAAO,cAAc,eACrB,gBAAgB,KAAK,UAAU,UAAU;AAE3C,WAAO,kBAAkB,IAAI,KAAK;AAChC,UAAI,SAAS,cAAc,6BAA6B,KAAK;AAAO;AAEpE,YAAM,QAAQ,UAAU,IAAI,SAAS,YAAY;AACjD,YAAM,QAAQ,OAAO,UAAW,QAAO,SAAS,CAAE,KAAK,IAAI,OAAO,IAAI,SAAS;AAE/E,UAAI,CAAC,MAAM,IAAI,SAAS,KAAK;AAC3B,YAAI,OAAO,IAAI;AACf,YAAI,QAAQ,MAAM,IAAI;AAEtB,cAAM,IAAI,KAAK;AAEf,YAAI,OAAkB;AAGpB,kBAAQ,qBAAqB,IAAI,IAAI,QAAQ,KAAK;AAElD,kBACE,yDACA,KAAK,SAAS,mBAAmB,KAAK,UAAU,IAAI,UACpD;AAAA;AAGJ,YAAI,SAAS;AACX,gBAAM,UAAU,MAAM,WAAW,SAAS,cAAc,sBAAsB,QAAQ;AAAA;AAGxF,YAAI,CAAC,MAAM,SAAS;AAClB,gBAAM,OAAO,SAAS,QAAQ,SAAS,qBAAqB,QAAQ;AACpE,gBAAM,KAAK,MAAM,UAAU,SAAS,cAAc;AAClD,aAAG,OAAO;AAEV,cAAI,IAAI;AAAO,eAAG,aAAa,SAAS,IAAI;AAC5C,cAAI,SAAS;AACX,eAAG,aAAa,cAAc;AAC9B,eAAG,aAAa,mBAAmB;AAAA;AAGrC,eAAK,YAAY;AAAA;AAGnB,YAAI,SAAS;AACX,kBAAQ,SAAS,MAAM,QAAQ,aAAa;AAC5C,gBAAM,QAAQ,aAAa,mBAAmB,QAAQ;AAAA;AAGxD,YAAI,MAAM,QAAQ,YAAY;AAC5B,gBAAM,MAAM,KAAK;AACjB,gBAAM,QAAQ,WAAW,UAAU,MAAM,MACtC,OAAO,SACP,KAAK;AAAA,eACH;AACL,gBAAM,WAAW,SAAS,eAAe;AACzC,gBAAM,QAAQ,MAAM,QAAQ;AAC5B,cAAI,MAAM;AAAQ,kBAAM,QAAQ,YAAY,MAAM;AAClD,cAAI,MAAM;AAAQ,kBAAM,QAAQ,aAAa,UAAU,MAAM;AAAA;AACxD,kBAAM,QAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAWvC,MAAM,qBAAiC,mCACrC,CAAE,QAAQ,iBAAgB,iBAAiB,2BAC3C,wBACA,iBACA,mBACA,iCACA,4BACA,OACA,0BACA,QACA;AAGF,MAAO,mBAAQ;;;ACvIjB,MAAM,kBAAiB;AAAA,IACnB,MAAM;AAAA,IACN,OAAO;AAAA,MACH,gBAAgB;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA;AAAA;AAAA,IAGlB,OAAO;AACH,aAAO;AAAA,QACH,UAAU;AAAA;AAAA;AAAA,IAGlB,YAAW;AAAA,MACP;AAAA;AAAA,IAEJ,SAAS;AAAA,MACL,2BAA2B,aAAY;AACnC,cAAM,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,UAChC,OAAO;AAAA,UACP,QAAQ,CAAC;AAAA,YACL,OAAO;AAAA,YACP,WAAW;AAAA,YACX,SAAS;AAAA,YACT,WAAW;AAAA;AAAA,UAEf,gBAAgB,CAAC,WAAW;AACxB,qCAAyB;AAAA,cACrB,eAAe;AAAA,cAAa,gBAAgB,OAAO;AAAA,eACpD,KAAK,MAAM;AACT,qBAAO;AAAA;AAAA;AAAA;AAIpB,eAAO;AAAA;AAAA,MAEV,eAAe,aAAY;AACvB,YAAI,IAAI,OAAO,KAAK,OAAO,OAAO,aAAa,wBAC/B,mBAAmB,mBAChC,WAAW,mBAAmB,eAC9B,aAAa,mBAAmB,sCAChC;AAMJ,YAAI,CAAC,GAAG;AACJ,mBAAS,GAAG;AACZ;AAAA;AAAA;AAAA,MAGR,aAAa,aAAY;AACpB,YAAI,IAAI,OAAO,KAAK,OAAO,OAAO,aAAa,wBAC/B,mBAAmB,mBAChC,WAAW,mBAAmB,eAC9B,aAAa,mBAAmB,2BAChC;AAMJ,YAAI,CAAC,GAAG;AACJ,mBAAS,GAAG;AACZ;AAAA;AAAA;AAAA,MAGR,aAAa,aAAY;AAEnB,YAAI,IAAI,OAAO,KAAK,OAAO,OAAO,aAAa,wBAChC,mBAAmB,mBAChC,WAAW,mBAAmB,eAC9B,aAAY,mBAAmB,2BAC/B;AAEH,YAAI,IAAI,OAAO,KAAK,OAAO,OAAO,aAAa,2BAA2B;AAI3E,YAAI,CAAC,GAAG;AACJ,mBAAS,GAAG;AACZ;AAAA;AAAA;AAAA,MAIR,iBAAiB,aAAa;AAC1B,YAAI,UAAS;AACb,YAAI,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,UAC9B,OAAO,uBAAuB,YAAY;AAAA,UAC1C,QAAQ;AAAA,YAAC;AAAA,cACD,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,SAAS;AAAA,cACT,SAAS,GAAG,YAAY,OAAO,QAAQ;AAAA,cACvC,UAAU;AAAA;AAAA,YAEd;AAAA,cACI,OAAO;AAAA,cACP,WAAW;AAAA,cACX,WAAW;AAAA,cACX,MAAM;AAAA,cACN,SAAS;AAAA;AAAA;AAAA,UAGjB,sBAAsB;AAAA,UACtB,eAAe,QAAQ;AACnB,mBAAO;AACP,8BAAkB;AAAA,cACd,cAAa,YAAY;AAAA,cACzB,eAAe,WAAW,YAAY,UAAU,WAAW,OAAO;AAAA,eACnE,KAAK,OAAG;AACL,qBAAO,WAAW;AAAA,gBAChB,SAAS,wBAAwB,EAAE;AAAA,gBACnC,WAAW;AAAA,iBACZ;AAAA;AAAA;AAAA,UAGX,wBAAwB;AAAA,UACxB,mBAAmB;AACf,mBAAO;AAAA;AAAA;AAGf,eAAO;AAAA;AAAA,MAEX,mBAAmB;AACf,YAAI,KAAK,SAAS,2BAA2B,UAAU,KAAK,SAAS,yBAAyB,QAAQ;AAClG,cAAI,SAAS,KAAK,SAAS,2BAA2B,OAAO,KAAK,SAAS;AAC3E,cAAI,eAAe;AAAA,YACf,MAAM,OAAO,GAAG;AAAA;AAGpB,0BAAgB,cAAc,KAAK,CAAC,SAAS;AACzC,mBAAO,WAAW;AAAA,cACd,SAAS;AAAA,cACT,WAAW;AAAA,eACZ;AACH,iBAAK;AAAA;AAAA,eAEN;AACH,iBAAO,WAAW;AAAA,YACd,SAAS;AAAA,YACT,WAAW;AAAA,aACZ;AAAA;AAAA;AAAA,MAIX,gCAAgC;AAC5B,oCAA4B,CAAE,gBAAgB,KAAK,iBAC9C,KAAK,CAAC,SAAS;AACZ,eAAK,WAAW;AAAA;AAAA;AAAA;AAAA,IAUhC,OAAO;AAAA,MACH,iBAAiB;AAEb,aAAK;AAAA;AAAA;AAAA,IAGb,UAAU;AAEN,WAAK;AAAA;AAAA,IAET,SAAS;AAAA,MAEL,WAAW,MAAM;AACb,YAAI,mBAAmB,IAAI,KAAK;AAChC,eAAO,iBAAiB,gBAAgB,MAAO,kBAAiB,aAAa,KAAK,MAAM,iBAAiB,YAAY,MACjH,iBAAiB,aAAa,MAAM,iBAAiB,eAAe,MAAM,iBAAiB;AAAA;AAAA,MAEnG,MAAM,QAAO;AACT,eAAO,OAAM;AAAA;AAAA,MAEjB,iBAAiB,GAAG;AAChB,YAAI,GAAG;AACH,iBAAO,EAAE,WAAW,QAAQ,yBAAyB;AAAA;AAEzD,eAAO;AAAA;AAAA;AAAA;AAMnB,MAAI,kBAAiB,WAAW;AAC9B,QAAI,MAAM;AACV,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI,MAAM,MAAM;AACzB,WAAO,GACL,OACA;AAAA,MACE,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,OACA;AAAA,YACE,aAAa;AAAA,cACX,SAAS;AAAA,cACT,mBAAmB;AAAA;AAAA,aAGvB;AAAA,YACE,GACE,kBACA;AAAA,cACE,aAAa,CAAE,gBAAgB,QAAQ,cAAc;AAAA,eAEvD,CAAC,GAAG,aAAa,CAAE,OAAO,CAAE,SAAS,IAAI,oBACzC;AAAA,aAGJ;AAAA,UAEF,IAAI,GAAG;AAAA,UACP,GACE,OACA;AAAA,YACE,aAAa,CAAE,SAAS,QAAQ,mBAAmB;AAAA,aAErD;AAAA,YACE,GACE,kBACA;AAAA,cACE,aAAa,CAAE,gBAAgB,QAAQ,cAAc;AAAA,eAEvD;AAAA,cACE,GACE,YACA;AAAA,gBACE,aAAa,CAAE,gBAAgB;AAAA,gBAC/B,OAAO,CAAE,SAAS,WAAW,MAAM;AAAA,gBACnC,IAAI,CAAE,OAAO,IAAI;AAAA,iBAEnB,CAAC,IAAI,GAAG;AAAA,eAGZ;AAAA,aAGJ;AAAA;AAAA,SAIN;AAAA,MAEF,IAAI,GAAG;AAAA,MACP,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,SACA,CAAE,aAAa,uCACf;AAAA,YACE,GAAG,SAAS;AAAA,cACV,GAAG;AAAA,cACH,GAAG,MAAM;AAAA,gBACP,GAAG,MAAM,CAAE,OAAO,CAAE,SAAS,OAAS;AAAA,kBACpC,IAAI,GACF,iBACE,IAAI,GACF,IAAI,SAAS,yBAAyB,UAAU;AAAA;AAAA;AAAA,cAK1D,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA,YAEnB,IAAI,GAAG;AAAA,YACP,IAAI,GAAG,IAAI,SAAS,0BAA0B,SAC5C,aACA;AACA,qBAAO,GAAG,MAAM,CAAE,KAAK,YAAY,OAAQ;AAAA,gBACzC,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;AAAA,gBACpC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,UAAU,CAAE,WAAW,IAAI,GAAG,YAAY;AAAA;AAAA;AAAA,gBAG9C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GAAG,IAAI,GAAG,cAAc,YAAY;AAAA;AAAA;AAAA,gBAI9C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GACF,IAAI,GAAG,IAAI,GAAG,oBAAoB,YAAY,OAAO;AAAA;AAAA,gBAGzD,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,YAAY,KAAK,QAAQ;AAAA;AAAA,gBAKjC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,kBACnD,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,YAAY,OAAO,QAAQ;AAAA;AAAA;AAAA,gBAMrC,IAAI,GAAG;AAAA,gBACP,GACE,MACA;AAAA,kBACE,GACE,cACA;AAAA,oBACE,OAAO;AAAA,sBACL,MAAM;AAAA,sBACN,SAAS;AAAA;AAAA,qBAGb;AAAA,oBACE,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,eACT,YAAY;AAAA;AAAA;AAAA,uBAKpB,CAAC,IAAI,GAAG;AAAA,oBAEV,IAAI,GAAG;AAAA,oBACP,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,aAAa,YAAY;AAAA;AAAA;AAAA,uBAI1C,CAAC,IAAI,GAAG;AAAA,oBAEV,IAAI,GAAG;AAAA,oBACP,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,aAAa,YAAY;AAAA;AAAA;AAAA,uBAI1C,CAAC,IAAI,GAAG;AAAA,qBAGZ;AAAA,mBAGJ;AAAA;AAAA;AAAA,aAKR;AAAA;AAAA,SAIN;AAAA,MAEF,IAAI,GAAG;AAAA,MACP,GACE,SACA;AAAA,QACE,GAAG,SAAS;AAAA,UACV,GACE,SACA,CAAE,aAAa,uCACf;AAAA,YACE,GAAG,SAAS;AAAA,cACV,GAAG;AAAA,cACH,GAAG,MAAM;AAAA,gBACP,GAAG,MAAM,CAAE,OAAO,CAAE,SAAS,OAAS;AAAA,kBACpC,IAAI,GACF,mBACE,IAAI,GACF,IAAI,SAAS,2BAA2B,UAAU,KAEpD;AAAA;AAAA;AAAA,cAIR,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA,cACjB,IAAI,GAAG;AAAA,cACP,GAAG,MAAM,CAAC,IAAI,GAAG;AAAA;AAAA,YAEnB,IAAI,GAAG;AAAA,YACP,IAAI,GAAG,IAAI,SAAS,4BAA4B,SAC9C,aACA;AACA,qBAAO,GAAG,MAAM,CAAE,KAAK,YAAY,OAAQ;AAAA,gBACzC,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,YAAY;AAAA,gBACpC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,UAAU,CAAE,WAAW,IAAI,GAAG,YAAY;AAAA;AAAA;AAAA,gBAG9C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GAAG,IAAI,GAAG,cAAc,YAAY;AAAA;AAAA;AAAA,gBAI9C,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GACF,IAAI,GAAG,IAAI,GAAG,oBAAoB,YAAY,OAAO;AAAA;AAAA,gBAGzD,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM;AAAA,kBACP,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,YAAY,KAAK,QAAQ;AAAA;AAAA,gBAKjC,IAAI,GAAG;AAAA,gBACP,GAAG,MAAM,CAAE,aAAa,CAAE,cAAc,WAAa;AAAA,kBACnD,GAAG,QAAQ;AAAA,oBACT,IAAI,GACF,IAAI,GACF,IAAI,GAAG,oBACL,YAAY,OAAO,QAAQ;AAAA;AAAA;AAAA,gBAMrC,IAAI,GAAG;AAAA,gBACP,GACE,MACA;AAAA,kBACE,GACE,cACA;AAAA,oBACE,OAAO;AAAA,sBACL,MAAM;AAAA,sBACN,SAAS;AAAA;AAAA,qBAGb;AAAA,oBACE,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,eACT,YAAY;AAAA;AAAA;AAAA,uBAKpB,CAAC,IAAI,GAAG;AAAA,oBAEV,IAAI,GAAG;AAAA,oBACP,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,aAAa,YAAY;AAAA;AAAA;AAAA,uBAI1C,CAAC,IAAI,GAAG;AAAA,oBAEV,IAAI,GAAG;AAAA,oBACP,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,aAAa,YAAY;AAAA;AAAA;AAAA,uBAI1C,CAAC,IAAI,GAAG;AAAA,oBAEV,IAAI,GAAG;AAAA,oBACP,GACE,mBACA;AAAA,sBACE,OAAO,CAAE,SAAS;AAAA,sBAClB,IAAI;AAAA,wBACF,OAAO,SAAS,QAAQ;AACtB,iCAAO,IAAI,2BACT,YAAY;AAAA;AAAA;AAAA,uBAKpB,CAAC,IAAI,GAAG;AAAA,qBAGZ;AAAA,mBAGJ;AAAA;AAAA;AAAA,aAKR;AAAA;AAAA,SAIN;AAAA,OAGJ;AAAA;AAGJ,MAAI,2BAA0B;AAC9B,kBAAe,gBAAgB;AAG7B,MAAM,yBAAwB;AAE9B,MAAM,oBAAmB;AAEzB,MAAM,6BAA4B;AAElC,MAAM,kCAAiC;AAEvC,8BACE,UAAU,OAAO,QACjB,OAAO,YAAY,kBAAkB,YACrC,gBAAgB,mBAAmB,sBACnC;AACA,UAAM,YAAa,QAAO,WAAW,aAAa,OAAO,UAAU,WAAW;AAG9E,cAAU,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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",
  "names": []
}
