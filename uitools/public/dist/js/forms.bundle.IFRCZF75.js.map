{
  "version": 3,
  "sources": ["../../../../../apps/frontend/frontend/public/js/services/forms/builder.js", "../../../../../apps/frontend/frontend/public/js/forms/FormBuilder.vue", "../../../../../apps/frontend/frontend/public/js/forms/forms.bundle.js"],
  "sourcesContent": ["export const api = ({ method, args = {}, freeze=true }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, freeze, callback: resolve })\n    );\n\n export const fetch = ({ method, args = {} }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, type:'GET', args, callback: resolve })\n    );\n\nexport const saveFormConfiguration = ({\n        name = \"\",\n        configuration = \"\",\n        department = \"\",\n    }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_configuration\",\n        args: {\n            name,\n            configuration,\n            department,\n        },\n    }).then(({ message }) => message);\n\nexport const getFormConfiguration = ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_form_configuration\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\nexport const getDefaultForm = ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_default_form\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const getFormsPreferences= ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_saved_forms\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const getFormsVersions= ({ name = \"\" }) =>\n    fetch({\n        method: \"clinical.api.forms.form_builder.get_form_versions\",\n        args: {\n            name,\n        },\n    }).then(({ message }) => message);\n\n\nexport const saveFormDoctype = ({ name = \"\", form, permissions }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_doctype\",\n        args: {\n            name,\n            form,\n            permissions,\n        },\n    }).then(({ message }) => message);\n\nexport const saveFormData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.save_form_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateDoctypeData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_doctype_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateFormData = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_form_data\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const updateFormConfiguration = ({ formData }) =>\n    api({\n        method: \"clinical.api.forms.form_builder.update_form_configuration\",\n        args: {\n            form_data: formData,\n        },\n    }).then(({ message }) => message);\n\nexport const searchConcept = (txt) =>\n    api({\n        method: \"clinical.api.forms.form_builder.concept_query\",\n        args: {\n            txt,\n        },\n    }).then(({ message }) => message);", "/* script */\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  saveFormConfiguration,\n  saveFormDoctype,\n  searchConcept,\n  getFormConfiguration,\n  updateFormData,\n  updateFormConfiguration,\n} from \"../services/forms/builder.js\";\nconst __vue_script__ = {\n  name: \"Builder\",\n\n  data: function () {\n    return {\n      some_data: \"This is a vue demo\",\n      date: null,\n      previewMode: false,\n      title: \"\",\n      department: \"\",\n      formId: null,\n      configuration: {},\n      formData: null,\n      formInputData: null,\n      conceptList: [],\n      searchQuery: \"\",\n      formForEditingName: null,\n    };\n  },\n  watch: {\n    configuration(newValue, oldValue) {\n      console.log(\"Old value \", oldValue);\n      console.log(\"New Value \", newValue);\n    },\n\n    previewMode(newVal, oldVal) {\n      if (newVal) {\n        const conf = this.configuration;\n        this.formData = conf;\n      }\n    },\n    searchQuery(searchTearm) {\n      this.searchConceptDictionary(searchTearm);\n    },\n  },\n  methods: {\n    getFormData() {},\n    getFormInputData() {},\n    exportData() {\n      this.showModal();\n    },\n    searchConceptDictionary(searchTearm) {\n      searchConcept(searchTearm).then(\n        (results) => (this.conceptList = results)\n      );\n    },\n    previewForm() {\n      this.previewMode = !this.previewMode;\n    },\n    showModal() {\n      this.$refs[\"save_modal\"].show();\n      this.makeDepartmentControl;\n    },\n    getForm(name) {\n      getFormConfiguration({ name }).then((config) => {\n        const formStringConfig = config.formdata;\n        const configObject = JSON.parse(formStringConfig);\n        console.log(\"Config from server\");\n        console.log(formStringConfig);\n        console.log(configObject);\n        this.configuration = configObject;\n      });\n    },\n    saveForm(title, department, configuration) {\n      this.hideModal();\n      saveFormConfiguration({ name: title, department, configuration }).then(\n        (saved) => {\n          this.title = \"\";\n          this.department = \"\";\n          this.formForEditingName = saved.name;\n          //this.saveFormTable(title, configuration);\n        }\n      );\n    },\n    updateForm(name, configuration) {\n      this.hideModal();\n      let doctype = \"Form Design\";\n      const formData = { doctype, name, formdata: configuration };\n      updateFormConfiguration({ formData }).then((saved) => {\n       frappe.show_alert(\"Form Update Successful\", 5);\n      });\n    },\n    makeDepartmentControl() {\n      let me = this;\n      let customer_field = frappe.ui.form.make_control({\n        df: {\n          label: __(\"Concept Dictionary\"),\n          fieldtype: \"Link\",\n          fieldname: \"concept_dictionary\",\n          options: \"Concept Dictionary\",\n          placeholder: __(\"Search by customer name, phone, email.\"),\n          onchange: function () {\n            if (this.value) {\n              const mime = this;\n              console.log(mime);\n              const frm = me.events.get_frm();\n              alert(frm);\n            }\n          },\n        },\n        parent: this.$refs[\"comment-input\"],\n        render_input: true,\n      });\n\n      customer_field.toggle_label(false);\n    },\n\n    saveFormTable(title, configuration) {\n      let filtered = JSON.parse(configuration);\n      let controls = Object.values(filtered.controls);\n      let fields = controls.map((control) => {\n        console.log(control);\n        let required = 0;\n        let datatype = \"Data\";\n\n        if (control.validations && control.validations.length > 0) {\n          control.validations.forEach((validation) => {\n            if (validation.ruleType === \"required\") {\n              required = 1;\n            }\n          });\n        }\n\n        if (control.type === \"text\") {\n          datatype = \"Text\";\n        }\n\n        return {\n          label: control.label,\n          name: control.name,\n          fieldname: control.name,\n          fieldtype: datatype,\n          rqd: required,\n          docstatus: 0,\n          doctype: \"DocField\",\n          owner: \"Administrator\",\n          non_negative: 0,\n          hide_days: 0,\n          hide_seconds: 0,\n          search_index: 0,\n          in_list_view: 1,\n          in_standard_filter: 0,\n          in_global_search: 0,\n          in_preview: 0,\n          allow_in_quick_entry: 0,\n          bold: 0,\n          translatable: 0,\n          collapsible: 0,\n          fetch_if_empty: 0,\n          hidden: 0,\n          read_only: 0,\n          unique: 0,\n          set_only_once: 0,\n          allow_bulk_edit: 0,\n          permlevel: 0,\n          ignore_user_permissions: 0,\n          allow_on_submit: 0,\n          report_hide: 0,\n          remember_last_selected_value: 0,\n          ignore_xss_filter: 0,\n          hide_border: 0,\n          in_filter: 0,\n          no_copy: 0,\n          print_hide: 0,\n          print_hide_if_no_value: 0,\n          parentfield: \"fields\",\n          parenttype: \"DocType\",\n          idx: 1,\n          __unedited: false,\n        };\n      });\n\n      console.log(fields);\n\n      const permissions = [\n        {\n          docstatus: 0,\n          doctype: \"DocPerm\",\n          __islocal: 1,\n          __unsaved: 1,\n          owner: \"Administrator\",\n          if_owner: 0,\n          permlevel: 0,\n          select: 0,\n          read: 1,\n          write: 1,\n          create: 1,\n          delete: 1,\n          submit: 0,\n          cancel: 0,\n          amend: 0,\n          report: 1,\n          export: 1,\n          import: 0,\n          set_user_permissions: 0,\n          share: 1,\n          print: 1,\n          email: 1,\n          parentfield: \"permissions\",\n          parenttype: \"DocType\",\n          idx: 1,\n          role: \"System Manager\",\n        },\n      ];\n      saveFormDoctype({ name: title, form: fields, permissions }).then(\n        (saved) => {\n          frappe.show_alert(\"Form Saved \" + saved.name, 5);\n        }\n      );\n    },\n    hideModal() {\n      this.$refs[\"save_modal\"].hide();\n    },\n    update() {\n      if (this.formForEditingName) {\n        this.updateForm(\n          this.formForEditingName,\n          JSON.stringify(this.configuration)\n        );\n        return;\n      } else {\n        alert(\"Name not found\");\n      }\n    },\n    save() {\n      this.saveForm(\n        this.title,\n        this.department,\n        JSON.stringify(this.configuration)\n      );\n    },\n  },\n  created() {\n     const formName = this.$router.currentRoute.params.id;\n    if (formName) {\n      this.formForEditingName = formName;\n      this.getForm(formName);\n    }\n  },\n  components: {},\n  mounted() {\n    // this.makeDepartmentControl();\n  },\n};\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    { staticClass: \"main-page\" },\n    [\n      _c(\n        \"b-row\",\n        { staticClass: \"spacer-left-5\" },\n        [\n          _c(\"b-col\", { attrs: { cols: \"4\" } }, [\n            _c(\"div\", { staticStyle: { display: \"inline-block\" } }, [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.previewMode,\n                    expression: \"previewMode\"\n                  }\n                ],\n                attrs: { type: \"checkbox\" },\n                domProps: {\n                  checked: Array.isArray(_vm.previewMode)\n                    ? _vm._i(_vm.previewMode, null) > -1\n                    : _vm.previewMode\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.previewMode,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.previewMode = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.previewMode = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.previewMode = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: \"preview\" } }, [\n                _vm._v(\"Preview Mode\")\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"b-col\",\n            { staticStyle: { \"margin-bottom\": \"30px\" }, attrs: { cols: \"8\" } },\n            [\n              !_vm.formForEditingName\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-primary pull-right spacer-left\",\n                      on: { click: _vm.exportData }\n                    },\n                    [_vm._v(\"\\n       EXPORT\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.formForEditingName\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-primary pull-right spacer-left\",\n                      on: {\n                        click: function($event) {\n                          return _vm.update()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\n        UPDATE\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.previewMode\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-default pull-right spacer-right\",\n                      on: { click: _vm.previewForm }\n                    },\n                    [_vm._v(\"\\n        DESIGN\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              !_vm.previewMode\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-default pull-right spacer-right\",\n                      on: { click: _vm.previewForm }\n                    },\n                    [_vm._v(\"\\n       PREVIEW\\n      \")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                [\n                  false\n                    ? _c(\n                        \"b-button\",\n                        {\n                          directives: [\n                            {\n                              name: \"b-toggle\",\n                              rawName: \"v-b-toggle.sidebar-1\",\n                              modifiers: { \"sidebar-1\": true }\n                            }\n                          ]\n                        },\n                        [_vm._v(\"Search Control\")]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-sidebar\",\n                    {\n                      attrs: { id: \"sidebar-1\", title: \"Sidebar\", shadow: \"\" }\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        { staticClass: \"px-3 py-2 pull-right spacer-right\" },\n                        [\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-form-group\",\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: { placeholder: \"Search dictionary\" },\n                                    model: {\n                                      value: _vm.searchQuery,\n                                      callback: function($$v) {\n                                        _vm.searchQuery = $$v\n                                      },\n                                      expression: \"searchQuery\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"b-row\", [\n                            _c(\n                              \"ul\",\n                              _vm._l(_vm.conceptList, function(conceptItem) {\n                                return _c(\"li\", { key: conceptItem.name }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(conceptItem[0]) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              }),\n                              0\n                            )\n                          ])\n                        ],\n                        1\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-col\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: !_vm.previewMode,\n                  expression: \"!previewMode\"\n                }\n              ],\n              attrs: { cols: \"12\" }\n            },\n            [\n              _c(\"FormBuilder\", {\n                staticClass: \"fb-area\",\n                model: {\n                  value: _vm.configuration,\n                  callback: function($$v) {\n                    _vm.configuration = $$v\n                  },\n                  expression: \"configuration\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-col\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.previewMode,\n                  expression: \"previewMode\"\n                }\n              ],\n              staticClass: \"top-margin\",\n              attrs: { cols: \"12\" }\n            },\n            [\n              _c(\n                \"b-card\",\n                { staticClass: \"render-form\", attrs: { \"no-body\": \"\" } },\n                [\n                  _c(\"FormRenderer\", {\n                    attrs: { \"form-configuration\": _vm.formData },\n                    model: {\n                      value: _vm.formInputData,\n                      callback: function($$v) {\n                        _vm.formInputData = $$v\n                      },\n                      expression: \"formInputData\"\n                    }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-modal\",\n            {\n              ref: \"save_modal\",\n              attrs: { \"hide-footer\": \"\" },\n              scopedSlots: _vm._u([\n                {\n                  key: \"modal-title\",\n                  fn: function() {\n                    return [_vm._v(\" Create Form \")]\n                  },\n                  proxy: true\n                }\n              ])\n            },\n            [\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { id: \"fieldset-1\", label: \"Enter Form title \" } },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: { id: \"input-1\", state: _vm.state, trim: \"\" },\n                        model: {\n                          value: _vm.title,\n                          callback: function($$v) {\n                            _vm.title = $$v\n                          },\n                          expression: \"title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { id: \"fieldset-1\", label: \"Enter Department\" } },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: { id: \"input-1\", state: _vm.state, trim: \"\" },\n                        model: {\n                          value: _vm.department,\n                          callback: function($$v) {\n                            _vm.department = $$v\n                          },\n                          expression: \"department\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"b-button\",\n                {\n                  staticClass: \"mt-6 btn btn-primary\",\n                  attrs: { block: \"\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.save()\n                    }\n                  }\n                },\n                [_vm._v(\"Save\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar __vue_staticRenderFns__ = []\n__vue_render__._withStripped = true\n\n  /* style */\n  const __vue_inject_styles__ = function (inject) {\n    if (!inject) return\n    inject(\"data-v-fea96db8_0\", { source: \"\\n.spacer[data-v-fea96db8] {\\n  margin-top: 10px;\\n}\\n.space-right[data-v-fea96db8] {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left[data-v-fea96db8] {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n.spacer-left-5[data-v-fea96db8] {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form[data-v-fea96db8] {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n.form-border[data-v-fea96db8] {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding[data-v-fea96db8] {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page[data-v-fea96db8] {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin[data-v-fea96db8] {\\n  margin-top: 20px;\\n}\\n.card[data-v-fea96db8] {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card[data-v-fea96db8]:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n.fb-area[data-v-fea96db8] {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n.container-fluid[data-v-fea96db8] {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n.save-data[data-v-fea96db8] {\\n  margin-top: 20px !important;\\n}\\n\", map: {\"version\":3,\"sources\":[\"../frontend/frontend/public/js/forms/FormBuilder.vue\"],\"names\":[],\"mappings\":\";AAmXA;EACA,gBAAA;AACA;AACA;EACA,6BAAA;EACA,mBAAA;AACA;AACA;EACA,4BAAA;EACA,kBAAA;AACA;AAEA;EACA,2BAAA;EACA,iBAAA;AACA;AACA;EACA,iBAAA;EACA,mBAAA;EACA,kBAAA;EACA,oBAAA;AACA;AAEA;EACA,0BAAA;;EAEA,gBAAA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,oBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;EACA,mBAAA;AACA;AACA;EACA,gBAAA;AACA;AAEA;EACA,4CAAA;EACA,0CAAA;EACA,gBAAA;AACA;;AAEA,uCAAA;AACA;EACA,2CAAA;AACA;AAEA;EACA,iBAAA;EACA,mBAAA;AACA;AAEA;EACA,uBAAA;EACA,mBAAA;AACA;AAEA;EACA,2BAAA;AACA\",\"file\":\"FormBuilder.vue\",\"sourcesContent\":[\"<template>\\n  <b-container class=\\\"main-page\\\">\\n    <b-row class=\\\"spacer-left-5\\\">\\n      <b-col cols=\\\"4\\\">\\n        <div style=\\\"display: inline-block\\\">\\n          <input type=\\\"checkbox\\\" v-model=\\\"previewMode\\\" />\\n          <label for=\\\"preview\\\">Preview Mode</label>\\n        </div>\\n      </b-col>\\n\\n      <b-col cols=\\\"8\\\" style=\\\"margin-bottom: 30px\\\">\\n        <button\\n          v-if=\\\"!formForEditingName\\\"\\n          class=\\\"btn btn-primary pull-right spacer-left\\\"\\n          v-on:click=\\\"exportData\\\"\\n        >\\n         EXPORT\\n        </button>\\n\\n         <button\\n           v-if=\\\"formForEditingName\\\"\\n          class=\\\"btn btn-primary pull-right spacer-left\\\"\\n          v-on:click=\\\"update()\\\"\\n        >\\n          UPDATE\\n        </button>\\n        <button\\n          v-if=\\\"previewMode\\\"\\n          class=\\\"btn btn-default pull-right spacer-right\\\"\\n          v-on:click=\\\"previewForm\\\"\\n        >\\n          DESIGN\\n        </button>\\n\\n        <button\\n          v-if=\\\"!previewMode\\\"\\n          class=\\\"btn btn-default pull-right spacer-right\\\"\\n          v-on:click=\\\"previewForm\\\"\\n        >\\n         PREVIEW\\n        </button>\\n\\n        <div>\\n          <b-button v-b-toggle.sidebar-1 v-if=\\\"false\\\">Search Control</b-button>\\n          <b-sidebar id=\\\"sidebar-1\\\" title=\\\"Sidebar\\\" shadow>\\n            <div class=\\\"px-3 py-2 pull-right spacer-right\\\">\\n              <b-row>\\n                <b-form-group>\\n                  <b-form-input\\n                    v-model=\\\"searchQuery\\\"\\n                    placeholder=\\\"Search dictionary\\\"\\n                  ></b-form-input>\\n                </b-form-group>\\n              </b-row>\\n\\n              <b-row>\\n                <ul>\\n                  <li\\n                    v-for=\\\"conceptItem in conceptList\\\"\\n                    :key=\\\"conceptItem.name\\\"\\n                  >\\n                    {{ conceptItem[0] }}\\n                  </li>\\n                </ul>\\n              </b-row>\\n            </div>\\n          </b-sidebar>\\n        </div>\\n      </b-col>\\n\\n      <b-col cols=\\\"12\\\" v-show=\\\"!previewMode\\\">\\n        <FormBuilder v-model=\\\"configuration\\\" class=\\\"fb-area\\\"></FormBuilder>\\n      </b-col>\\n\\n      <b-col cols=\\\"12\\\" v-show=\\\"previewMode\\\" class=\\\"top-margin\\\">\\n        <b-card no-body class=\\\"render-form\\\">\\n          <FormRenderer\\n            :form-configuration=\\\"formData\\\"\\n            v-model=\\\"formInputData\\\"\\n          />\\n        </b-card>\\n      </b-col>\\n\\n      <b-modal ref=\\\"save_modal\\\" hide-footer>\\n        <template #modal-title> Create Form </template>\\n        <div>\\n          <b-form-group id=\\\"fieldset-1\\\" label=\\\"Enter Form title \\\">\\n            <b-form-input\\n              id=\\\"input-1\\\"\\n              v-model=\\\"title\\\"\\n              :state=\\\"state\\\"\\n              trim\\n            ></b-form-input>\\n          </b-form-group>\\n          <b-form-group id=\\\"fieldset-1\\\" label=\\\"Enter Department\\\">\\n            <b-form-input\\n              id=\\\"input-1\\\"\\n              v-model=\\\"department\\\"\\n              :state=\\\"state\\\"\\n              trim\\n            ></b-form-input>\\n          </b-form-group>\\n        </div>\\n        <b-button\\n        \\n          class=\\\"mt-6 btn btn-primary\\\"\\n          block\\n          @click=\\\"save()\\\"\\n          >Save</b-button\\n        >\\n\\n       \\n      </b-modal>\\n    </b-row>\\n  </b-container>\\n</template>\\n<script>\\nimport {\\n  saveFormConfiguration,\\n  saveFormDoctype,\\n  searchConcept,\\n  getFormConfiguration,\\n  updateFormData,\\n  updateFormConfiguration,\\n} from \\\"../services/forms/builder.js\\\";\\nexport default {\\n  name: \\\"Builder\\\",\\n\\n  data: function () {\\n    return {\\n      some_data: \\\"This is a vue demo\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      formId: null,\\n      configuration: {},\\n      formData: null,\\n      formInputData: null,\\n      conceptList: [],\\n      searchQuery: \\\"\\\",\\n      formForEditingName: null,\\n    };\\n  },\\n  watch: {\\n    configuration(newValue, oldValue) {\\n      console.log(\\\"Old value \\\", oldValue);\\n      console.log(\\\"New Value \\\", newValue);\\n    },\\n\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        this.formData = conf;\\n      }\\n    },\\n    searchQuery(searchTearm) {\\n      this.searchConceptDictionary(searchTearm);\\n    },\\n  },\\n  methods: {\\n    getFormData() {},\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    searchConceptDictionary(searchTearm) {\\n      searchConcept(searchTearm).then(\\n        (results) => (this.conceptList = results)\\n      );\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      this.$refs[\\\"save_modal\\\"].show();\\n      this.makeDepartmentControl;\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        console.log(\\\"Config from server\\\");\\n        console.log(formStringConfig);\\n        console.log(configObject);\\n        this.configuration = configObject;\\n      });\\n    },\\n    saveForm(title, department, configuration) {\\n      this.hideModal();\\n      saveFormConfiguration({ name: title, department, configuration }).then(\\n        (saved) => {\\n          this.title = \\\"\\\";\\n          this.department = \\\"\\\";\\n          this.formForEditingName = saved.name;\\n          //this.saveFormTable(title, configuration);\\n        }\\n      );\\n    },\\n    updateForm(name, configuration) {\\n      this.hideModal();\\n      let doctype = \\\"Form Design\\\";\\n      const formData = { doctype, name, formdata: configuration };\\n      updateFormConfiguration({ formData }).then((saved) => {\\n       frappe.show_alert(\\\"Form Update Successful\\\", 5);\\n      });\\n    },\\n    makeDepartmentControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Concept Dictionary\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"concept_dictionary\\\",\\n          options: \\\"Concept Dictionary\\\",\\n          placeholder: __(\\\"Search by customer name, phone, email.\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              const mime = this;\\n              console.log(mime);\\n              const frm = me.events.get_frm();\\n              alert(frm);\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"comment-input\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n    },\\n\\n    saveFormTable(title, configuration) {\\n      let filtered = JSON.parse(configuration);\\n      let controls = Object.values(filtered.controls);\\n      let fields = controls.map((control) => {\\n        console.log(control);\\n        let required = 0;\\n        let datatype = \\\"Data\\\";\\n\\n        if (control.validations && control.validations.length > 0) {\\n          control.validations.forEach((validation) => {\\n            if (validation.ruleType === \\\"required\\\") {\\n              required = 1;\\n            }\\n          });\\n        }\\n\\n        if (control.type === \\\"text\\\") {\\n          datatype = \\\"Text\\\";\\n        }\\n\\n        return {\\n          label: control.label,\\n          name: control.name,\\n          fieldname: control.name,\\n          fieldtype: datatype,\\n          rqd: required,\\n          docstatus: 0,\\n          doctype: \\\"DocField\\\",\\n          owner: \\\"Administrator\\\",\\n          non_negative: 0,\\n          hide_days: 0,\\n          hide_seconds: 0,\\n          search_index: 0,\\n          in_list_view: 1,\\n          in_standard_filter: 0,\\n          in_global_search: 0,\\n          in_preview: 0,\\n          allow_in_quick_entry: 0,\\n          bold: 0,\\n          translatable: 0,\\n          collapsible: 0,\\n          fetch_if_empty: 0,\\n          hidden: 0,\\n          read_only: 0,\\n          unique: 0,\\n          set_only_once: 0,\\n          allow_bulk_edit: 0,\\n          permlevel: 0,\\n          ignore_user_permissions: 0,\\n          allow_on_submit: 0,\\n          report_hide: 0,\\n          remember_last_selected_value: 0,\\n          ignore_xss_filter: 0,\\n          hide_border: 0,\\n          in_filter: 0,\\n          no_copy: 0,\\n          print_hide: 0,\\n          print_hide_if_no_value: 0,\\n          parentfield: \\\"fields\\\",\\n          parenttype: \\\"DocType\\\",\\n          idx: 1,\\n          __unedited: false,\\n        };\\n      });\\n\\n      console.log(fields);\\n\\n      const permissions = [\\n        {\\n          docstatus: 0,\\n          doctype: \\\"DocPerm\\\",\\n          __islocal: 1,\\n          __unsaved: 1,\\n          owner: \\\"Administrator\\\",\\n          if_owner: 0,\\n          permlevel: 0,\\n          select: 0,\\n          read: 1,\\n          write: 1,\\n          create: 1,\\n          delete: 1,\\n          submit: 0,\\n          cancel: 0,\\n          amend: 0,\\n          report: 1,\\n          export: 1,\\n          import: 0,\\n          set_user_permissions: 0,\\n          share: 1,\\n          print: 1,\\n          email: 1,\\n          parentfield: \\\"permissions\\\",\\n          parenttype: \\\"DocType\\\",\\n          idx: 1,\\n          role: \\\"System Manager\\\",\\n        },\\n      ];\\n      saveFormDoctype({ name: title, form: fields, permissions }).then(\\n        (saved) => {\\n          frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n        }\\n      );\\n    },\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    update() {\\n      if (this.formForEditingName) {\\n        this.updateForm(\\n          this.formForEditingName,\\n          JSON.stringify(this.configuration)\\n        );\\n        return;\\n      } else {\\n        alert(\\\"Name not found\\\");\\n      }\\n    },\\n    save() {\\n      this.saveForm(\\n        this.title,\\n        this.department,\\n        JSON.stringify(this.configuration)\\n      );\\n    },\\n  },\\n  created() {\\n     const formName = this.$router.currentRoute.params.id;\\n    if (formName) {\\n      this.formForEditingName = formName;\\n      this.getForm(formName);\\n    }\\n  },\\n  components: {},\\n  mounted() {\\n    // this.makeDepartmentControl();\\n  },\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.save-data {\\n  margin-top: 20px !important;\\n}\\n</style>\\n\"]}, media: undefined })\n\n  }\n  /* scoped */\n  const __vue_scope_id__ = \"data-v-fea96db8\"\n  /* module identifier */\n  const __vue_module_identifier__ = undefined\n  /* functional template */\n  const __vue_is_functional_template__ = false\n  /* component normalizer */\n  function __vue_normalize__(\n    template, style, script,\n    scope, functional, moduleIdentifier, shadowMode,\n    createInjector, createInjectorSSR, createInjectorShadow\n  ) {\n    const component = (typeof script === 'function' ? script.options : script) || {}\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"<template>\\n  <b-container class=\\\"main-page\\\">\\n    <b-row class=\\\"spacer-left-5\\\">\\n      <b-col cols=\\\"4\\\">\\n        <div style=\\\"display: inline-block\\\">\\n          <input type=\\\"checkbox\\\" v-model=\\\"previewMode\\\" />\\n          <label for=\\\"preview\\\">Preview Mode</label>\\n        </div>\\n      </b-col>\\n\\n      <b-col cols=\\\"8\\\" style=\\\"margin-bottom: 30px\\\">\\n        <button\\n          v-if=\\\"!formForEditingName\\\"\\n          class=\\\"btn btn-primary pull-right spacer-left\\\"\\n          v-on:click=\\\"exportData\\\"\\n        >\\n         EXPORT\\n        </button>\\n\\n         <button\\n           v-if=\\\"formForEditingName\\\"\\n          class=\\\"btn btn-primary pull-right spacer-left\\\"\\n          v-on:click=\\\"update()\\\"\\n        >\\n          UPDATE\\n        </button>\\n        <button\\n          v-if=\\\"previewMode\\\"\\n          class=\\\"btn btn-default pull-right spacer-right\\\"\\n          v-on:click=\\\"previewForm\\\"\\n        >\\n          DESIGN\\n        </button>\\n\\n        <button\\n          v-if=\\\"!previewMode\\\"\\n          class=\\\"btn btn-default pull-right spacer-right\\\"\\n          v-on:click=\\\"previewForm\\\"\\n        >\\n         PREVIEW\\n        </button>\\n\\n        <div>\\n          <b-button v-b-toggle.sidebar-1 v-if=\\\"false\\\">Search Control</b-button>\\n          <b-sidebar id=\\\"sidebar-1\\\" title=\\\"Sidebar\\\" shadow>\\n            <div class=\\\"px-3 py-2 pull-right spacer-right\\\">\\n              <b-row>\\n                <b-form-group>\\n                  <b-form-input\\n                    v-model=\\\"searchQuery\\\"\\n                    placeholder=\\\"Search dictionary\\\"\\n                  ></b-form-input>\\n                </b-form-group>\\n              </b-row>\\n\\n              <b-row>\\n                <ul>\\n                  <li\\n                    v-for=\\\"conceptItem in conceptList\\\"\\n                    :key=\\\"conceptItem.name\\\"\\n                  >\\n                    {{ conceptItem[0] }}\\n                  </li>\\n                </ul>\\n              </b-row>\\n            </div>\\n          </b-sidebar>\\n        </div>\\n      </b-col>\\n\\n      <b-col cols=\\\"12\\\" v-show=\\\"!previewMode\\\">\\n        <FormBuilder v-model=\\\"configuration\\\" class=\\\"fb-area\\\"></FormBuilder>\\n      </b-col>\\n\\n      <b-col cols=\\\"12\\\" v-show=\\\"previewMode\\\" class=\\\"top-margin\\\">\\n        <b-card no-body class=\\\"render-form\\\">\\n          <FormRenderer\\n            :form-configuration=\\\"formData\\\"\\n            v-model=\\\"formInputData\\\"\\n          />\\n        </b-card>\\n      </b-col>\\n\\n      <b-modal ref=\\\"save_modal\\\" hide-footer>\\n        <template #modal-title> Create Form </template>\\n        <div>\\n          <b-form-group id=\\\"fieldset-1\\\" label=\\\"Enter Form title \\\">\\n            <b-form-input\\n              id=\\\"input-1\\\"\\n              v-model=\\\"title\\\"\\n              :state=\\\"state\\\"\\n              trim\\n            ></b-form-input>\\n          </b-form-group>\\n          <b-form-group id=\\\"fieldset-1\\\" label=\\\"Enter Department\\\">\\n            <b-form-input\\n              id=\\\"input-1\\\"\\n              v-model=\\\"department\\\"\\n              :state=\\\"state\\\"\\n              trim\\n            ></b-form-input>\\n          </b-form-group>\\n        </div>\\n        <b-button\\n        \\n          class=\\\"mt-6 btn btn-primary\\\"\\n          block\\n          @click=\\\"save()\\\"\\n          >Save</b-button\\n        >\\n\\n       \\n      </b-modal>\\n    </b-row>\\n  </b-container>\\n</template>\\n<script>\\nimport {\\n  saveFormConfiguration,\\n  saveFormDoctype,\\n  searchConcept,\\n  getFormConfiguration,\\n  updateFormData,\\n  updateFormConfiguration,\\n} from \\\"../services/forms/builder.js\\\";\\nexport default {\\n  name: \\\"Builder\\\",\\n\\n  data: function () {\\n    return {\\n      some_data: \\\"This is a vue demo\\\",\\n      date: null,\\n      previewMode: false,\\n      title: \\\"\\\",\\n      department: \\\"\\\",\\n      formId: null,\\n      configuration: {},\\n      formData: null,\\n      formInputData: null,\\n      conceptList: [],\\n      searchQuery: \\\"\\\",\\n      formForEditingName: null,\\n    };\\n  },\\n  watch: {\\n    configuration(newValue, oldValue) {\\n      console.log(\\\"Old value \\\", oldValue);\\n      console.log(\\\"New Value \\\", newValue);\\n    },\\n\\n    previewMode(newVal, oldVal) {\\n      if (newVal) {\\n        const conf = this.configuration;\\n        this.formData = conf;\\n      }\\n    },\\n    searchQuery(searchTearm) {\\n      this.searchConceptDictionary(searchTearm);\\n    },\\n  },\\n  methods: {\\n    getFormData() {},\\n    getFormInputData() {},\\n    exportData() {\\n      this.showModal();\\n    },\\n    searchConceptDictionary(searchTearm) {\\n      searchConcept(searchTearm).then(\\n        (results) => (this.conceptList = results)\\n      );\\n    },\\n    previewForm() {\\n      this.previewMode = !this.previewMode;\\n    },\\n    showModal() {\\n      this.$refs[\\\"save_modal\\\"].show();\\n      this.makeDepartmentControl;\\n    },\\n    getForm(name) {\\n      getFormConfiguration({ name }).then((config) => {\\n        const formStringConfig = config.formdata;\\n        const configObject = JSON.parse(formStringConfig);\\n        console.log(\\\"Config from server\\\");\\n        console.log(formStringConfig);\\n        console.log(configObject);\\n        this.configuration = configObject;\\n      });\\n    },\\n    saveForm(title, department, configuration) {\\n      this.hideModal();\\n      saveFormConfiguration({ name: title, department, configuration }).then(\\n        (saved) => {\\n          this.title = \\\"\\\";\\n          this.department = \\\"\\\";\\n          this.formForEditingName = saved.name;\\n          //this.saveFormTable(title, configuration);\\n        }\\n      );\\n    },\\n    updateForm(name, configuration) {\\n      this.hideModal();\\n      let doctype = \\\"Form Design\\\";\\n      const formData = { doctype, name, formdata: configuration };\\n      updateFormConfiguration({ formData }).then((saved) => {\\n       frappe.show_alert(\\\"Form Update Successful\\\", 5);\\n      });\\n    },\\n    makeDepartmentControl() {\\n      let me = this;\\n      let customer_field = frappe.ui.form.make_control({\\n        df: {\\n          label: __(\\\"Concept Dictionary\\\"),\\n          fieldtype: \\\"Link\\\",\\n          fieldname: \\\"concept_dictionary\\\",\\n          options: \\\"Concept Dictionary\\\",\\n          placeholder: __(\\\"Search by customer name, phone, email.\\\"),\\n          onchange: function () {\\n            if (this.value) {\\n              const mime = this;\\n              console.log(mime);\\n              const frm = me.events.get_frm();\\n              alert(frm);\\n            }\\n          },\\n        },\\n        parent: this.$refs[\\\"comment-input\\\"],\\n        render_input: true,\\n      });\\n\\n      customer_field.toggle_label(false);\\n    },\\n\\n    saveFormTable(title, configuration) {\\n      let filtered = JSON.parse(configuration);\\n      let controls = Object.values(filtered.controls);\\n      let fields = controls.map((control) => {\\n        console.log(control);\\n        let required = 0;\\n        let datatype = \\\"Data\\\";\\n\\n        if (control.validations && control.validations.length > 0) {\\n          control.validations.forEach((validation) => {\\n            if (validation.ruleType === \\\"required\\\") {\\n              required = 1;\\n            }\\n          });\\n        }\\n\\n        if (control.type === \\\"text\\\") {\\n          datatype = \\\"Text\\\";\\n        }\\n\\n        return {\\n          label: control.label,\\n          name: control.name,\\n          fieldname: control.name,\\n          fieldtype: datatype,\\n          rqd: required,\\n          docstatus: 0,\\n          doctype: \\\"DocField\\\",\\n          owner: \\\"Administrator\\\",\\n          non_negative: 0,\\n          hide_days: 0,\\n          hide_seconds: 0,\\n          search_index: 0,\\n          in_list_view: 1,\\n          in_standard_filter: 0,\\n          in_global_search: 0,\\n          in_preview: 0,\\n          allow_in_quick_entry: 0,\\n          bold: 0,\\n          translatable: 0,\\n          collapsible: 0,\\n          fetch_if_empty: 0,\\n          hidden: 0,\\n          read_only: 0,\\n          unique: 0,\\n          set_only_once: 0,\\n          allow_bulk_edit: 0,\\n          permlevel: 0,\\n          ignore_user_permissions: 0,\\n          allow_on_submit: 0,\\n          report_hide: 0,\\n          remember_last_selected_value: 0,\\n          ignore_xss_filter: 0,\\n          hide_border: 0,\\n          in_filter: 0,\\n          no_copy: 0,\\n          print_hide: 0,\\n          print_hide_if_no_value: 0,\\n          parentfield: \\\"fields\\\",\\n          parenttype: \\\"DocType\\\",\\n          idx: 1,\\n          __unedited: false,\\n        };\\n      });\\n\\n      console.log(fields);\\n\\n      const permissions = [\\n        {\\n          docstatus: 0,\\n          doctype: \\\"DocPerm\\\",\\n          __islocal: 1,\\n          __unsaved: 1,\\n          owner: \\\"Administrator\\\",\\n          if_owner: 0,\\n          permlevel: 0,\\n          select: 0,\\n          read: 1,\\n          write: 1,\\n          create: 1,\\n          delete: 1,\\n          submit: 0,\\n          cancel: 0,\\n          amend: 0,\\n          report: 1,\\n          export: 1,\\n          import: 0,\\n          set_user_permissions: 0,\\n          share: 1,\\n          print: 1,\\n          email: 1,\\n          parentfield: \\\"permissions\\\",\\n          parenttype: \\\"DocType\\\",\\n          idx: 1,\\n          role: \\\"System Manager\\\",\\n        },\\n      ];\\n      saveFormDoctype({ name: title, form: fields, permissions }).then(\\n        (saved) => {\\n          frappe.show_alert(\\\"Form Saved \\\" + saved.name, 5);\\n        }\\n      );\\n    },\\n    hideModal() {\\n      this.$refs[\\\"save_modal\\\"].hide();\\n    },\\n    update() {\\n      if (this.formForEditingName) {\\n        this.updateForm(\\n          this.formForEditingName,\\n          JSON.stringify(this.configuration)\\n        );\\n        return;\\n      } else {\\n        alert(\\\"Name not found\\\");\\n      }\\n    },\\n    save() {\\n      this.saveForm(\\n        this.title,\\n        this.department,\\n        JSON.stringify(this.configuration)\\n      );\\n    },\\n  },\\n  created() {\\n     const formName = this.$router.currentRoute.params.id;\\n    if (formName) {\\n      this.formForEditingName = formName;\\n      this.getForm(formName);\\n    }\\n  },\\n  components: {},\\n  mounted() {\\n    // this.makeDepartmentControl();\\n  },\\n};\\n</script>\\n<style scoped>\\n.spacer {\\n  margin-top: 10px;\\n}\\n.space-right {\\n  margin-right: 10px !important;\\n  padding-right: 10px;\\n}\\n.spacer-left {\\n  margin-left: 10px !important;\\n  padding-left: 10px;\\n}\\n\\n.spacer-left-5 {\\n  margin-left: 5px !important;\\n  padding-left: 5px;\\n}\\n.render-form {\\n  padding-top: 20px;\\n  padding-right: 20px;\\n  padding-left: 20px;\\n  padding-bottom: 50px;\\n}\\n\\n.form-border {\\n  border: 1px solid darkgray;\\n\\n  margin-top: 20px;\\n  padding-bottom: 30px;\\n  margin-bottom: 50px;\\n}\\n.main-padding {\\n  padding-bottom: 50px;\\n  padding-right: 50px;\\n}\\n.main-page {\\n  margin-top: 10px;\\n  padding-right: 30px;\\n}\\n.top-margin {\\n  margin-top: 20px;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\n.fb-area {\\n  padding-top: 20px;\\n  border-radius: 10px;\\n}\\n\\n.container-fluid {\\n  background-color: white;\\n  border-radius: 10px;\\n}\\n\\n.save-data {\\n  margin-top: 20px !important;\\n}\\n</style>\\n\"\n\n    if (!component.render) {\n      component.render = template.render\n      component.staticRenderFns = template.staticRenderFns\n      component._compiled = true\n\n      if (functional) component.functional = true\n    }\n\n    component._scopeId = scope\n\n    if (true) {\n      let hook\n      if (false) {\n        // In SSR.\n        hook = function(context) {\n          // 2.3 injection\n          context =\n            context || // cached call\n            (this.$vnode && this.$vnode.ssrContext) || // stateful\n            (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n          // 2.2 with runInNewContext: true\n          if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n            context = __VUE_SSR_CONTEXT__\n          }\n          // inject component styles\n          if (style) {\n            style.call(this, createInjectorSSR(context))\n          }\n          // register component module identifier for async chunk inference\n          if (context && context._registeredComponents) {\n            context._registeredComponents.add(moduleIdentifier)\n          }\n        }\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        component._ssrRegister = hook\n      }\n      else if (style) {\n        hook = shadowMode \n          ? function(context) {\n              style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot))\n            }\n          : function(context) {\n              style.call(this, createInjector(context))\n            }\n      }\n\n      if (hook !== undefined) {\n        if (component.functional) {\n          // register for functional component in vue file\n          const originalRender = component.render\n          component.render = function renderWithStyleInjection(h, context) {\n            hook.call(context)\n            return originalRender(h, context)\n          }\n        } else {\n          // inject component registration as beforeCreate hook\n          const existing = component.beforeCreate\n          component.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n        }\n      }\n    }\n\n    return component\n  }\n  /* style inject */\n  function __vue_create_injector__() {\n    const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {})\n    const isOldIE =\n      typeof navigator !== 'undefined' &&\n      /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase())\n\n    return function addStyle(id, css) {\n      if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return // SSR styles are present.\n\n      const group = isOldIE ? css.media || 'default' : id\n      const style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined })\n\n      if (!style.ids.includes(id)) {\n        let code = css.source\n        let index = style.ids.length\n\n        style.ids.push(id)\n\n        if (false && css.map) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'\n          // http://stackoverflow.com/a/26603875\n          code +=\n            '\\n/*# sourceMappingURL=data:application/json;base64,' +\n            btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\n            ' */'\n        }\n\n        if (isOldIE) {\n          style.element = style.element || document.querySelector('style[data-group=' + group + ']')\n        }\n\n        if (!style.element) {\n          const head = document.head || document.getElementsByTagName('head')[0]\n          const el = style.element = document.createElement('style')\n          el.type = 'text/css'\n\n          if (css.media) el.setAttribute('media', css.media)\n          if (isOldIE) {\n            el.setAttribute('data-group', group)\n            el.setAttribute('data-next-index', '0')\n          }\n\n          head.appendChild(el)\n        }\n\n        if (isOldIE) {\n          index = parseInt(style.element.getAttribute('data-next-index'))\n          style.element.setAttribute('data-next-index', index + 1)\n        }\n\n        if (style.element.styleSheet) {\n          style.parts.push(code)\n          style.element.styleSheet.cssText = style.parts\n            .filter(Boolean)\n            .join('\\n')\n        } else {\n          const textNode = document.createTextNode(code)\n          const nodes = style.element.childNodes\n          if (nodes[index]) style.element.removeChild(nodes[index])\n          if (nodes.length) style.element.insertBefore(textNode, nodes[index])\n          else style.element.appendChild(textNode)\n        }\n      }\n    }\n  }\n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = /*#__PURE__*/__vue_normalize__(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    __vue_create_injector__,\n    undefined,\n    undefined\n  )\n\n  export default __vue_component__", "import FormBuilder from './FormBuilder.vue';\n\n\nVue.use(VueFormBuilderPlugin, {})\n\nfrappe.provide('frappe.forms');\n\nfrappe.forms.PatientFormBuilder = class {\n    constructor({ parent }) {\n        this.$parent = $(parent);\n        this.page = parent.page;\n        this.make_body();\n    }\n\n    make_body() {\n        this.$body = this.$parent.find('.layout-main-section');\n        this.$parent.find('.page-head').addClass('hidden');\n        this.$parent.find('.page-body').removeClass('container');\n        this.$parent.find('.content').removeClass('page-container');\n        this.$parent.find('.page-content').removeClass('page-content');\n        this.$page_container = $('<div class=\"hub-page-container\">').appendTo(this.$body);\n\n        new Vue({\n            el: '.hub-page-container',\n            render: h => h(FormBuilder)\n        });\n    }\n};"],
  "mappings": "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",
  "names": []
}
