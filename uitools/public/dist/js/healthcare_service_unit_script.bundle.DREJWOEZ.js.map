{
  "version": 3,
  "sources": ["../../../../../apps/frontend/frontend/public/js/client_scripts/healthcare_service_unit_script.bundle.js"],
  "sourcesContent": ["const api = ({ method, args = {} }) =>\n    new Promise((resolve, reject) =>\n        frappe.call({ method, args, callback: ({ message }) => resolve(message), error: reject }),\n    );\n\nfrappe.ui.form.on('Healthcare Service Unit', {\n    //\n    refresh(frm) {\n        // your code here\n        frm.add_custom_button('Allow Inpatient', () => {\n            api({\n                method: 'clinical.utils.update_healthcare_service_unit_inpatient_status',\n                args: {\n                    name: frm.doc.name,\n                }\n            }).then(({ name }) => {\n                frm.refresh();\n                frappe.show_alert({\n                    message: `Saved Successfully`,\n                    indicator: 'green'\n                }, 5);\n            })\n        });\n\n        frm.add_custom_button('Allow Appointments', () => {\n            api({\n                method: 'clinical.utils.update_healthcare_service_unit_appointments',\n                args: {\n                    name: frm.doc.name,\n                }\n            }).then(({ name }) => {\n                frm.refresh();\n                frappe.show_alert({\n                    message: `Saved Successfully`,\n                    indicator: 'green'\n                }, 5);\n            })\n        });\n\n        frm.add_custom_button('Update Fields', () => {\n            let dialog = new frappe.ui.Dialog({\n                title: `Update ${frm.doc.name}`,\n                fields: [{\n                        label: 'Service Unit Type',\n                        fieldname: 'service_unit_type',\n                        fieldtype: 'Link',\n                        options: 'Healthcare Service Unit Type',\n                        default: frm.doc.service_unit_type\n                    },\n                    { fieldtype: \"Section Break\", label: \"\" },\n                    {\n                        label: 'Allow Appointments',\n                        fieldname: 'allow_appointments',\n                        fieldtype: 'Check',\n                        default: frm.doc.allow_appointments\n                    },\n                    {\n                        label: 'Allow Overlap',\n                        fieldname: 'overlap_appointments',\n                        fieldtype: 'Check',\n                        default: frm.doc.overlap_appointments\n                    },\n                    { fieldtype: \"Column Break\" },\n                    {\n                        label: 'Inpatient Occupancy',\n                        fieldname: 'inpatient_occupancy',\n                        fieldtype: 'Check',\n                        default: frm.doc.inpatient_occupancy\n                    },\n                    {\n                        label: 'Bill Every Encounter',\n                        fieldname: 'bill_for_every_encounter',\n                        fieldtype: 'Check',\n                        default: frm.doc.bill_for_every_encounter\n                    },\n                    { fieldtype: \"Section Break\", label: \"\" },\n                    {\n                        label: 'Warehouse',\n                        fieldname: 'warehouse',\n                        fieldtype: 'Link',\n                        options: 'Warehouse',\n                        default: frm.doc.warehouse\n                    },\n                    {\n                        label: 'Custom Warehouse',\n                        fieldname: 'custom_warehouse',\n                        fieldtype: 'Link',\n                        options: 'Warehouse',\n                        default: frm.doc.custom_warehouse\n                    },\n                    { fieldtype: \"Section Break\", label: \"\" },\n                    {\n                        label: 'Radiology HL7 Destination',\n                        fieldname: 'radiology_hl7_destination',\n                        fieldtype: 'Link',\n                        options: 'HL7 Destination',\n                        default: frm.doc.radiology_hl7_destination\n                    },\n                    { fieldtype: \"Column Break\" },\n                    {\n                        label: 'Lab HL7 Destination',\n                        fieldname: 'lab_hl7_destination',\n                        fieldtype: 'Link',\n                        options: 'HL7 Destination',\n                        default: frm.doc.lab_hl7_destination\n                    },\n                    { fieldtype: \"Section Break\", label: \"\" },\n                    {\n                        label: 'Billing Department',\n                        fieldname: 'occupancy_status',\n                        fieldtype: 'Link',\n                        options: 'Department',\n                        default: frm.doc.occupancy_status\n                    },\n                    { fieldtype: \"Column Break\" },\n                    {\n                        label: 'Occupancy Status',\n                        fieldname: 'occupancy_status',\n                        fieldtype: 'Select',\n                        options: ['Occupied', 'Vacant'],\n                        default: frm.doc.occupancy_status\n                    }\n                    //,\n                    /*{ fieldtype: \"Section Break\", label: 'Inpatient Standing Charges' },\n                    {\n                        label: 'Inpatient Standing Charges',\n                        fieldname: 'inpatient_standing_charges',\n                        fieldtype: 'Table',\n                        options: 'Inpatient Standing Charges',\n                        fields: [{\n                                label: 'Item',\n                                fieldtype: 'Link',\n                                fieldname: 'item',\n                                name: 'item',\n                                options: 'Item',\n                                in_list_view: 1,\n                            },\n                            {\n                                fieldtype: 'Data',\n                                fieldname: 'unit_price',\n                                name: 'Unit Price',\n                                in_list_view: 1,\n                            },\n                            {\n                                fieldtype: 'Data',\n                                fieldname: 'minimum_charge',\n                                label: 'Minimum Charge',\n                                in_list_view: 1,\n                            },\n                        ],\n                    },\n                    { fieldtype: \"Section Break\", label: 'Service Points' },\n                    {\n                        label: 'Service Points',\n                        fieldname: 'service_points',\n                        fieldtype: 'Table',\n                        options: 'Service Point',\n                        fields: [{\n                                \"fieldname\": \"point_type\",\n                                \"fieldtype\": \"Select\",\n                                \"in_list_view\": 1,\n                                \"label\": \"Point Type\",\n                                \"options\": ['Room', 'Counter'],\n                                \"reqd\": 1,\n                            },\n                            {\n                                \"fieldname\": \"point_name\",\n                                \"fieldtype\": \"Data\",\n                                \"in_list_view\": 1,\n                                \"label\": \"Point Name\",\n                                \"reqd\": 1\n                            },\n                            {\n                                \"fieldname\": \"service_stage\",\n                                \"fieldtype\": \"Int\",\n                                \"in_list_view\": 1,\n                                \"label\": \"Service Stage\",\n                                \"reqd\": 1\n                            }\n                        ]\n                    } */\n                ],\n                primary_action_label: 'Submit',\n                primary_action: (values) => {\n                    console.log(values)\n                    frm.set_value(\n                        values\n                    )\n                    frm.set_value({\n                        \"allow_appointment\": values.allow_appointments\n                    })\n                    frm.set_value({\n                        \"service_unit_type\": values.service_unit_type\n                    })\n                    frm.set_value({\n                            \"custom_warehouse\": values.custom_warehouse\n                        })\n                        // refresh_field\n                        // console.error(values)\n                    frm.dirty()\n                    frm.save()\n                        //  after saving\n                        // frm.call({\n                        //     // doc: this.frm.doc,\n                        //     method: 'clinical.utils.update_healthcare_service_unit',\n                        //     args: {\n                        //         name: frm.doc.name,\n                        //         payload: values\n                        //     },\n                        //     callback: function(r) {\n                        //         if (r) {\n                        //             dialog.hide();\n                        //             frm.reload_doc();\n                        //             frappe.show_alert({\n                        //                 message: __('Update Successfully'),\n                        //                 indicator: 'green'\n                        //             }, 5);\n                        //         } else {\n                        //             frappe.show_alert({\n                        //                 message: __('Failed to update'),\n                        //                 indicator: 'orange'\n                        //             }, 5);\n                        //         }\n                        //     }\n                        // });\n\n                },\n                secondary_action_label: 'Cancel',\n                secondary_action: (values) => {\n                    dialog.hide()\n                }\n            });\n            dialog.show();\n        })\n    },\n    inpatient_standing_charges_add(frm) {\n        frm.set_query(\"item\", \"inpatient_standing_charges\", function(doc, cdt, cdn) {\n            return {\n                filters: {\n                    is_stock_item: 0,\n                    has_variants: 0,\n                    variant_of: ['!=', \"\"],\n                }\n            };\n        });\n\n    }\n})\n\nfrappe.ui.form.on('File', {\n    refresh: function(frm) {\n        frm.add_custom_button('Preview', () => {\n            // frappe.set_route('Form', frm.doc.reference_type, frm.doc.reference_name);\n            let d = new frappe.ui.Dialog({\n                title: `File Preview`,\n                fields: [{\n                    label: 'Preview',\n                    fieldname: 'preview',\n                    fieldtype: 'Read Only',\n                }, ],\n                primary_action_label: 'Close',\n                primary_action(values) {\n                    d.hide();\n                }\n            });\n            d.set_values({\n                preview: `<embed src=\"${frm.doc.file_url}\" width=\"900px\" height=\"800px\" />`\n            });\n            d.show();\n            d.$wrapper.find('.modal-content').css('width', '1000px');\n            d.$wrapper.find('.modal-content').css('height', '700px');\n            d.$wrapper.find('.modal-content').css('margin-left', '-250px');\n        })\n    }\n});\n\nfrappe.ui.form.on(\"Lab Test\", {\n    refresh: function(frm) {\n        if(frm.doc.workflow_state === 'Awaiting Checkin'){\n            frm.set_intro('Action to awaiting payment to proceed. For inpatient click the Re-Evaluate Payments');\n            frm.set_intro('Please action on all test(s) that have been paid for', 'red');\n        }\n        if (frm.doc.status === 'Cancelled') {\n            frm.set_intro('This test has been cancelled, check the comments for reason of cancellation');\n        }\n        frm.toggle_reqd('employee', frm.doc.workflow_state === 'Processing');\n        frm.toggle_reqd('employee', frm.doc.workflow_state === 'To Receive');\n        frm.add_custom_button('Re-Evaluate Payments/Emergency/Inpatient', () => {\n            api({\n                method: 'billing.billing.api.sales_invoice.create_sales_invoice.re_eveluate_sales_orders',\n                args: {\n                    patient_name: frm.doc.patient,\n                    lab_name:frm.doc.name\n                }\n            }).then(() => {\n                frm.reload_doc();\n            })\n        });\n        frm.change_custom_button_type('Re-Evaluate Payments/Emergency/Inpatient', null, 'primary');\n        if (frappe.user_roles.includes('Physician') || frappe.user_roles.includes('Administrator') || frappe.user_roles.includes('Support Team Master') || frappe.user_roles.includes('Laboratory User')) {\n            if (frm.doc.workflow_state === 'Awaiting Checkin' || frm.doc.workflow_state === 'Awaiting Payment' || frm.doc.workflow_state === 'Awaiting Payment' || frm.doc.workflow_state === 'Awaiting Sampling') {\n                frm.add_custom_button('Cancel Test', () => {\n                    frappe.confirm('Are you sure you want to proceed?',\n                        () => {\n                            // action to perform if Yes is selected\n                            frappe.prompt([{\n                                label: 'Reason For Cancellation',\n                                fieldname: 'comment',\n                                fieldtype: 'Text',\n                                reqd: 1\n                            }], (values) => {\n                                api({\n                                    method: 'clinical.api.patient_encounter.patient_encounter.cancel_lab_test',\n                                    args: {\n                                        lab_name: frm.doc.name,\n                                        comment: values.comment\n                                    }\n                                }).then(() => {\n                                    frm.reload_doc();\n                                })\n                            })\n                        })\n                });\n                frm.change_custom_button_type('Cancel Test', null, 'danger');\n            }\n        } else {\n            // frm.disable_save();\n        }\n    }\n})\n\nfrappe.ui.form.on('Lab Test', \"processing_lab\" ,function(frm, cdt, cdn){\n    if (frm.is_dirty()) {\n        frm.save();\n    }\n});\n\nfrappe.ui.form.on('Lab Test', \"employee\" ,function(frm, cdt, cdn){\n    if (frm.is_dirty()) {\n        frm.save();\n    }\n});\n\nfrappe.ui.form.on(\"Patient Encounter\", {\n    refresh: function(frm) {\n        frm.add_custom_button('Re-Create Labs', () => {\n            api({\n                method: 'clinical.api.patient_encounter.patient_encounter.re_create_lab_test',\n                args: {\n                    encounter_name: frm.doc.name,\n                }\n            }).then(() => {\n                frm.reload_doc();\n            })\n        })\n    }\n})"],
  "mappings": "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",
  "names": []
}
